digraph windows_struct {
    rankdir="RL"
    node [shape=record, fontname="Microsoft Yahei"]
    _EPROCESS [
        fillcolor="#F875AA"   
        style=filled
        label="<f0> _EPROCESS|
            <f1> [+0x000] Pcb              : _KPROCESS\l 指向 KPROCESS\l|
            <f2> [+0x438] ProcessLock      : _EX_PUSH_LOCK\l 执行体的保护锁\l|
            <f3> [+0x440] UniqueProcessId  : Ptr64 Void\l 进程ID\l|
            <f4> [+0x448] ActiveProcessLinks : _LIST_ENTRY\l 域是一个双链表节点，所有活动进程，可以用来枚举所有进程\l|
            <f5> [+0x458] RundownProtect   : _EX_RUNDOWN_REF\l 进程停止保护锁\l|
            <f6> [+0x460] AccountingFolded : Pos 1, 1 Bit\l|
            <f7> [+0x460] AffinityPermanent : Pos 18, 1 Bit\l|
            <f8> [+0x460] AffinityUpdateEnable : Pos 19, 1 Bit\l|
            <f9> [+0x460] CrossSessionCreate : Pos 7, 1 Bit\l|
            <f10> [+0x460] DefaultPagePriority : Pos 12, 3 Bits\l|
            <f11> [+0x460] DisableSystemAllowedCpuSet : Pos 27, 1 Bit\l|
            <f12> [+0x460] EmptyJobEvaluated : Pos 11, 1 Bit\l|
            <f13> [+0x460] EnableReadVmLogging : Pos 24, 1 Bit\l|
            <f14> [+0x460] EnableWriteVmLogging : Pos 25, 1 Bit\l|
            <f15> [+0x460] ExitProcessReported : Pos 3, 1 Bit\l|
            <f16> [+0x460] ExplicitAffinity : Pos 21, 1 Bit\l|
            <f17> [+0x460] FatalAccessTerminationRequested : Pos 26, 1 Bit\l|
            <f18> [+0x460] Flags2           : Uint4B\l|
            <f19> [+0x460] ForceWakeCharge  : Pos 6, 1 Bit\l|
            <f20> [+0x460] InPrivate        : Pos 31, 1 Bit\l|
            <f21> [+0x460] JobNotReallyActive : Pos 0, 1 Bit\l|
            <f22> [+0x460] LastReportMemory : Pos 5, 1 Bit\l|
            <f23> [+0x460] NeedsHandleRundown : Pos 8, 1 Bit\l|
            <f24> [+0x460] NewProcessReported : Pos 2, 1 Bit\l|
            <f25> [+0x460] PicoCreated      : Pos 10, 1 Bit\l|
            <f26> [+0x460] PrimaryTokenFrozen : Pos 15, 1 Bit\l|
            <f27> [+0x460] ProcessExecutionState : Pos 22, 2 Bits\l|
            <f28> [+0x460] ProcessStateChangeInProgress : Pos 30, 1 Bit\l|
            <f29> [+0x460] ProcessStateChangeRequest : Pos 28, 2 Bits\l|
            <f30> [+0x460] ProcessVerifierTarget : Pos 16, 1 Bit\l|
            <f31> [+0x460] PropagateNode    : Pos 20, 1 Bit\l|
            <f32> [+0x460] RefTraceEnabled  : Pos 9, 1 Bit\l|
            <f33> [+0x460] ReportCommitChanges : Pos 4, 1 Bit\l|
            <f34> [+0x460] RestrictSetThreadContext : Pos 17, 1 Bit\l|
            <f35> [+0x464] AddressSpaceInitialized : Pos 10, 2 Bits\l|
            <f36> [+0x464] Background       : Pos 20, 1 Bit\l|
            <f37> [+0x464] BreakOnTermination : Pos 13, 1 Bit\l|
            <f38> [+0x464] CreateReported   : Pos 0, 1 Bit\l|
            <f39> [+0x464] DefaultIoPriority : Pos 27, 3 Bits\l|
            <f40> [+0x464] DeprioritizeViews : Pos 14, 1 Bit\l|
            <f41> [+0x464] FailFastOnCommitFail : Pos 8, 1 Bit\l|
            <f42> [+0x464] Flags            : Uint4B\l 进程标志位\l|
            <f43> [+0x464] HasAddressSpace  : Pos 18, 1 Bit\l|
            <f44> [+0x464] ImageNotifyDone  : Pos 22, 1 Bit\l|
            <f45> [+0x464] LaunchPrefetched : Pos 19, 1 Bit\l|
            <f46> [+0x464] ManageExecutableMemoryWrites : Pos 4, 1 Bit\l|
            <f47> [+0x464] NoDebugInherit   : Pos 1, 1 Bit\l|
            <f48> [+0x464] OutswapEnabled   : Pos 6, 1 Bit\l|
            <f49> [+0x464] Outswapped       : Pos 7, 1 Bit\l|
            <f50> [+0x464] OverrideAddressSpace : Pos 17, 1 Bit\l|
            <f51> [+0x464] PdeUpdateNeeded  : Pos 23, 1 Bit\l|
            <f52> [+0x464] ProcessDelete    : Pos 3, 1 Bit\l|
            <f53> [+0x464] ProcessExiting   : Pos 2, 1 Bit\l|
            <f54> [+0x464] ProcessInserted  : Pos 26, 1 Bit\l|
            <f55> [+0x464] ProcessInSession : Pos 16, 1 Bit\l|
            <f56> [+0x464] ProcessRundown   : Pos 25, 1 Bit\l|
            <f57> [+0x464] ProcessSelfDelete : Pos 30, 1 Bit\l|
            <f58> [+0x464] SetTimerResolution : Pos 12, 1 Bit\l|
            <f59> [+0x464] SetTimerResolutionLink : Pos 31, 1 Bit\l|
            <f60> [+0x464] VdmAllowed       : Pos 24, 1 Bit\l|
            <f61> [+0x464] VmDeleted        : Pos 5, 1 Bit\l|
            <f62> [+0x464] VmTopDown        : Pos 21, 1 Bit\l|
            <f63> [+0x464] Wow64VaSpace4Gb  : Pos 9, 1 Bit\l|
            <f64> [+0x464] WriteWatch       : Pos 15, 1 Bit\l|
            <f65> [+0x468] CreateTime       : _LARGE_INTEGER\l|
            <f66> [+0x470] ProcessQuotaUsage : [2] Uint8B\l|
            <f67> [+0x480] ProcessQuotaPeak : [2] Uint8B\l|
            <f68> [+0x490] PeakVirtualSize  : Uint8B\l 虚拟内存大小的尖峰值\l|
            <f69> [+0x498] VirtualSize      : Uint8B\l 进程的虚拟内存大小\l|
            <f70> [+0x4a0] SessionProcessLinks : _LIST_ENTRY\l 当进程加入系统会话时，将节点加入到该会话的进程链表中\l|
            <f71> [+0x4b0] ExceptionPortData : Ptr64 Void\l 异常端口的数据\l|
            <f72> [+0x4b0] ExceptionPortState : Pos 0, 3 Bits\l 异常端口状态\l|
            <f73> [+0x4b0] ExceptionPortValue : Uint8B\l 异常端口\l|
            <f74> [+0x4b8] Token            : _EX_FAST_REF\l 进程的访问令牌，用于安全检查\l|
            <f75> [+0x4c0] MmReserved       : Uint8B\l|
            <f76> [+0x4c8] AddressCreationLock : _EX_PUSH_LOCK\l 守护互斥体锁，保护对地址空间的操作。当内核代码需要对虚拟地址空间，进行操作时， 它必须在AddressCreationLock 上执行锁操作， 完成以后再解锁\l|
            <f77> [+0x4d0] PageTableCommitmentLock : _EX_PUSH_LOCK\l|
            <f78> [+0x4d8] RotateInProgress : Ptr64 _ETHREAD\l|
            <f79> [+0x4e0] ForkInProgress   : Ptr64 _ETHREAD\l 指向正在复制地址空间的那个线程\l|
            <f80> [+0x4e8] CommitChargeJob  : Ptr64 _EJOB\l|
            <f81> [+0x4f0] CloneRoot        : _RTL_AVL_TREE\l|
            <f82> [+0x4f8] NumberOfPrivatePages : Uint8B\l|
            <f83> [+0x500] NumberOfLockedPages : Uint8B\l|
            <f84> [+0x508] Win32Process     : Ptr64 Void\l|
            <f85> [+0x510] Job              : Ptr64 _EJOB\l|
            <f86> [+0x518] SectionObject    : Ptr64 Void\l|
            <f87> [+0x520] SectionBaseAddress : Ptr64 Void\l|
            <f88> [+0x528] Cookie           : Uint4B\l 代表该进程的随机值，第一次调用ntqueryinformation函数获取cookie值得时候，随机生成一个值，以后就用此值代表进程\l|
            <f89> [+0x530] WorkingSetWatch  : Ptr64 _PAGEFAULT_HISTORY\l|
            <f90> [+0x538] Win32WindowStation : Ptr64 Void\l|
            <f91> [+0x540] InheritedFromUniqueProcessId : Ptr64 Void\l 父进程的标识符\l|
            <f92> [+0x548] OwnerProcessId   : Uint8B\l|
            <f93> [+0x550] Peb              : Ptr64 _PEB\l 进程环境块\l|
            <f94> [+0x558] Session          : Ptr64 _MM_SESSION_SPACE\l 指向进程所在的系统会话\l|
            <f95> [+0x560] Spare1           : Ptr64 Void\l|
            <f96> [+0x568] QuotaBlock       : Ptr64 _EPROCESS_QUOTA_BLOCK\l|
            <f97> [+0x570] ObjectTable      : Ptr64 _HANDLE_TABLE\l 进程的句柄表\l|
            <f98> [+0x578] DebugPort        : Ptr64 Void\l 调试端口，不为0被调试\l|
            <f99> [+0x580] WoW64Process     : Ptr64 _EWOW64PROCESS\l|
            <f100> [+0x588] DeviceMap        : Ptr64 Void\l 域指向进程使用的设备表\l|
            <f101> [+0x590] EtwDataSource    : Ptr64 Void\l|
            <f102> [+0x598] PageDirectoryPte : Uint8B\l 顶级页目录表的页表项\l|
            <f103> [+0x5a0] ImageFilePointer : Ptr64 _FILE_OBJECT\l|
            <f104> [+0x5a8] ImageFileName    : [15] UChar\l 进程的映像文件名\l|
            <f105> [+0x5b7] PriorityClass    : UChar\l 进程优先级程度\l|
            <f106> [+0x5b8] SecurityPort     : Ptr64 Void\l 进程与lsass进程的跨进程通信端口\l|
            <f107> [+0x5c0] SeAuditProcessCreationInfo : _SE_AUDIT_PROCESS_CREATION_INFO\l 创建进程时指定的进程映像全路径名\l|
            <f108> [+0x5c8] JobLinks         : _LIST_ENTRY\l JOB中的所有进程\l|
            <f109> [+0x5d8] HighestUserAddress : Ptr64 Void\l|
            <f110> [+0x5e0] ThreadListHead   : _LIST_ENTRY\l 进程中的所有线程\l|
            <f111> [+0x5f0] ActiveThreads    : Uint4B\l 当前进程有多少个活动线程\l|
            <f112> [+0x5f4] ImagePathHash    : Uint4B\l|
            <f113> [+0x5f8] DefaultHardErrorProcessing : Uint4B\l 指定默认的硬件错误\l|
            <f114> [+0x5fc] LastThreadExitStatus : Int4B\l|
            <f115> [+0x600] PrefetchTrace    : _EX_FAST_REF\l 指向与该进程关联的一个预取痕迹结构\l|
            <f116> [+0x608] LockedPagesList  : Ptr64 Void\l 记录哪些页面被锁住\l|
            <f117> [+0x610] ReadOperationCount : _LARGE_INTEGER\l 记录NtReadFile服务调用次数\l|
            <f118> [+0x618] WriteOperationCount : _LARGE_INTEGER\l 记录NtWriteFile服务调用次数\l|
            <f119> [+0x620] OtherOperationCount : _LARGE_INTEGER\l 记录除读写操作以外的其他I/O服务次数\l|
            <f120> [+0x628] ReadTransferCount : _LARGE_INTEGER\l I/O读操作完成的次数\l|
            <f121> [+0x630] WriteTransferCount : _LARGE_INTEGER\l I/O写操作完成的次数\l|
            <f122> [+0x638] OtherTransferCount : _LARGE_INTEGER\l 非读写操作完成的次数\l|
            <f123> [+0x640] CommitChargeLimit : Uint8B\l 已提交的页面数量的限制值\l|
            <f124> [+0x648] CommitCharge     : Uint8B\l 虚拟内存已提交的页面数量\l|
            <f125> [+0x650] CommitChargePeak : Uint8B\l 尖峰时刻已提交的页面数量\l|
            <f126> [+0x680] Vm               : _MMSUPPORT_FULL\l Windows为每个进程管理虚拟内存的一个结构体\l|
            <f127> [+0x7c0] MmProcessLinks   : _LIST_ENTRY\l|
            <f128> [+0x7d0] ModifiedPageCount : Uint4B\l 记录该进程中已修复页面的数量\l|
            <f129> [+0x7d4] ExitStatus       : Int4B\l 进程退出状态\l|
            <f130> [+0x7d8] VadRoot          : _RTL_AVL_TREE\l|
            <f131> [+0x7e0] VadHint          : Ptr64 Void\l|
            <f132> [+0x7e8] VadCount         : Uint8B\l|
            <f133> [+0x7f0] VadPhysicalPages : Uint8B\l|
            <f134> [+0x7f8] VadPhysicalPagesLimit : Uint8B\l|
            <f135> [+0x800] AlpcContext      : _ALPC_PROCESS_CONTEXT\l|
            <f136> [+0x820] TimerResolutionLink : _LIST_ENTRY\l|
            <f137> [+0x830] TimerResolutionStackRecord : Ptr64 _PO_DIAG_STACK_RECORD\l|
            <f138> [+0x838] RequestedTimerResolution : Uint4B\l|
            <f139> [+0x83c] SmallestTimerResolution : Uint4B\l|
            <f140> [+0x840] ExitTime         : _LARGE_INTEGER\l|
            <f141> [+0x848] InvertedFunctionTable : Ptr64 _INVERTED_FUNCTION_TABLE\l|
            <f142> [+0x850] InvertedFunctionTableLock : _EX_PUSH_LOCK\l|
            <f143> [+0x858] ActiveThreadsHighWatermark : Uint4B\l|
            <f144> [+0x85c] LargePrivateVadCount : Uint4B\l|
            <f145> [+0x860] ThreadListLock   : _EX_PUSH_LOCK\l|
            <f146> [+0x868] WnfContext       : Ptr64 Void\l|
            <f147> [+0x870] ServerSilo       : Ptr64 _EJOB\l|
            <f148> [+0x878] SignatureLevel   : UChar\l|
            <f149> [+0x879] SectionSignatureLevel : UChar\l|
            <f150> [+0x87a] Protection       : _PS_PROTECTION\l|
            <f151> [+0x87b] GhostCount       : Pos 3, 3 Bits\l|
            <f152> [+0x87b] HangCount        : Pos 0, 3 Bits\l|
            <f153> [+0x87b] PrefilterException : Pos 6, 1 Bit\l|
            <f154> [+0x87c] AddressPolicyFrozen : Pos 14, 1 Bit\l|
            <f155> [+0x87c] AltSyscall       : Pos 25, 1 Bit\l|
            <f156> [+0x87c] AuxiliaryProcess : Pos 5, 1 Bit\l|
            <f157> [+0x87c] CommitFailLogged : Pos 10, 1 Bit\l|
            <f158> [+0x87c] Crashed          : Pos 2, 1 Bit\l|
            <f159> [+0x87c] DisallowUserTerminate : Pos 27, 1 Bit\l|
            <f160> [+0x87c] EnableProcessSuspendResumeLogging : Pos 19, 1 Bit\l|
            <f161> [+0x87c] EnableThreadSuspendResumeLogging : Pos 20, 1 Bit\l|
            <f162> [+0x87c] Flags3           : Uint4B\l|
            <f163> [+0x87c] ForegroundExternal : Pos 16, 1 Bit\l|
            <f164> [+0x87c] ForegroundSystem : Pos 17, 1 Bit\l|
            <f165> [+0x87c] HideImageBaseAddresses : Pos 13, 1 Bit\l|
            <f166> [+0x87c] HighGraphicsPriority : Pos 9, 1 Bit\l|
            <f167> [+0x87c] HighMemoryPriority : Pos 18, 1 Bit\l|
            <f168> [+0x87c] IndirectCpuSets  : Pos 7, 1 Bit\l|
            <f169> [+0x87c] JobVadsAreTracked : Pos 3, 1 Bit\l|
            <f170> [+0x87c] Minimal          : Pos 0, 1 Bit\l|
            <f171> [+0x87c] ProcessFirstResume : Pos 15, 1 Bit\l|
            <f172> [+0x87c] RelinquishedCommit : Pos 8, 1 Bit\l|
            <f173> [+0x87c] ReplacingPageRoot : Pos 1, 1 Bit\l|
            <f174> [+0x87c] ReserveFailLogged : Pos 11, 1 Bit\l|
            <f175> [+0x87c] SecurityDomainChanged : Pos 21, 1 Bit\l|
            <f176> [+0x87c] SecurityFreezeComplete : Pos 22, 1 Bit\l|
            <f177> [+0x87c] SubsystemProcess : Pos 6, 1 Bit\l|
            <f178> [+0x87c] SystemProcess    : Pos 12, 1 Bit\l|
            <f179> [+0x87c] TimerResolutionIgnore : Pos 26, 1 Bit\l|
            <f180> [+0x87c] VadTrackingDisabled : Pos 4, 1 Bit\l|
            <f181> [+0x87c] VmProcessorHost  : Pos 23, 1 Bit\l|
            <f182> [+0x87c] VmProcessorHostTransition : Pos 24, 1 Bit\l|
            <f183> [+0x880] DeviceAsid       : Int4B\l|
            <f184> [+0x888] SvmData          : Ptr64 Void\l|
            <f185> [+0x890] SvmProcessLock   : _EX_PUSH_LOCK\l|
            <f186> [+0x898] SvmLock          : Uint8B\l|
            <f187> [+0x8a0] SvmProcessDeviceListHead : _LIST_ENTRY\l|
            <f188> [+0x8b0] LastFreezeInterruptTime : Uint8B\l|
            <f189> [+0x8b8] DiskCounters     : Ptr64 _PROCESS_DISK_COUNTERS\l|
            <f190> [+0x8c0] PicoContext      : Ptr64 Void\l|
            <f191> [+0x8c8] EnclaveTable     : Ptr64 Void\l|
            <f192> [+0x8d0] EnclaveNumber    : Uint8B\l|
            <f193> [+0x8d8] EnclaveLock      : _EX_PUSH_LOCK\l|
            <f194> [+0x8e0] HighPriorityFaultsAllowed : Uint4B\l|
            <f195> [+0x8e8] EnergyContext    : Ptr64 _PO_PROCESS_ENERGY_CONTEXT\l|
            <f196> [+0x8f0] VmContext        : Ptr64 Void\l|
            <f197> [+0x8f8] SequenceNumber   : Uint8B\l|
            <f198> [+0x900] CreateInterruptTime : Uint8B\l|
            <f199> [+0x908] CreateUnbiasedInterruptTime : Uint8B\l|
            <f200> [+0x910] TotalUnbiasedFrozenTime : Uint8B\l|
            <f201> [+0x918] LastAppStateUpdateTime : Uint8B\l|
            <f202> [+0x920] LastAppState     : Pos 61, 3 Bits\l|
            <f203> [+0x920] LastAppStateUptime : Pos 0, 61 Bits\l|
            <f204> [+0x928] SharedCommitCharge : Uint8B\l|
            <f205> [+0x930] SharedCommitLock : _EX_PUSH_LOCK\l|
            <f206> [+0x938] SharedCommitLinks : _LIST_ENTRY\l|
            <f207> [+0x948] AllowedCpuSets   : Uint8B\l|
            <f208> [+0x948] AllowedCpuSetsIndirect : Ptr64 Uint8B\l|
            <f209> [+0x950] DefaultCpuSets   : Uint8B\l|
            <f210> [+0x950] DefaultCpuSetsIndirect : Ptr64 Uint8B\l|
            <f211> [+0x958] DiskIoAttribution : Ptr64 Void\l|
            <f212> [+0x960] DxgProcess       : Ptr64 Void\l|
            <f213> [+0x968] Win32KFilterSet  : Uint4B\l|
            <f214> [+0x970] ProcessTimerDelay : _PS_INTERLOCKED_TIMER_DELAY_VALUES\l|
            <f215> [+0x978] KTimerSets       : Uint4B\l|
            <f216> [+0x97c] KTimer2Sets      : Uint4B\l|
            <f217> [+0x980] ThreadTimerSets  : Uint4B\l|
            <f218> [+0x988] VirtualTimerListLock : Uint8B\l|
            <f219> [+0x990] VirtualTimerListHead : _LIST_ENTRY\l|
            <f220> [+0x9a0] WakeChannel      : _WNF_STATE_NAME\l|
            <f221> [+0x9a0] WakeInfo         : _PS_PROCESS_WAKE_INFORMATION\l|
            <f222> [+0x9d0] MitigationFlags  : Uint4B\l|
            <f223> [+0x9d0] MitigationFlagsValues : \<anonymous-tag\>\l|
            <f224> [+0x9d4] MitigationFlags2 : Uint4B\l|
            <f225> [+0x9d4] MitigationFlags2Values : \<anonymous-tag\>\l|
            <f226> [+0x9d8] PartitionObject  : Ptr64 Void\l|
            <f227> [+0x9e0] SecurityDomain   : Uint8B\l|
            <f228> [+0x9e8] ParentSecurityDomain : Uint8B\l|
            <f229> [+0x9f0] CoverageSamplerContext : Ptr64 Void\l|
            <f230> [+0x9f8] MmHotPatchContext : Ptr64 Void\l|
            <f231> [+0xa00] DynamicEHContinuationTargetsTree : _RTL_AVL_TREE\l|
            <f232> [+0xa08] DynamicEHContinuationTargetsLock : _EX_PUSH_LOCK\l|
            <f233> [+0xa10] DynamicEnforcedCetCompatibleRanges : _PS_DYNAMIC_ENFORCED_ADDRESS_RANGES\l|
            <f234> [+0xa20] DisabledComponentFlags : Uint4B\l|
            <f235> [+0xa28] PathRedirectionHashes : Ptr64 Uint4B\l"
    ]
    _ETHREAD [
        fillcolor="#F875AA"   
        style=filled
        label="<f0> _ETHREAD|
            <f1> [+0x000] Tcb              : _KTHREAD\l KTHREAD结构\l|
            <f2> [+0x430] CreateTime       : _LARGE_INTEGER\l 线程创建时间\l|
            <f3> [+0x438] ExitTime         : _LARGE_INTEGER\l 线程退出时间\l|
            <f4> [+0x438] KeyedWaitChain   : _LIST_ENTRY\l 带键事件等待链表\l|
            <f5> [+0x448] ForwardLinkShadow : Ptr64 Void\l|
            <f6> [+0x448] PostBlockList    : _LIST_ENTRY\l 链表头，用于线程向配置管理器登记注册表键的变化通知\l|
            <f7> [+0x450] StartAddress     : Ptr64 Void\l 包含了线程的启动地址，这是真正的线程启动地址\l|
            <f8> [+0x458] KeyedWaitValue   : Ptr64 Void\l 带键事件的键值\l|
            <f9> [+0x458] ReaperLink       : Ptr64 _ETHREAD\l 线程退出时，该节点挂到 PsReaperListHead 链表上，在线程回收器（reaper）的工作项目（WorkItem）中该线程的内核栈得以收回。\l|
            <f10> [+0x458] TerminationPort  : Ptr64 _TERMINATION_PORT\l 线程退出时，系统通知所有已经登记过要接收其终止事件的端口\l|
            <f11> [+0x460] ActiveTimerListLock : Uint8B\l 定时器链表自旋锁\l|
            <f12> [+0x468] ActiveTimerListHead : _LIST_ENTRY\l 包含当前线程的所有定时器\l|
            <f13> [+0x478] Cid              : _CLIENT_ID\l 线程唯一标识符，由两部分组成，UniqueProcess 和 UniqueThread，UniqueProcess 等于所属进程的 UniqueProcessId ，UniqueThread 等于此线程对象在进程句柄表中的句柄\l|
            <f14> [+0x488] AlpcWaitSemaphore : _KSEMAPHORE\l|
            <f15> [+0x488] KeyedWaitSemaphore : _KSEMAPHORE\l 用于处理带键的事件\l|
            <f16> [+0x4a8] ClientSecurity   : _PS_CLIENT_SECURITY_CONTEXT\l|
            <f17> [+0x4b0] IrpList          : _LIST_ENTRY\l|
            <f18> [+0x4c0] TopLevelIrp      : Uint8B\l|
            <f19> [+0x4c8] DeviceToVerify   : Ptr64 _DEVICE_OBJECT\l 指向一个待检验的设备对象\l|
            <f20> [+0x4d0] Win32StartAddress : Ptr64 Void\l Windows 子系统的启动地址，(通常是系统dll的线程启动地址，往往是相同的，Win32StartAddress 域中包含的才真正是Windows 子系统接收到的线程启动地址)\l|
            <f21> [+0x4d8] ChargeOnlySession : Ptr64 Void\l|
            <f22> [+0x4e0] LegacyPowerObject : Ptr64 Void\l|
            <f23> [+0x4e8] ThreadListEntry  : _LIST_ENTRY\l 是一个双链表的节点，每个线程都会加入到它所属进程EPROCESS结构的ThreadListHead 双链表中\l|
            <f24> [+0x4f8] RundownProtect   : _EX_RUNDOWN_REF\l 是线程的停止保护锁\l|
            <f25> [+0x500] ThreadLock       : _EX_PUSH_LOCK\l 一把推锁， 用于保护线程的数据属性\l|
            <f26> [+0x508] ReadClusterSize  : Uint4B\l 指明了在一次I/O操作中读取多少个页面\l|
            <f27> [+0x50c] MmLockOrdering   : Int4B\l|
            <f28> [+0x510] ActiveImpersonationInfo : Pos 3, 1 Bit\l|
            <f29> [+0x510] BreakOnTermination : Pos 5, 1 Bit\l|
            <f30> [+0x510] CopyTokenOnOpen  : Pos 8, 1 Bit\l|
            <f31> [+0x510] CrossThreadFlags : Uint4B\l 是一些针对跨线程访问的标志位\l|
            <f32> [+0x510] DbgWerUserReportActive : Pos 21, 1 Bit\l|
            <f33> [+0x510] DisableDynamicCodeOptOut : Pos 18, 1 Bit\l|
            <f34> [+0x510] ExplicitCaseSensitivity : Pos 19, 1 Bit\l|
            <f35> [+0x510] ForcedSelfTrimActive : Pos 22, 1 Bit\l|
            <f36> [+0x510] HardErrorsAreDisabled : Pos 4, 1 Bit\l|
            <f37> [+0x510] HideFromDebugger : Pos 2, 1 Bit\l|
            <f38> [+0x510] IndirectCpuSets  : Pos 17, 1 Bit\l|
            <f39> [+0x510] PicoNotifyExit   : Pos 20, 1 Bit\l|
            <f40> [+0x510] ReservedCrossThreadFlags : Pos 24, 8 Bits\l|
            <f41> [+0x510] RundownFail      : Pos 15, 1 Bit\l|
            <f42> [+0x510] SamplingCoverage : Pos 23, 1 Bit\l|
            <f43> [+0x510] SkipCreationMsg  : Pos 6, 1 Bit\l|
            <f44> [+0x510] SkipTerminationMsg : Pos 7, 1 Bit\l|
            <f45> [+0x510] Terminated       : Pos 0, 1 Bit\l|
            <f46> [+0x510] ThreadInserted   : Pos 1, 1 Bit\l|
            <f47> [+0x510] ThreadIoPriority : Pos 9, 3 Bits\l|
            <f48> [+0x510] ThreadPagePriority : Pos 12, 3 Bits\l|
            <f49> [+0x510] UmsForceQueueTermination : Pos 16, 1 Bit\l|
            <f50> [+0x514] ActiveExWorker   : Pos 0, 1 Bit\l|
            <f51> [+0x514] ActivePageLists  : Pos 8, 1 Bit\l|
            <f52> [+0x514] ClonedThread     : Pos 4, 1 Bit\l|
            <f53> [+0x514] KeyedEventInUse  : Pos 5, 1 Bit\l|
            <f54> [+0x514] MemoryMaker      : Pos 1, 1 Bit\l|
            <f55> [+0x514] ReservedSameThreadPassiveFlags : Pos 12, 20 Bits\l|
            <f56> [+0x514] RespectIoPriority : Pos 7, 1 Bit\l|
            <f57> [+0x514] SameThreadPassiveFlags : Uint4B\l 一些只有在最低中断级别（被动级别）上才可以访问的标志位，并且只能被该线程自身访问\l|
            <f58> [+0x514] SecureContext    : Pos 9, 1 Bit\l|
            <f59> [+0x514] SelfTerminate    : Pos 6, 1 Bit\l|
            <f60> [+0x514] StoreLockThread  : Pos 2, 2 Bits\l|
            <f61> [+0x514] WorkloadClass    : Pos 11, 1 Bit\l|
            <f62> [+0x514] ZeroPageThread   : Pos 10, 1 Bit\l|
            <f63> [+0x518] EtwCalloutActive : Pos 4, 1 Bit\l|
            <f64> [+0x518] HardFaultBehavior : Pos 2, 1 Bit\l|
            <f65> [+0x518] OwnsProcessAddressSpaceExclusive : Pos 0, 1 Bit\l|
            <f66> [+0x518] OwnsProcessAddressSpaceShared : Pos 1, 1 Bit\l|
            <f67> [+0x518] OwnsVadExclusive : Pos 7, 1 Bit\l|
            <f68> [+0x518] Prefetching      : Pos 6, 1 Bit\l|
            <f69> [+0x518] SameThreadApcFlags : Uint4B\l 是一些在APC 中断级别上被该线程自身访问的标志位\l|
            <f70> [+0x518] StartAddressInvalid : Pos 3, 1 Bit\l|
            <f71> [+0x518] SuppressSymbolLoad : Pos 5, 1 Bit\l|
            <f72> [+0x519] AllowKernelWritesToExecutableMemory : Pos 5, 1 Bit\l|
            <f73> [+0x519] AllowUserWritesToExecutableMemory : Pos 4, 1 Bit\l|
            <f74> [+0x519] OwnsVadShared    : Pos 6, 1 Bit\l|
            <f75> [+0x519] SystemPagePriority : Pos 1, 3 Bits\l|
            <f76> [+0x519] SystemPagePriorityActive : Pos 0, 1 Bit\l|
            <f77> [+0x51c] CacheManagerActive : UChar\l|
            <f78> [+0x51d] DisablePageFaultClustering : UChar\l 用于控制页面交换的聚集与否\l|
            <f79> [+0x51e] ActiveFaultCount : UChar\l|
            <f80> [+0x51f] LockOrderState   : UChar\l|
            <f81> [+0x520] PerformanceCountLowReserved : Uint4B\l|
            <f82> [+0x524] PerformanceCountHighReserved : Int4B\l|
            <f83> [+0x528] AlpcMessageId    : Uint8B\l|
            <f84> [+0x530] AlpcMessage      : Ptr64 Void\l|
            <f85> [+0x530] AlpcReceiveAttributeSet : Uint4B\l|
            <f86> [+0x538] AlpcWaitListEntry : _LIST_ENTRY\l|
            <f87> [+0x548] ExitStatus       : Int4B\l|
            <f88> [+0x54c] CacheManagerCount : Uint4B\l|
            <f89> [+0x550] IoBoostCount     : Uint4B\l|
            <f90> [+0x554] IoQoSBoostCount  : Uint4B\l|
            <f91> [+0x558] IoQoSThrottleCount : Uint4B\l|
            <f92> [+0x55c] KernelStackReference : Uint4B\l|
            <f93> [+0x560] BoostList        : _LIST_ENTRY\l|
            <f94> [+0x570] DeboostList      : _LIST_ENTRY\l|
            <f95> [+0x580] BoostListLock    : Uint8B\l|
            <f96> [+0x588] IrpListLock      : Uint8B\l|
            <f97> [+0x590] ReservedForSynchTracking : Ptr64 Void\l|
            <f98> [+0x598] CmCallbackListHead : _SINGLE_LIST_ENTRY\l|
            <f99> [+0x5a0] ActivityId       : Ptr64 _GUID\l|
            <f100> [+0x5a8] SeLearningModeListHead : _SINGLE_LIST_ENTRY\l|
            <f101> [+0x5b0] VerifierContext  : Ptr64 Void\l|
            <f102> [+0x5b8] AdjustedClientToken : Ptr64 Void\l|
            <f103> [+0x5c0] WorkOnBehalfThread : Ptr64 Void\l|
            <f104> [+0x5c8] PropertySet      : _PS_PROPERTY_SET\l|
            <f105> [+0x5e0] PicoContext      : Ptr64 Void\l|
            <f106> [+0x5e8] UserFsBase       : Uint8B\l|
            <f107> [+0x5f0] UserGsBase       : Uint8B\l|
            <f108> [+0x5f8] EnergyValues     : Ptr64 _THREAD_ENERGY_VALUES\l|
            <f109> [+0x600] SelectedCpuSets  : Uint8B\l|
            <f110> [+0x600] SelectedCpuSetsIndirect : Ptr64 Uint8B\l|
            <f111> [+0x608] Silo             : Ptr64 _EJOB\l|
            <f112> [+0x610] ThreadName       : Ptr64 _UNICODE_STRING\l|
            <f113> [+0x618] SetContextState  : Ptr64 _CONTEXT\l|
            <f114> [+0x620] LastExpectedRunTime : Uint4B\l|
            <f115> [+0x624] HeapData         : Uint4B\l|
            <f116> [+0x628] OwnerEntryListHead : _LIST_ENTRY\l|
            <f117> [+0x638] DisownedOwnerEntryListLock : Uint8B\l|
            <f118> [+0x640] DisownedOwnerEntryListHead : _LIST_ENTRY\l|
            <f119> [+0x650] LockEntries      : [6] _KLOCK_ENTRY\l|
            <f120> [+0x890] CmDbgInfo        : Ptr64 Void\l"
    ]
    _KPROCESS [
        fillcolor="#5272F2"   
        style=filled
        label="<f0> _KPROCESS|
        <f1> [+0x000] Header           : _DISPATCHER_HEADER\l 表明是一个分发器对象，对象本身是可等待的\l|
        <f2> [+0x018] ProfileListHead  : _LIST_ENTRY\l 当进行性能分析时，作为一个节点加入全局性能分析表（KiProfileListHead）\l|
        <f3> [+0x028] DirectoryTableBase : Uint8B\l 页目录基址.0 CR3 /.1超空间的CR3\l|
        <f4> [+0x030] ThreadListHead   : _LIST_ENTRY\l 该进程的所有线程\l|
        <f5> [+0x040] ProcessLock      : Uint4B\l 进程锁\l|
        <f6> [+0x044] ProcessTimerDelay : Uint4B\l|
        <f7> [+0x048] DeepFreezeStartTime : Uint8B\l|
        <f8> [+0x050] Affinity         : _KAFFINITY_EX\l 指定了该进程的线程可以在哪些处理器上运行\l|
        <f9> [+0x0f8] AffinityPadding  : [12] Uint8B\l|
        <f10> [+0x158] ReadyListHead    : _LIST_ENTRY\l 双向链表表头，进程处于就绪态，但是未加入全局就绪表的线程\l|
        <f11> [+0x168] SwapListEntry    : _SINGLE_LIST_ENTRY\l 当一个进程要被换出内存时，通过此域加入到（KiProcessOutSwapListHead）单链表中\l|
        <f12> [+0x170] ActiveProcessors : _KAFFINITY_EX\l 在哪个处理器上\l|
        <f13> [+0x218] ActiveProcessorsPadding : [12] Uint8B\l|
        <f14> [+0x278] AutoAlignment    : Pos 0, 1 Bit\l|
        <f15> [+0x278] CacheIsolationEnabled : Pos 6, 1 Bit\l|
        <f16> [+0x278] CheckStackExtents : Pos 5, 1 Bit\l|
        <f17> [+0x278] DeepFreeze       : Pos 3, 1 Bit\l|
        <f18> [+0x278] DisableBoost     : Pos 1, 1 Bit\l|
        <f19> [+0x278] DisableQuantum   : Pos 2, 1 Bit\l|
        <f20> [+0x278] PpmPolicy        : Pos 7, 3 Bits\l|
        <f21> [+0x278] ProcessFlags     : Int4B\l|
        <f22> [+0x278] ReservedFlags    : Pos 11, 21 Bits\l|
        <f23> [+0x278] TimerVirtualization : Pos 4, 1 Bit\l|
        <f24> [+0x278] VaSpaceDeleted   : Pos 10, 1 Bit\l|
        <f25> [+0x27c] ActiveGroupsMask : Uint4B\l|
        <f26> [+0x280] BasePriority     : Char\l 基础优先级或最低优先级,该进程中的所有线程最起码的优先级(通常默认为8h)\l|
        <f27> [+0x281] QuantumReset     : Char\l|
        <f28> [+0x282] Visited          : Char\l|
        <f29> [+0x283] Flags            : _KEXECUTE_OPTIONS\l|
        <f30> [+0x284] ThreadSeed       : [20] Uint2B\l 用于该线程理想的处理器\l|
        <f31> [+0x2ac] ThreadSeedPadding : [12] Uint2B\l|
        <f32> [+0x2c4] IdealProcessor   : [20] Uint2B\l|
        <f33> [+0x2ec] IdealProcessorPadding : [12] Uint2B\l|
        <f34> [+0x304] IdealNode        : [20] Uint2B\l 进程优先选择的处理器节点\l|
        <f35> [+0x32c] IdealNodePadding : [12] Uint2B\l|
        <f36> [+0x344] IdealGlobalNode  : Uint2B\l|
        <f37> [+0x346] Spare1           : Uint2B\l|
        <f38> [+0x348] StackCount       : _KSTACK_COUNT\l|
        <f39> [+0x350] ProcessListEntry : _LIST_ENTRY\l|
        <f40> [+0x360] CycleTime        : Uint8B\l|
        <f41> [+0x368] ContextSwitches  : Uint8B\l|
        <f42> [+0x370] SchedulingGroup  : Ptr64 _KSCHEDULING_GROUP\l|
        <f43> [+0x378] FreezeCount      : Uint4B\l|
        <f44> [+0x37c] KernelTime       : Uint4B\l|
        <f45> [+0x380] UserTime         : Uint4B\l|
        <f46> [+0x384] ReadyTime        : Uint4B\l|
        <f47> [+0x388] UserDirectoryTableBase : Uint8B\l|
        <f48> [+0x390] AddressPolicy    : UChar\l|
        <f49> [+0x391] Spare2           : [71] UChar\l|
        <f50> [+0x3d8] InstrumentationCallback : Ptr64 Void\l|
        <f51> [+0x3e0] SecureState      : \<anonymous-tag\>\l|
        <f52> [+0x3e8] KernelWaitTime   : Uint8B\l|
        <f53> [+0x3f0] UserWaitTime     : Uint8B\l|
        <f54> [+0x3f8] EndPadding       : [8] Uint8B\l"
    ]
    _KTHREAD[
        fillcolor="#5272F2"   
        style=filled
        label="<f0>_KTHREAD|
            <f1> [+0x000] Header           : _DISPATCHER_HEADER\l 说明该对象是一个分发器对象，可以被等待。线程结束时，等待被满足\l|
            <f2> [+0x018] SListFaultAddress : Ptr64 Void\l 上一次用户模式互锁单链表POP操作发生页面错误的地址\l|
            <f3> [+0x020] QuantumTarget    : Uint8B\l|
            <f4> [+0x028] InitialStack     : Ptr64 Void\l|
            <f5> [+0x030] StackLimit       : Ptr64 Void\l 栈底位置\l|
            <f6> [+0x038] StackBase        : Ptr64 Void\l 当前栈的基地址\l|
            <f7> [+0x040] ThreadLock       : Uint8B\l 自旋锁，用于保护线程数据成员\l|
            <f8> [+0x048] CycleTime        : Uint8B\l|
            <f9> [+0x050] CurrentRunTime   : Uint4B\l|
            <f10> [+0x054] ExpectedRunTime  : Uint4B\l|
            <f11> [+0x058] KernelStack      : Ptr64 Void\l 内核调用栈开始位置\l|
            <f12> [+0x060] StateSaveArea    : Ptr64 _XSAVE_FORMAT\l|
            <f13> [+0x068] SchedulingGroup  : Ptr64 _KSCHEDULING_GROUP\l|
            <f14> [+0x070] WaitRegister     : _KWAIT_STATUS_REGISTER\l|
            <f15> [+0x071] Running          : UChar\l|
            <f16> [+0x072] Alerted          : [2] UChar\l 线程在警告模式小爱是否可以被唤醒\l|
            <f17> [+0x074] Alertable        : Pos 4, 1 Bit\l 线程是否可以被唤醒\l|
            <f18> [+0x074] ApcInterruptRequest : Pos 6, 1 Bit\l|
            <f19> [+0x074] ApcQueueable     : Pos 14, 1 Bit\l 是否可插入APC\l|
            <f20> [+0x074] AutoBoostActive  : Pos 0, 1 Bit\l|
            <f21> [+0x074] BypassProcessFreeze : Pos 21, 1 Bit\l|
            <f22> [+0x074] CalloutActive    : Pos 12, 1 Bit\l|
            <f23> [+0x074] CetUserShadowStack : Pos 20, 1 Bit\l|
            <f24> [+0x074] MiscFlags        : Int4B\l|
            <f25> [+0x074] ProcessDetachActive : Pos 11, 1 Bit\l|
            <f26> [+0x074] QuantumEndMigrate : Pos 7, 1 Bit\l|
            <f27> [+0x074] ReadyTransition  : Pos 1, 1 Bit\l|
            <f28> [+0x074] Reserved         : Pos 22, 10 Bits\l|
            <f29> [+0x074] ReservedStackInUse : Pos 15, 1 Bit\l|
            <f30> [+0x074] ScbReadyQueue    : Pos 13, 1 Bit\l|
            <f31> [+0x074] SuspendedWaitMode : Pos 18, 1 Bit\l|
            <f32> [+0x074] SuspendSchedulerApcWait : Pos 19, 1 Bit\l|
            <f33> [+0x074] SystemAffinityActive : Pos 3, 1 Bit\l|
            <f34> [+0x074] SystemThread     : Pos 10, 1 Bit\l|
            <f35> [+0x074] TimerActive      : Pos 9, 1 Bit\l|
            <f36> [+0x074] TimerSuspended   : Pos 17, 1 Bit\l|
            <f37> [+0x074] UmsDirectedSwitchEnable : Pos 8, 1 Bit\l|
            <f38> [+0x074] UmsPerformingSyscall : Pos 16, 1 Bit\l|
            <f39> [+0x074] UserStackWalkActive : Pos 5, 1 Bit\l|
            <f40> [+0x074] WaitNext         : Pos 2, 1 Bit\l|
            <f41> [+0x078] AlertedByThreadId : Pos 4, 1 Bit\l|
            <f42> [+0x078] AutoAlignment    : Pos 2, 1 Bit\l 与KPROCESS相同\l|
            <f43> [+0x078] AutoBoostEntriesExhausted : Pos 16, 1 Bit\l|
            <f44> [+0x078] ChargeOnlySchedulingGroup : Pos 9, 1 Bit\l|
            <f45> [+0x078] DeferPreemption  : Pos 10, 1 Bit\l|
            <f46> [+0x078] DisableBoost     : Pos 3, 1 Bit\l 与KPROCESS相同\l|
            <f47> [+0x078] DisableQuantum   : Pos 8, 1 Bit\l|
            <f48> [+0x078] EnableStackSwap  : Pos 6, 1 Bit\l 内核栈是否准许被换出\l|
            <f49> [+0x078] EtwStackTraceApcInserted : Pos 24, 8 Bits\l|
            <f50> [+0x078] ForceDeferSchedule : Pos 12, 1 Bit\l|
            <f51> [+0x078] FreezeCount      : Pos 14, 1 Bit\l|
            <f52> [+0x078] GuiThread        : Pos 7, 1 Bit\l|
            <f53> [+0x078] KernelStackResident : Pos 17, 1 Bit\l 线程的内核栈是否驻留在线程中\l|
            <f54> [+0x078] ProcessStackCountDecremented : Pos 20, 1 Bit\l|
            <f55> [+0x078] QuantumDonation  : Pos 5, 1 Bit\l|
            <f56> [+0x078] QueueDeferPreemption : Pos 11, 1 Bit\l|
            <f57> [+0x078] RestrictedGuiThread : Pos 21, 1 Bit\l|
            <f58> [+0x078] SharedReadyQueueAffinity : Pos 13, 1 Bit\l|
            <f59> [+0x078] TerminateRequestReason : Pos 18, 2 Bits\l|
            <f60> [+0x078] TerminationApcRequest : Pos 15, 1 Bit\l|
            <f61> [+0x078] ThreadFlags      : Int4B\l|
            <f62> [+0x078] ThreadFlagsSpare : Pos 0, 2 Bits\l|
            <f63> [+0x078] ThreadFlagsSpare2 : Pos 23, 1 Bit\l|
            <f64> [+0x078] VpBackingThread  : Pos 22, 1 Bit\l|
            <f65> [+0x07c] Tag              : UChar\l|
            <f66> [+0x07d] SystemHeteroCpuPolicy : UChar\l|
            <f67> [+0x07e] ExplicitSystemHeteroCpuPolicy : Pos 7, 1 Bit\l|
            <f68> [+0x07e] UserHeteroCpuPolicy : Pos 0, 7 Bits\l|
            <f69> [+0x07f] RunningNonRetpolineCode : Pos 0, 1 Bit\l|
            <f70> [+0x07f] SpecCtrl         : UChar\l|
            <f71> [+0x07f] SpecCtrlSpare    : Pos 1, 7 Bits\l|
            <f72> [+0x080] SystemCallNumber : Uint4B\l|
            <f73> [+0x084] ReadyTime        : Uint4B\l|
            <f74> [+0x088] FirstArgument    : Ptr64 Void\l|
            <f75> [+0x090] TrapFrame        : Ptr64 _KTRAP_FRAME\l 指向KTRAP_FRAME类型的指针。用户保存执行现场\l|
            <f76> [+0x098] ApcState         : _KAPC_STATE\l|
            <f77> [+0x098] ApcStateFill     : [43] UChar\l|
            <f78> [+0x0c3] Priority         : Char\l 动态优先级\l|
            <f79> [+0x0c4] UserIdealProcessor : Uint4B\l|
            <f80> [+0x0c8] WaitStatus       : Int8B\l 等待的结果状态\l|
            <f81> [+0x0d0] WaitBlockList    : Ptr64 _KWAIT_BLOCK\l KWAIT_BLOCK为元素的链表，记录线程所有等待的分发器对象。每个分发器对象也有一个KWAIT_BLOCK组成的链表，记录所有等待在该对象的线程\l|
            <f82> [+0x0d8] SwapListEntry    : _SINGLE_LIST_ENTRY\l 单链表节点，内核栈需要被换出时，加入KiStackInSwapListHead为头的链表。另外，线程处于DeferredReady状态时加入DeferredReadyListHead为头的链表\l|
            <f83> [+0x0d8] WaitListEntry    : _LIST_ENTRY\l 双向链表节点，等待被执行时，作为节点加入某链表\l|
            <f84> [+0x0e8] Queue            : Ptr64 _DISPATCHER_HEADER\l 队列分发器对象，线程正在处理此队列中的项\l|
            <f85> [+0x0f0] Teb              : Ptr64 Void\l 进程地址空间的一个TEB域\l|
            <f86> [+0x0f8] RelativeTimerBias : Uint8B\l|
            <f87> [+0x100] Timer            : _KTIMER\l 定时器\l|
            <f88> [+0x140] WaitBlock        : [4] _KWAIT_BLOCK\l|
            <f89> [+0x140] WaitBlockFill10  : [136] UChar\l|
            <f90> [+0x140] WaitBlockFill11  : [176] UChar\l|
            <f91> [+0x140] WaitBlockFill4   : [20] UChar\l|
            <f92> [+0x140] WaitBlockFill5   : [68] UChar\l|
            <f93> [+0x140] WaitBlockFill6   : [116] UChar\l|
            <f94> [+0x140] WaitBlockFill7   : [164] UChar\l|
            <f95> [+0x140] WaitBlockFill8   : [40] UChar\l|
            <f96> [+0x140] WaitBlockFill9   : [88] UChar\l|
            <f97> [+0x154] ContextSwitches  : Uint4B\l 记录线程进行了多少次切换\l|
            <f98> [+0x168] ThreadCounters   : Ptr64 _KTHREAD_COUNTERS\l|
            <f99> [+0x184] State            : UChar\l 线程当前状态\l|
            <f100> [+0x185] Spare13          : Char\l|
            <f101> [+0x186] WaitIrql         : UChar\l 原先的IRQL\l|
            <f102> [+0x187] WaitMode         : Char\l 线程等待时的处理器模式，内核or用户\l|
            <f103> [+0x198] XStateSave       : Ptr64 _XSTATE_SAVE\l|
            <f104> [+0x1b4] WaitTime         : Uint4B\l|
            <f105> [+0x1c8] Win32Thread      : Ptr64 Void\l 指向Windows子系统管理的区域的指针\l|
            <f106> [+0x1e4] CombinedApcDisable : Uint4B\l|
            <f107> [+0x1e4] KernelApcDisable : Int2B\l|
            <f108> [+0x1e6] SpecialApcDisable : Int2B\l|
            <f109> [+0x1f0] Ucb              : Ptr64 _UMS_CONTROL_BLOCK\l|
            <f110> [+0x1f8] Uch              : Ptr64 _KUMS_CONTEXT_HEADER\l|
            <f111> [+0x200] BamQosLevel      : Pos 0, 8 Bits\l|
            <f112> [+0x200] ThreadFlags2     : Int4B\l|
            <f113> [+0x200] ThreadFlags2Reserved : Pos 8, 24 Bits\l|
            <f114> [+0x204] Spare21          : Uint4B\l|
            <f115> [+0x208] QueueListEntry   : _LIST_ENTRY\l|
            <f116> [+0x218] NextProcessor    : Uint4B\l 关于处理器调度的选择\l|
            <f117> [+0x218] NextProcessorNumber : Pos 0, 31 Bits\l|
            <f118> [+0x218] SharedReadyQueue : Pos 31, 1 Bit\l|
            <f119> [+0x21c] QueuePriority    : Int4B\l|
            <f120> [+0x220] Process          : Ptr64 _KPROCESS\l 执行线程的进程对象\l|
            <f121> [+0x228] UserAffinity     : _GROUP_AFFINITY\l 线程的用户亲和性\l|
            <f122> [+0x228] UserAffinityFill : [10] UChar\l|
            <f123> [+0x232] PreviousMode     : Char\l|
            <f124> [+0x233] BasePriority     : Char\l 基本优先级\l|
            <f125> [+0x234] ForegroundBoost  : Pos 0, 4 Bits\l|
            <f126> [+0x234] PriorityDecrement : Char\l 优先级动态调整过程中的递减值\l|
            <f127> [+0x234] UnusualBoost     : Pos 4, 4 Bits\l|
            <f128> [+0x235] Preempted        : UChar\l 是否被高优先级线程抢占了\l|
            <f129> [+0x236] AdjustReason     : UChar\l 优先级调整的原因\l|
            <f130> [+0x237] AdjustIncrement  : Char\l 优先级调整调整量\l|
            <f131> [+0x238] AffinityVersion  : Uint8B\l|
            <f132> [+0x240] Affinity         : _GROUP_AFFINITY\l 处理器亲和性，为线程指定的处理器集合必须是该集合的子集\l|
            <f133> [+0x240] AffinityFill     : [10] UChar\l|
            <f134> [+0x24a] ApcStateIndex    : UChar\l 指明当前APC状态在ApcStatePointer域中的索引\l|
            <f135> [+0x24b] WaitBlockCount   : UChar\l|
            <f136> [+0x24c] IdealProcessor   : Uint4B\l 理想处理器\l|
            <f137> [+0x250] NpxState         : Uint8B\l 浮点处理器状态\l|
            <f138> [+0x258] SavedApcState    : _KAPC_STATE\l|
            <f139> [+0x258] SavedApcStateFill : [43] UChar\l|
            <f140> [+0x283] WaitReason       : UChar\l 等待原因\l|
            <f141> [+0x284] SuspendCount     : Char\l|
            <f142> [+0x285] Saturation       : Char\l 线程基本优先级调整相对于进程基本优先级是否超过了区间的一半\l|
            <f143> [+0x286] SListFaultCount  : Uint2B\l|
            <f144> [+0x288] SchedulerApc     : _KAPC\l|
            <f145> [+0x288] SchedulerApcFill1 : [3] UChar\l|
            <f146> [+0x288] SchedulerApcFill2 : [4] UChar\l|
            <f147> [+0x288] SchedulerApcFill3 : [64] UChar\l|
            <f148> [+0x288] SchedulerApcFill4 : [72] UChar\l|
            <f149> [+0x288] SchedulerApcFill5 : [83] UChar\l|
            <f150> [+0x28b] QuantumReset     : UChar\l|
            <f151> [+0x28c] KernelTime       : Uint4B\l|
            <f152> [+0x2c8] WaitPrcb         : Ptr64 _KPRCB\l|
            <f153> [+0x2d0] LegoData         : Ptr64 Void\l|
            <f154> [+0x2db] CallbackNestingLevel : UChar\l|
            <f155> [+0x2dc] UserTime         : Uint4B\l|
            <f156> [+0x2e0] SuspendEvent     : _KEVENT\l|
            <f157> [+0x2f8] ThreadListEntry  : _LIST_ENTRY\l 双链表的节点，线程被创建时，加入到进程的ThreadListHead链表中\l|
            <f158> [+0x308] MutantListHead   : _LIST_ENTRY\l|
            <f159> [+0x318] AbEntrySummary   : UChar\l|
            <f160> [+0x319] AbWaitEntryCount : UChar\l|
            <f161> [+0x31a] AbAllocationRegionCount : UChar\l|
            <f162> [+0x31b] SystemPriority   : Char\l|
            <f163> [+0x31c] SecureThreadCookie : Uint4B\l|
            <f164> [+0x320] LockEntries      : Ptr64 _KLOCK_ENTRY\l|
            <f165> [+0x328] PropagateBoostsEntry : _SINGLE_LIST_ENTRY\l|
            <f166> [+0x330] IoSelfBoostsEntry : _SINGLE_LIST_ENTRY\l|
            <f167> [+0x338] PriorityFloorCounts : [16] UChar\l|
            <f168> [+0x348] PriorityFloorCountsReserved : [16] UChar\l|
            <f169> [+0x358] PriorityFloorSummary : Uint4B\l|
            <f170> [+0x35c] AbCompletedIoBoostCount : Int4B\l|
            <f171> [+0x360] AbCompletedIoQoSBoostCount : Int4B\l|
            <f172> [+0x364] KeReferenceCount : Int2B\l|
            <f173> [+0x366] AbOrphanedEntrySummary : UChar\l|
            <f174> [+0x367] AbOwnedEntryCount : UChar\l|
            <f175> [+0x368] ForegroundLossTime : Uint4B\l|
            <f176> [+0x370] ForegroundDpcStackListEntry : _SINGLE_LIST_ENTRY\l|
            <f177> [+0x370] GlobalForegroundListEntry : _LIST_ENTRY\l|
            <f178> [+0x378] InGlobalForegroundList : Uint8B\l|
            <f179> [+0x380] ReadOperationCount : Int8B\l|
            <f180> [+0x388] WriteOperationCount : Int8B\l|
            <f181> [+0x390] OtherOperationCount : Int8B\l|
            <f182> [+0x398] ReadTransferCount : Int8B\l|
            <f183> [+0x3a0] WriteTransferCount : Int8B\l|
            <f184> [+0x3a8] OtherTransferCount : Int8B\l|
            <f185> [+0x3b0] QueuedScb        : Ptr64 _KSCB\l|
            <f186> [+0x3b8] ThreadTimerDelay : Uint4B\l|
            <f187> [+0x3bc] PpmPolicy        : Pos 8, 2 Bits\l|
            <f188> [+0x3bc] ThreadFlags3     : Int4B\l|
            <f189> [+0x3bc] ThreadFlags3Reserved : Pos 0, 8 Bits\l|
            <f190> [+0x3bc] ThreadFlags3Reserved2 : Pos 10, 22 Bits\l|
            <f191> [+0x3c0] TracingPrivate   : [1] Uint8B\l|
            <f192> [+0x3c8] SchedulerAssist  : Ptr64 Void\l|
            <f193> [+0x3d0] AbWaitObject     : Ptr64 Void\l|
            <f194> [+0x3d8] ReservedPreviousReadyTimeValue : Uint4B\l|
            <f195> [+0x3e0] KernelWaitTime   : Uint8B\l|
            <f196> [+0x3e8] UserWaitTime     : Uint8B\l|
            <f197> [+0x3f0] GlobalUpdateVpThreadPriorityListEntry : _LIST_ENTRY\l|
            <f198> [+0x3f0] UpdateVpThreadPriorityDpcStackListEntry : _SINGLE_LIST_ENTRY\l|
            <f199> [+0x3f8] InGlobalUpdateVpThreadPriorityList : Uint8B\l|
            <f200> [+0x400] SchedulerAssistPriorityFloor : Int4B\l|
            <f201> [+0x404] Spare28          : Uint4B\l|
            <f202> [+0x408] ResourceIndex    : UChar\l|
            <f203> [+0x409] Spare31          : [3] UChar\l|
            <f204> [+0x410] EndPadding       : [4] Uint8B\l"
    ]
    _TEB[
        fillcolor="#ffbb33"   
        style=filled
        URL="_KTHREAD"
        label="<f0> _TEB|
            <f1> [+0x000] NtTib            : _NT_TIB\l NT 线程信息块（NT Thread Information Block），其中包含了一些关于线程的基本信息\l|
            <f2> [+0x038] EnvironmentPointer : Ptr64 Void\l 指向线程环境块的指针\l|
            <f3> [+0x040] ClientId         : _CLIENT_ID\l 客户端标识符，包含了进程和线程的标识信息\l|
            <f4> [+0x050] ActiveRpcHandle  : Ptr64 Void\l 当前活动的 RPC（Remote Procedure Call）句柄\l|
            <f5> [+0x058] ThreadLocalStoragePointer : Ptr64 Void\l 指向线程本地存储的指针\l|
            <f6> [+0x060] ProcessEnvironmentBlock : Ptr64 _PEB\l 指向PEB\l|
            <f7> [+0x068] LastErrorValue   : Uint4B\l 上一次系统错误的代码\l|
            <f8> [+0x06c] CountOfOwnedCriticalSections : Uint4B\l 拥有临界区段的数量\l|
            <f9> [+0x070] CsrClientThread  : Ptr64 Void\l 指向 CSR（Client-Server Runtime Subsystem）客户端线程的指针。在win7之后被移除\l|
            <f10> [+0x078] Win32ThreadInfo  : Ptr64 Void\l Win32 线程信息\l|
            <f11> [+0x080] User32Reserved   : [26] Uint4B\l User32 保留的变量\l|
            <f12> [+0x0e8] UserReserved     : [5] Uint4B\l 用户保留的变量\l|
            <f13> [+0x100] WOW32Reserved    : Ptr64 Void\l WOW32（Windows on Windows 32）保留的变量\l|
            <f14> [+0x108] CurrentLocale    : Uint4B\l 当前语言环境标识符\l|
            <f15> [+0x10c] FpSoftwareStatusRegister : Uint4B\l 浮点软件状态寄存器\l|
            <f16> [+0x110] ReservedForDebuggerInstrumentation : [16] Ptr64 Void\l 系统保留的变量\l|
            <f17> [+0x1138] glReserved1      : [29] Uint8B\l|
            <f18> [+0x1220] glReserved2      : Ptr64 Void\l|
            <f19> [+0x1228] glSectionInfo    : Ptr64 Void\l|
            <f20> [+0x1230] glSection        : Ptr64 Void\l|
            <f21> [+0x1238] glTable          : Ptr64 Void\l|
            <f22> [+0x1240] glCurrentRC      : Ptr64 Void\l|
            <f23> [+0x1248] glContext        : Ptr64 Void\l|
            <f24> [+0x1250] LastStatusValue  : Uint4B\l 表示线程的最后一个状态值。当系统调用失败时，会设置此值\l|
            <f25> [+0x1254] Padding2         : [4] UChar\l|
            <f26> [+0x1258] StaticUnicodeString : _UNICODE_STRING\l|
            <f27> [+0x1268] StaticUnicodeBuffer : [261] Wchar\l|
            <f28> [+0x1472] Padding3         : [6] UChar\l|
            <f29> [+0x1478] DeallocationStack : Ptr64 Void\l|
            <f30> [+0x1480] TlsSlots         : [64] Ptr64 Void\l 线程本地存储（Thread Local Storage，TLS）的句柄数组。每个元素都包含一个指向 TLS 数据的指针\l|
            <f31> [+0x1680] TlsLinks         : _LIST_ENTRY\l TLS 链接列表的头节点\l|
            <f32> [+0x1690] Vdm              : Ptr64 Void\l 指向一个 VDM（Virtual DOS Machine）的指针，它是一个在 Windows NT 中用于执行 16 位代码的机制\l|
            <f33> [+0x1698] ReservedForNtRpc : Ptr64 Void\l 保留用于 NT RPC（远程过程调用）的指针\l|
            <f34> [+0x16a0] DbgSsReserved    : [2] Ptr64 Void\l 保留用于调试的内存地址\l|
            <f35> [+0x16b0] HardErrorMode    : Uint4B\l 表示硬件错误模式\l|
            <f36> [+0x16b4] Padding4         : [4] UChar\l|
            <f37> [+0x16b8] Instrumentation  : [11] Ptr64 Void\l 用于性能测量的内存地址数组\l|
            <f38> [+0x1710] ActivityId       : _GUID\l 表示活动标识符的 GUID（全局唯一标识符）\l|
            <f39> [+0x1720] SubProcessTag    : Ptr64 Void\l 保留用于子进程标签的指针\l|
            <f40> [+0x1728] PerflibData      : Ptr64 Void\l|
            <f41> [+0x1730] EtwTraceData     : Ptr64 Void\l ETW 跟踪数据的指针\l|
            <f42> [+0x1738] WinSockData      : Ptr64 Void\l Windows Sockets（WinSock）数据的指针\l|
            <f43> [+0x1740] GdiBatchCount    : Uint4B\l 表示 GDI（图形设备接口）批处理的计数\l|
            <f44> [+0x1744] CurrentIdealProcessor : _PROCESSOR_NUMBER\l 此联合体包含了一个32位的 PROCESSOR_NUMBER 和一个32位的 IdealProcessorValue，以及一个8位的 IdealProcessor。它表示理想的处理器数量或处理器编号\l|
            <f45> [+0x1744] IdealProcessorValue : Uint4B\l|
            <f46> [+0x1744] ReservedPad0     : UChar\l|
            <f47> [+0x1745] ReservedPad1     : UChar\l|
            <f48> [+0x1746] ReservedPad2     : UChar\l|
            <f49> [+0x1747] IdealProcessor   : UChar\l|
            <f50> [+0x1748] GuaranteedStackBytes : Uint4B\l 表示为线程堆栈保留的字节数\l|
            <f51> [+0x174c] Padding5         : [4] UChar\l|
            <f52> [+0x1750] ReservedForPerf  : Ptr64 Void\l 保留用于性能的内存地址\l|
            <f53> [+0x1758] ReservedForOle   : Ptr64 Void\l 保留用于 OLE（Object Linking and Embedding）的内存地址\l|
            <f54> [+0x1760] WaitingOnLoaderLock : Uint4B\l 表示线程正在等待加载器锁的状态\l|
            <f55> [+0x1764] Padding6         : [4] UChar\l|
            <f56> [+0x1768] SavedPriorityState : Ptr64 Void\l 保存线程优先级状态的指针\l|
            <f57> [+0x1770] ReservedForCodeCoverage : Uint8B\l|
            <f58> [+0x1778] ThreadPoolData   : Ptr64 Void\l 指向线程池数据的指针\l|
            <f59> [+0x1780] TlsExpansionSlots : Ptr64 Ptr64 Void\l 指向TLS（Thread Local Storage）扩展槽的指针\l|
            <f60> [+0x1788] DeallocationBStore : Ptr64 Void\l 在_WIN64下是保留的，用于BStore（一个用于线程局部存储的机制）的释放\l|
            <f61> [+0x1790] BStoreLimit      : Ptr64 Void\l|
            <f62> [+0x1798] MuiGeneration    : Uint4B\l 表示多用户界面（MUI，Multi-User Interface）的生成数\l|
            <f63> [+0x179c] IsImpersonating  : Uint4B\l 表示线程是否正在进行模拟用户操作\l|
            <f64> [+0x17a0] NlsCache         : Ptr64 Void\l 指向NlsCache（National Language Support，国家语言支持）的缓存\l|
            <f65> [+0x17a8] pShimData        : Ptr64 Void\l 指向shim（一种用于应用程序兼容性的技术）的数据\l|
            <f66> [+0x17b0] HeapData         : Uint4B\l|
            <f67> [+0x17b4] Padding7         : [4] UChar\l|
            <f68> [+0x17b8] CurrentTransactionHandle : Ptr64 Void\l 表示当前事务的句柄\l|
            <f69> [+0x17c0] ActiveFrame      : Ptr64 _TEB_ACTIVE_FRAME\l 表示当前活动的帧（帧是一个执行堆栈的单位）\l|
            <f70> [+0x17c8] FlsData          : Ptr64 Void\l 表示线程局部存储（FlsData）的数据\l|
            <f71> [+0x17d0] PreferredLanguages : Ptr64 Void\l 表示线程的首选语言\l|
            <f72> [+0x17d8] UserPrefLanguages : Ptr64 Void\l 表示用户首选语言\l|
            <f73> [+0x17e0] MergedPrefLanguages : Ptr64 Void\l 表示合并的首选语言\l|
            <f74> [+0x17e8] MuiImpersonation : Uint4B\l 表示MUI（多用户界面）的模拟用户身份\l|
            <f75> [+0x17ec] CrossTebFlags    : Uint2B\l 用于控制线程的行为\l|
            <f76> [+0x17ec] SpareCrossTebBits : Pos 0, 16 Bits\l|
            <f77> [+0x17ee] ClonedThread     : Pos 6, 1 Bit\l|
            <f78> [+0x17ee] DisableUserStackWalk : Pos 8, 1 Bit\l|
            <f79> [+0x17ee] HasFiberData     : Pos 2, 1 Bit\l|
            <f80> [+0x17ee] InDebugPrint     : Pos 1, 1 Bit\l|
            <f81> [+0x17ee] InitialThread    : Pos 10, 1 Bit\l|
            <f82> [+0x17ee] LoaderWorker     : Pos 13, 1 Bit\l|
            <f83> [+0x17ee] LoadOwner        : Pos 12, 1 Bit\l|
            <f84> [+0x17ee] RanProcessInit   : Pos 5, 1 Bit\l|
            <f85> [+0x17ee] RtlExceptionAttached : Pos 9, 1 Bit\l|
            <f86> [+0x17ee] SafeThunkCall    : Pos 0, 1 Bit\l|
            <f87> [+0x17ee] SameTebFlags     : Uint2B\l|
            <f88> [+0x17ee] SessionAware     : Pos 11, 1 Bit\l|
            <f89> [+0x17ee] SkipLoaderInit   : Pos 14, 1 Bit\l|
            <f90> [+0x17ee] SkipThreadAttach : Pos 3, 1 Bit\l|
            <f91> [+0x17ee] SpareSameTebBits : Pos 15, 1 Bit\l|
            <f92> [+0x17ee] SuppressDebugMsg : Pos 7, 1 Bit\l|
            <f93> [+0x17ee] WerInShipAssertCode : Pos 4, 1 Bit\l|
            <f94> [+0x17f0] TxnScopeEnterCallback : Ptr64 Void\l 事务作用域进入回调函数的指针\l|
            <f95> [+0x17f8] TxnScopeExitCallback : Ptr64 Void\l 事务作用域退出回调函数的指针\l|
            <f96> [+0x1800] TxnScopeContext  : Ptr64 Void\l 事务作用域上下文的指针\l|
            <f97> [+0x1808] LockCount        : Uint4B\l 表示线程锁的数量\l|
            <f98> [+0x180c] WowTebOffset     : Int4B\l|
            <f99> [+0x1810] ResourceRetValue : Ptr64 Void\l 表示资源返回值\l|
            <f100> [+0x1818] ReservedForWdf   : Ptr64 Void\l 为WDF（Windows Driver Foundation）保留的指针。WDF是Windows驱动程序开发框架，用于开发Windows驱动程序\l|
            <f101> [+0x1820] ReservedForCrt   : Uint8B\l|
            <f102> [+0x1828] EffectiveContainerId : _GUID\l|
            <f103> [+0x190] SystemReserved1  : [30] Ptr64 Void\l|
            <f104> [+0x280] PlaceholderCompatibilityMode : Char\l|
            <f105> [+0x281] PlaceholderHydrationAlwaysExplicit : UChar\l|
            <f106> [+0x282] PlaceholderReserved : [10] Char\l|
            <f107> [+0x28c] ProxiedProcessId : Uint4B\l|
            <f108> [+0x290] _ActivationStack : _ACTIVATION_CONTEXT_STACK\l|
            <f109> [+0x2b8] WorkingOnBehalfTicket : [8] UChar\l|
            <f110> [+0x2c0] ExceptionCode    : Int4B\l 异常代码\l|
            <f111> [+0x2c4] Padding0         : [4] UChar\l|
            <f112> [+0x2c8] ActivationContextStackPointer : Ptr64 _ACTIVATION_CONTEXT_STACK\l 激活上下文堆栈指针\l|
            <f113> [+0x2d0] InstrumentationCallbackSp : Uint8B\l|
            <f114> [+0x2d8] InstrumentationCallbackPreviousPc : Uint8B\l|
            <f115> [+0x2e0] InstrumentationCallbackPreviousSp : Uint8B\l|
            <f116> [+0x2e8] TxFsContext      : Uint4B\l 表示当前线程的Transmit File System（传输文件系统）上下文\l|
            <f117> [+0x2ec] InstrumentationCallbackDisabled : UChar\l|
            <f118> [+0x2ed] UnalignedLoadStoreExceptions : UChar\l|
            <f119> [+0x2ee] Padding1         : [2] UChar\l|
            <f120> [+0x2f0] GdiTebBatch      : _GDI_TEB_BATCH\l GDI（Graphics Device Interface）的 TEB 批处理（x64）\l|
            <f121> [+0x7d8] RealClientId     : _CLIENT_ID\l 真实的客户端标识符（x64）\l|
            <f122> [+0x7e8] GdiCachedProcessHandle : Ptr64 Void\l GDI 缓存的进程句柄（x64）\l|
            <f123> [+0x7f0] GdiClientPID     : Uint4B\l GDI 客户端进程 ID（x64）\l|
            <f124> [+0x7f4] GdiClientTID     : Uint4B\l GDI 客户端线程 ID（x64）\l|
            <f125> [+0x7f8] GdiThreadLocalInfo : Ptr64 Void\l GDI 线程本地信息（x64）\l|
            <f126> [+0x800] Win32ClientInfo  : [62] Uint8B\l Win32 客户端信息（x64）\l|
            <f127> [+0x9f0] glDispatchTable  : [233] Ptr64 Void\l"
    ]
    _NT_TIB [
        URL="_TEB"
        label="_NT_TIB|
        <f0> [+0x000] ExceptionList    : Ptr64 _EXCEPTION_REGISTRATION_RECORD\l|
        <f1> [+0x008] StackBase        : Ptr64 Void\l|
        <f2> [+0x010] StackLimit       : Ptr64 Void\l|
        <f3> [+0x018] SubSystemTib     : Ptr64 Void\l|
        <f4> [+0x020] FiberData        : Ptr64 Void\l|
        <f5> [+0x020] Version          : Uint4B\l|
        <f6> [+0x028] ArbitraryUserPointer : Ptr64 Void\l|
        <f7> [+0x030] Self             : Ptr64 _NT_TIB\l"
    ]
    _CLIENT_ID [
        label="<f0> _CLIENT_ID|
        <f1> [+0x000] UniqueProcess    : Ptr64 Void\l 所在进程PID\l|
        <f2> [+0x008] UniqueThread     : Ptr64 Void\l 当前线程TID\l"
    ]
    _PEB [
        fillcolor="#ffbb33"
        style=filled
        URL="https://www.yuque.com/stimuming/bbw9gd/zdr742y1d56cuwyb#l6Prx"
        label="<f0> _PEB|
        <f1> [+0x000] InheritedAddressSpace : UChar\l 是否继承了地址空间\l|
        <f2> [+0x001] ReadImageFileExecOptions : UChar\l 是否读取了映像文件的执行选项\l|
        <f3> [+0x002] BeingDebugged    : UChar\l 判断进程是否被调试，true为被调试\l|
        <f4> [+0x003] BitField         : UChar\l|
        <f5> [+0x003] ImageUsesLargePages : Pos 0, 1 Bit\l|
        <f6> [+0x003] IsAppContainer   : Pos 5, 1 Bit\l|
        <f7> [+0x003] IsImageDynamicallyRelocated : Pos 2, 1 Bit\l|
        <f8> [+0x003] IsLongPathAwareProcess : Pos 7, 1 Bit\l|
        <f9> [+0x003] IsPackagedProcess : Pos 4, 1 Bit\l|
        <f10> [+0x003] IsProtectedProcess : Pos 1, 1 Bit\l|
        <f11> [+0x003] IsProtectedProcessLight : Pos 6, 1 Bit\l|
        <f12> [+0x003] SkipPatchingUser32Forwarders : Pos 3, 1 Bit\l|
        <f13> [+0x004] Padding0         : [4] UChar\l|
        <f14> [+0x008] Mutant           : Ptr64 Void\l 进程的互斥对象\l|
        <f15> [+0x010] ImageBaseAddress : Ptr64 Void\l 进程的映像基地址，exe 0x400000,dll 0x1000000\l|
        <f16> [+0x018] Ldr              : Ptr64 _PEB_LDR_DATA\l 由PE Loader填充，包含很多pe中包含的信息，用来枚举用户加载的模块\l|
        <f17> [+0x020] ProcessParameters : Ptr64 _RTL_USER_PROCESS_PARAMETERS\l 指向  RTL_USER_PROCESS_PARAMETERS 的指针，RTL_USER_PROCESS_PARAMETERS 中是一些进程的参数\l|
        <f18> [+0x028] SubSystemData    : Ptr64 Void\l 子系统的信息\l|
        <f19> [+0x030] ProcessHeap      : Ptr64 Void\l 指向进程堆首地址，每个程序新建时默认堆使用\l|
        <f20> [+0x038] FastPebLock      : Ptr64 _RTL_CRITICAL_SECTION\l 指向RTL_CRITICAL_SECTION结构的指针，用于快速访问PEB\l|
        <f21> [+0x040] AtlThunkSListPtr : Ptr64 _SLIST_HEADER\l|
        <f22> [+0x048] IFEOKey          : Ptr64 Void\l|
        <f23> [+0x050] CrossProcessFlags : Uint4B\l|
        <f24> [+0x050] ProcessCurrentlyThrottled : Pos 6, 1 Bit\l|
        <f25> [+0x050] ProcessImagesHotPatched : Pos 7, 1 Bit\l|
        <f26> [+0x050] ProcessInitializing : Pos 1, 1 Bit\l|
        <f27> [+0x050] ProcessInJob     : Pos 0, 1 Bit\l|
        <f28> [+0x050] ProcessPreviouslyThrottled : Pos 5, 1 Bit\l|
        <f29> [+0x050] ProcessUsingFTH  : Pos 4, 1 Bit\l|
        <f30> [+0x050] ProcessUsingVCH  : Pos 3, 1 Bit\l|
        <f31> [+0x050] ProcessUsingVEH  : Pos 2, 1 Bit\l|
        <f32> [+0x050] ReservedBits0    : Pos 8, 24 Bits\l|
        <f33> [+0x054] Padding1         : [4] UChar\l|
        <f34> [+0x058] KernelCallbackTable : Ptr64 Void\l 从内核“回调”用户空间的函数\l|
        <f35> [+0x058] UserSharedInfoPtr : Ptr64 Void\l 用户共享块\l|
        <f36> [+0x060] SystemReserved   : Uint4B\l 预留的数组\l|
        <f37> [+0x064] AtlThunkSListPtr32 : Uint4B\l 用于32位应用程序与64位操作系统的兼容性\l|
        <f38> [+0x068] ApiSetMap        : Ptr64 Void\l API设置映射的指针，可能用于API的设置和管理\l|
        <f39> [+0x070] TlsExpansionCounter : Uint4B\l TLS（Thread Local Storage）扩展计数器，用于跟踪TLS的使用情况\l|
        <f40> [+0x074] Padding2         : [4] UChar\l|
        <f41> [+0x078] TlsBitmap        : Ptr64 Void\l TLS位图的指针，用于管理TLS的内存分配\l|
        <f42> [+0x080] TlsBitmapBits    : [2] Uint4B\l TLS位图位数组，用于保存TLS内存分配的状态信息\l|
        <f43> [+0x088] ReadOnlySharedMemoryBase : Ptr64 Void\l 只读共享内存基地址的指针\l|
        <f44> [+0x090] SharedData       : Ptr64 Void\l 共享数据的指针\l|
        <f45> [+0x098] ReadOnlyStaticServerData : Ptr64 Ptr64 Void\l 只读静态服务器数据的指针\l|
        <f46> [+0x0a0] AnsiCodePageData : Ptr64 Void\l 以下三个是关于字符编码和大小写的数据结构或数据的指针\l|
        <f47> [+0x0a8] OemCodePageData  : Ptr64 Void\l|
        <f48> [+0x0b0] UnicodeCaseTableData : Ptr64 Void\l|
        <f49> [+0x0b8] NumberOfProcessors : Uint4B\l 当前系统中的处理器数量\l|
        <f50> [+0x0bc] NtGlobalFlag     : Uint4B\l 全局标志位，用于保存一些系统状态信息\l|
        <f51> [+0x0c0] CriticalSectionTimeout : _LARGE_INTEGER\l 临界区超时值，超过该时间未释放临界区，可能会导致进程停止响应\l|
        <f52> [+0x0c8] HeapSegmentReserve : Uint8B\l 进程在新建堆的时候默认申请的虚拟内存大小\l|
        <f53> [+0x0d0] HeapSegmentCommit : Uint8B\l|
        <f54> [+0x0d8] HeapDeCommitTotalFreeThreshold : Uint8B\l|
        <f55> [+0x0e0] HeapDeCommitFreeBlockThreshold : Uint8B\l|
        <f56> [+0x0e8] NumberOfHeaps    : Uint4B\l 当前进程的堆数目,这个数目对应着!heap命令的堆显示个数\l|
        <f57> [+0x0ec] MaximumNumberOfHeaps : Uint4B\l 进程所能运行的最大堆数目,若堆数目超过这个值估计HeapCreate就失败了吧\l|
        <f58> [+0x0f0] ProcessHeaps     : Ptr64 Ptr64 Void\l 存储堆句柄的数组,这里我们可以得到进程的所有堆句柄\l|
        <f59> [+0x0f8] GdiSharedHandleTable : Ptr64 Void\l GDI（图形设备接口）共享句柄表的指针\l|
        <f60> [+0x100] ProcessStarterHelper : Ptr64 Void\l|
        <f61> [+0x108] GdiDCAttributeList : Uint4B\l|
        <f62> [+0x10c] Padding3         : [4] UChar\l|
        <f63> [+0x110] LoaderLock       : Ptr64 _RTL_CRITICAL_SECTION\l 保护加载器锁\l|
        <f64> [+0x118] OSMajorVersion   : Uint4B\l 与操作系统版本和构建号有关的信息\l|
        <f65> [+0x11c] OSMinorVersion   : Uint4B\l|
        <f66> [+0x120] OSBuildNumber    : Uint2B\l|
        <f67> [+0x122] OSCSDVersion     : Uint2B\l|
        <f68> [+0x124] OSPlatformId     : Uint4B\l|
        <f69> [+0x128] ImageSubsystem   : Uint4B\l|
        <f70> [+0x12c] ImageSubsystemMajorVersion : Uint4B\l|
        <f71> [+0x130] ImageSubsystemMinorVersion : Uint4B\l|
        <f72> [+0x134] Padding4         : [4] UChar\l|
        <f73> [+0x138] ActiveProcessAffinityMask : Uint8B\l|
        <f74> [+0x140] GdiHandleBuffer  : [60] Uint4B\l|
        <f75> [+0x230] PostProcessInitRoutine : Ptr64     void\l|
        <f76> [+0x238] TlsExpansionBitmap : Ptr64 Void\l|
        <f77> [+0x240] TlsExpansionBitmapBits : [32] Uint4B\l|
        <f78> [+0x2c0] SessionId        : Uint4B\l 当前进程的会话ID\l|
        <f79> [+0x2c4] Padding5         : [4] UChar\l|
        <f80> [+0x2c8] AppCompatFlags   : _ULARGE_INTEGER\l 应用程序兼容性标志，用于指定应用程序的一些特殊运行需求\l|
        <f81> [+0x2d0] AppCompatFlagsUser : _ULARGE_INTEGER\l|
        <f82> [+0x2d8] pShimData        : Ptr64 Void\l 这是一个指向shim数据的指针，可能在应用程序兼容性中用到\l|
        <f83> [+0x2e0] AppCompatInfo    : Ptr64 Void\l|
        <f84> [+0x2e8] CSDVersion       : _UNICODE_STRING\l 这是Windows服务分发版本字符串，表示当前系统版本信息\l|
        <f85> [+0x2f8] ActivationContextData : Ptr64 _ACTIVATION_CONTEXT_DATA\l|
        <f86> [+0x300] ProcessAssemblyStorageMap : Ptr64 _ASSEMBLY_STORAGE_MAP\l|
        <f87> [+0x308] SystemDefaultActivationContextData : Ptr64 _ACTIVATION_CONTEXT_DATA\l|
        <f88> [+0x310] SystemAssemblyStorageMap : Ptr64 _ASSEMBLY_STORAGE_MAP\l|
        <f89> [+0x318] MinimumStackCommit : Uint8B\l|
        <f90> [+0x320] SparePointers    : [4] Ptr64 Void\l|
        <f91> [+0x340] SpareUlongs      : [5] Uint4B\l|
        <f92> [+0x358] WerRegistrationData : Ptr64 Void\l 指向WerRegistrationData的指针，这个变量可能与Windows Error Reporting（WER）系统有关，用于错误报告\l|
        <f93> [+0x360] WerShipAssertPtr : Ptr64 Void\l 指向WerShipAssertPtr的指针，可能与WER系统有关，通常在程序崩溃时触发\l|
        <f94> [+0x368] pUnused          : Ptr64 Void\l|
        <f95> [+0x370] pImageHeaderHash : Ptr64 Void\l 指向ImageHeaderHash的指针，可能与PE文件（Portable Executable，Windows的可执行文件格式）的校验和有关\l|
        <f96> [+0x378] CritSecTracingEnabled : Pos 1, 1 Bit\l|
        <f97> [+0x378] HeapTracingEnabled : Pos 0, 1 Bit\l 启用堆跟踪\l|
        <f98> [+0x378] LibLoaderTracingEnabled : Pos 2, 1 Bit\l|
        <f99> [+0x378] SpareTracingBits : Pos 3, 29 Bits\l|
        <f100> [+0x378] TracingFlags     : Uint4B\l|
        <f101> [+0x37c] Padding6         : [4] UChar\l|
        <f102> [+0x380] CsrServerReadOnlySharedMemoryBase : Uint8B\l 指向CsrServerReadOnlySharedMemoryBase的指针，可能与CSR（Client-Server Runtime Subsystem）系统有关，用于进程间通信和同步\l|
        <f103> [+0x388] TppWorkerpListLock : Uint8B\l 指向TppWorkerpListLock的指针，可能与TPP（Threadpool Worker Routine）有关，用于线程池的工作\l|
        <f104> [+0x390] TppWorkerpList   : _LIST_ENTRY\l 一个链表头结点，可能与TPP有关，用于存储工作线程的列表\l|
        <f105> [+0x3a0] WaitOnAddressHashTable : [128] Ptr64 Void\l 一个数组，保存了WaitOnAddressHashTable的指针数组，可能与等待对象有关\l|
        <f106> [+0x7a0] TelemetryCoverageHeader : Ptr64 Void\l 指向TelemetryCoverageHeader的指针，可能与遥测（Telemetry）有关，用于收集和报告系统信息\l|
        <f107> [+0x7a8] CloudFileFlags   : Uint4B\l 云文件标志\l|
        <f108> [+0x7ac] CloudFileDiagFlags : Uint4B\l 云文件诊断标志\l|
        <f109> [+0x7b0] PlaceholderCompatibilityMode : Char\l 可能用于兼容性模式\l|
        <f110> [+0x7b1] PlaceholderCompatibilityModeReserved : [7] Char\l 保留了7个位置用于兼容性模式\l|
        <f111> [+0x7b8] LeapSecondData   : Ptr64 _LEAP_SECOND_DATA\l 指向LeapSecondData的指针，可能与闰秒（Leap Second）有关，用于处理与闰秒有关的数据\l|
        <f112> [+0x7c0] LeapSecondFlags  : Uint4B\l|
        <f113> [+0x7c0] Reserved         : Pos 1, 31 Bits\l|
        <f114> [+0x7c0] SixtySecondEnabled : Pos 0, 1 Bit\l|
        <f115> [+0x7c4] NtGlobalFlag2    : Uint4B\l 表示NT全局标志2的整型变量\l|
        <f116> [+0x7c8] ULONGLONG ExtendedFeatureDisableMask\l 这是一个表示扩展特性禁用掩码的无符号长整型变量，从Windows 11开始引入\l"
    ]
    _RTL_USER_PROCESS_PARAMETERS [
        label="<f0> _RTL_USER_PROCESS_PARAMETERS|
        <f1> [+0x000] MaximumLength    : Uint4B\l 最大长度\l|
        <f2> [+0x004] Length           : Uint4B\l 当前结构体长度\l|
        <f3> [+0x008] Flags            : Uint4B\l 标志进程的某些属性。例如，它可以包含诸如进程是否为调试进程之类的信息\l|
        <f4> [+0x00c] DebugFlags       : Uint4B\l 标志调试进程的特定信息\l|
        <f5> [+0x010] ConsoleHandle    : Ptr64 Void\l 进程的控制台。如果进程没有控制台，此句柄将为 NULL\l|
        <f6> [+0x018] ConsoleFlags     : Uint4B\l 有关控制台的标志。例如，它可以包含诸如控制台是否具有光标之类的信息\l|
        <f7> [+0x020] StandardInput    : Ptr64 Void\l 标准输入\l|
        <f8> [+0x028] StandardOutput   : Ptr64 Void\l 标准输出\l|
        <f9> [+0x030] StandardError    : Ptr64 Void\l 标准错误\l|
        <f10> [+0x038] CurrentDirectory : _CURDIR\l 当前目录的信息\l|
        <f11> [+0x050] DllPath          : _UNICODE_STRING\l 表示 DLL 的路径\l|
        <f12> [+0x060] ImagePathName    : _UNICODE_STRING\l 进程的映像路径名\l|
        <f13> [+0x070] CommandLine      : _UNICODE_STRING\l 进程启动命令行\l|
        <f14> [+0x080] Environment      : Ptr64 Void\l 环境变量\l|
        <f15> [+0x088] StartingX        : Uint4B\l 以下六个用于控制新进程窗口位置和大小的整数\l|
        <f16> [+0x08c] StartingY        : Uint4B\l|
        <f17> [+0x090] CountX           : Uint4B\l|
        <f18> [+0x094] CountY           : Uint4B\l|
        <f19> [+0x098] CountCharsX      : Uint4B\l|
        <f20> [+0x09c] CountCharsY      : Uint4B\l|
        <f21> [+0x0a0] FillAttribute    : Uint4B\l|
        <f22> [+0x0a4] WindowFlags      : Uint4B\l 以下6个包含有关窗口、桌面和其他运行时数据的标志和信息\l|
        <f23> [+0x0a8] ShowWindowFlags  : Uint4B\l|
        <f24> [+0x0b0] WindowTitle      : _UNICODE_STRING\l|
        <f25> [+0x0c0] DesktopInfo      : _UNICODE_STRING\l|
        <f26> [+0x0d0] ShellInfo        : _UNICODE_STRING\l|
        <f27> [+0x0e0] RuntimeData      : _UNICODE_STRING\l|
        <f28> [+0x0f0] CurrentDirectores : [32] _RTL_DRIVE_LETTER_CURDIR\l 当前驱动器的目录信息\l|
        <f29> [+0x3f0] EnvironmentSize  : Uint8B\l 环境变量缓冲区的大小\l|
        <f30> [+0x3f8] EnvironmentVersion : Uint8B\l 环境变量的版本号\l|
        <f31> [+0x400] PackageDependencyData : Ptr64 Void\l 指向包依赖数据的指针\l|
        <f32> [+0x408] ProcessGroupId   : Uint4B\l 进程组的 ID\l|
        <f33> [+0x40c] LoaderThreads    : Uint4B\l 加载器线程的数量\l|
        <f34> [+0x410] RedirectionDllName : _UNICODE_STRING\l 重定向 DLL 的名称（在 REDSTONE4 中添加）\l|
        <f35> [+0x420] HeapPartitionName : _UNICODE_STRING\l 堆分区的名称（在 19H1 中添加）\l|
        <f36> [+0x430] DefaultThreadpoolCpuSetMasks : Ptr64 Uint8B\l 默认线程池 CPU 集合掩码计数（在 WIN11 中添加）\l|
        <f37> [+0x438] DefaultThreadpoolCpuSetMaskCount : Uint4B\l 默认线程池线程的最大值（在 WIN11 中添加）\l|
        <f38> [+0x43c] DefaultThreadpoolThreadMaximum : Uint4B\l 堆内存类型掩码（在 WIN11 中添加）\l"
    ]
    _PEB_LDR_DATA[
        label="<f0> _PEB_LDR_DATA|
        <f1> [+0x000] Length           : Uint4B\l|
        <f2> [+0x004] Initialized      : UChar\l|
        <f3> [+0x008] SsHandle         : Ptr64 Void\l|
        <f4> [+0x010] InLoadOrderModuleList : _LIST_ENTRY\l|
        <f5> [+0x020] InMemoryOrderModuleList : _LIST_ENTRY\l|
        <f6> [+0x030] InInitializationOrderModuleList : _LIST_ENTRY\l|
        <f7> [+0x040] EntryInProgress  : Ptr64 Void\l|
        <f8> [+0x048] ShutdownInProgress : UChar\l|
        <f9> [+0x050] ShutdownThreadId : Ptr64 Void\l"
    ]
    _LIST_ENTRY [
        label="<f0> _LIST_ENTRY|
        <f1> [+0x000] Flink            : Ptr64 _LIST_ENTRY\l|
        <f2> [+0x008] Blink            : Ptr64 _LIST_ENTRY\l"
    ]
    _LDR_DATA_TABLE_ENTRY [
        label="<f0> _LDR_DATA_TABLE_ENTRY|
        <f1> [+0x000] InLoadOrderLinks : _LIST_ENTRY\l 一个双向链表头，用于在加载顺序列表中链接此实例\l|
        <f2> [+0x010] InMemoryOrderLinks : _LIST_ENTRY\l 一个双向链表头，用于在内存顺序列表中链接此实例\l|
        <f3> [+0x020] InInitializationOrderLinks : _LIST_ENTRY\l 一个双向链表头，用于在初始化顺序列表中链接此实例\l|
        <f4> [+0x030] DllBase          : Ptr64 Void\l DLL的基址，即DLL在内存中的位置\l|
        <f5> [+0x038] EntryPoint       : Ptr64 Void\l DLL的入口点，即DLL被加载后首先执行的代码位置\l|
        <f6> [+0x040] SizeOfImage      : Uint4B\l DLL的映像大小，即DLL占用的内存空间大小\l|
        <f7> [+0x048] FullDllName      : _UNICODE_STRING\l 包含完整DLL名称的Unicode字符串\l|
        <f8> [+0x058] BaseDllName      : _UNICODE_STRING\l 只包含DLL基本名称的Unicode字符串\l|
        <f9> [+0x068] FlagGroup        : [4] UChar\l 用于标识DLL的一些标志位\l|
        <f10> [+0x068] Flags            : Uint4B\l|
        <f11> [+0x068] PackagedBinary   : Pos 0, 1 Bit\l|
        <f12> [+0x068] MarkedForRemoval : Pos 1, 1 Bit\l|
        <f13> [+0x068] ImageDll         : Pos 2, 1 Bit\l|
        <f14> [+0x068] LoadNotificationsSent : Pos 3, 1 Bit\l|
        <f15> [+0x068] TelemetryEntryProcessed : Pos 4, 1 Bit\l|
        <f16> [+0x068] ProcessStaticImport : Pos 5, 1 Bit\l|
        <f17> [+0x068] InLegacyLists    : Pos 6, 1 Bit\l|
        <f18> [+0x068] InIndexes        : Pos 7, 1 Bit\l|
        <f19> [+0x068] ShimDll          : Pos 8, 1 Bit\l|
        <f20> [+0x068] InExceptionTable : Pos 9, 1 Bit\l|
        <f21> [+0x068] ReservedFlags1   : Pos 10, 2 Bits\l|
        <f22> [+0x068] LoadInProgress   : Pos 12, 1 Bit\l|
        <f23> [+0x068] LoadConfigProcessed : Pos 13, 1 Bit\l|
        <f24> [+0x068] EntryProcessed   : Pos 14, 1 Bit\l|
        <f25> [+0x068] ProtectDelayLoad : Pos 15, 1 Bit\l|
        <f26> [+0x068] ReservedFlags3   : Pos 16, 2 Bits\l|
        <f27> [+0x068] DontCallForThreads : Pos 18, 1 Bit\l|
        <f28> [+0x068] ProcessAttachCalled : Pos 19, 1 Bit\l|
        <f29> [+0x068] ProcessAttachFailed : Pos 20, 1 Bit\l|
        <f30> [+0x068] CorDeferredValidate : Pos 21, 1 Bit\l|
        <f31> [+0x068] CorImage         : Pos 22, 1 Bit\l|
        <f32> [+0x068] DontRelocate     : Pos 23, 1 Bit\l|
        <f33> [+0x068] CorILOnly        : Pos 24, 1 Bit\l|
        <f34> [+0x068] ChpeImage        : Pos 25, 1 Bit\l|
        <f35> [+0x068] ReservedFlags5   : Pos 26, 2 Bits\l|
        <f36> [+0x068] Redirected       : Pos 28, 1 Bit\l|
        <f37> [+0x068] ReservedFlags6   : Pos 29, 2 Bits\l|
        <f38> [+0x068] CompatDatabaseProcessed : Pos 31, 1 Bit\l|
        <f39> [+0x06c] ObsoleteLoadCount : Uint2B\l|
        <f40> [+0x06e] TlsIndex         : Uint2B\l 线程本地存储(TLS)的索引，用于存储每个线程的DLL特定数据\l|
        <f41> [+0x070] HashLinks        : _LIST_ENTRY\l 一个链表头，用于链接散列表中的所有项\l|
        <f42> [+0x080] TimeDateStamp    : Uint4B\l 时间戳，表示DLL的创建时间或版本信息\l|
        <f43> [+0x088] EntryPointActivationContext : Ptr64 _ACTIVATION_CONTEXT\l 指向包含DLL入口点激活上下文的指针\l|
        <f44> [+0x090] Lock             : Ptr64 Void\l 指向一个锁的指针，可能用于同步操作\l|
        <f45> [+0x098] DdagNode         : Ptr64 _LDR_DDAG_NODE\l 一个指向LDR_DDAG_NODE结构的指针，该结构可能用于描述加载依赖性数据图（DAG）\l|
        <f46> [+0x0a0] NodeModuleLink   : _LIST_ENTRY\l 一个链表头，用于链接该DLL与其他模块的关系\l|
        <f47> [+0x0b0] LoadContext      : Ptr64 _LDRP_LOAD_CONTEXT\l 指向LDRP_LOAD_CONTEXT结构的指针，该结构可能包含加载DLL的上下文信息\l|
        <f48> [+0x0b8] ParentDllBase    : Ptr64 Void\l 指向父DLL的基址的指针\l|
        <f49> [+0x0c0] SwitchBackContext : Ptr64 Void\l 一个指向上下文切换时的上下文的指针\l|
        <f50> [+0x0c8] BaseAddressIndexNode : _RTL_BALANCED_NODE\l 一个指向RTL_BALANCED_NODE结构的指针，该结构可能用于描述基址索引\l|
        <f51> [+0x0e0] MappingInfoIndexNode : _RTL_BALANCED_NODE\l 一个指向RTL_BALANCED_NODE结构的指针，该结构可能用于描述映射信息索引\l|
        <f52> [+0x0f8] OriginalBase     : Uint8B\l DLL的原始基址\l|
        <f53> [+0x100] LoadTime         : _LARGE_INTEGER\l DLL的加载时间\l|
        <f54> [+0x108] BaseNameHashValue : Uint4B\l 基于名称对DLL进行哈希的值\l|
        <f55> [+0x10c] LoadReason       : _LDR_DLL_LOAD_REASON\l 表示加载DLL的原因的枚举值\l|
        <f56> [+0x110] ImplicitPathOptions : Uint4B\l 隐式路径选项，可能表示加载DLL的路径选择方式\l|
        <f57> [+0x114] ReferenceCount   : Uint4B\l 表示DLL被引用的次数\l|
        <f58> [+0x118] DependentLoadFlags : Uint4B\l 表示依赖加载标志，可能用于描述DLL之间的依赖关系\l|
        <f59> [+0x11c] SigningLevel     : UChar\l 签名的级别，从Windows 10 RS2开始添加\l"
    ]
    _EXCEPTION_REGISTRATION_RECORD  [
        label="<f0> _EXCEPTION_REGISTRATION_RECORD|
            <f1> [+0x000] Next             : Ptr64 _EXCEPTION_REGISTRATION_RECORD\l|
            <f2> [+0x008] Handler          : Ptr64     _EXCEPTION_DISPOSITION\l"
    ]
    EXCEPTION_DISPOSITION [
        label="<f0> #ifndef EXCEPTION_DISPOSITION\l
            typedef enum _EXCEPTION_DISPOSITION \{\l
            ExceptionContinueExecution = 0,\l
            ExceptionContinueSearch = 1,\l
            ExceptionNestedException = 2,\l
            ExceptionCollidedUnwind = 3\l
            \} EXCEPTION_DISPOSITION;\l
        #endif\l"
    ]
    EXCEPTION_HANDLER [
        label="<f0> typedef EXCEPTION_DISPOSITION (*PEXCEPTION_HANDLER)(\l|
            <f1> struct _EXCEPTION_RECORD *ExceptionRecord,\l
            struct _EXCEPTION_FRAME *EstablisherFrame,\l|
            <f2> struct _CONTEXT *ContextRecord,\l
            struct _EXCEPTION_FRAME **DispatcherContext);\l"
    ]
    _EXCEPTION_RECORD [
        label="typedef struct _EXCEPTION_RECORD \{\l
            DWORD                    ExceptionCode;\l
            DWORD                    ExceptionFlags;\l
            struct _EXCEPTION_RECORD  *ExceptionRecord;\l
            PVOID                    ExceptionAddress;\l
            DWORD                    NumberParameters;\l
            ULONG_PTR                ExceptionInformation[EXCEPTION_MAXIMUM_PARAMETERS];\l
            \} EXCEPTION_RECORD, *PEXCEPTION_RECORD;\l"
    ]
    _CONTEXT[
        label="typedef struct _CONTEXT \{\l
            DWORD ContextFlags;\l

            DWORD   Dr0;\l
            DWORD   Dr1;\l
            DWORD   Dr2;\l
            DWORD   Dr3;\l
            DWORD   Dr6;\l
            DWORD   Dr7;\l

            FLOATING_SAVE_AREA FloatSave;\l

            DWORD   SegGs;\l
            DWORD   SegFs;\l
            DWORD   SegEs;\l
            DWORD   SegDs;\l

            DWORD   Edi;\l
            DWORD   Esi;\l
            DWORD   Ebx;\l
            DWORD   Edx;\l
            DWORD   Ecx;\l
            DWORD   Eax;\l

            DWORD   Ebp;\l
            DWORD   Eip;\l
            DWORD   SegCs;\l
            DWORD   EFlags;\l
            DWORD   Esp;\l
            DWORD   SegSs;\l

            BYTE    ExtendedRegisters[MAXIMUM_SUPPORTED_EXTENSION];\l
            \} CONTEXT;\l"
    ]
    

    # 关系
    _ETHREAD:f1 -> _KTHREAD:f0
    _KTHREAD:f85 -> _TEB:f0
    # _KTHREAD:f82 -> _LIST_ENTRY:f0
    # _KTHREAD:f115 -> _LIST_ENTRY:f0
    # _KTHREAD:f157 -> _LIST_ENTRY:f0
    # _KTHREAD:f158 -> _LIST_ENTRY:f0
    # _KTHREAD:f176 -> _LIST_ENTRY:f0
    # _KTHREAD:f197 -> _LIST_ENTRY:f0

    _TEB:f1 -> _NT_TIB:f0
    _TEB:f3 -> _CLIENT_ID:f0
    _TEB:f6 -> _PEB:f0
    _TEB:f56 -> _LIST_ENTRY:f0

    _PEB:f17 -> _RTL_USER_PROCESS_PARAMETERS:f0
    _PEB:f16 -> _PEB_LDR_DATA:f0
    _PEB_LDR_DATA:f4 -> _LIST_ENTRY:f0

    _NT_TIB:f0 -> _EXCEPTION_REGISTRATION_RECORD:f0
    _EXCEPTION_REGISTRATION_RECORD:f2 -> EXCEPTION_HANDLER
    EXCEPTION_HANDLER:f0 -> EXCEPTION_DISPOSITION [label="返回值"]
    EXCEPTION_HANDLER:f1 -> _EXCEPTION_RECORD [label="_EXCEPTION_RECORD 结构体"]
    EXCEPTION_HANDLER:f2 -> _CONTEXT [label="_CONTEXT 结构体"]

    _EPROCESS:f93 -> _PEB:f0
    _EPROCESS:f1 -> _KPROCESS:f0

    _LIST_ENTRY:f1 -> _LDR_DATA_TABLE_ENTRY:f0
}
