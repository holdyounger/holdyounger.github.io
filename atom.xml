<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oone</title>
  
  <subtitle>固执无罪，梦想无价 | Coding For Knowledge</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-11-09T02:12:20.600Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>mingming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【工具】IDA 使用详记</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91IDA%20%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%AE%B0/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91IDA%20%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%AE%B0/</id>
    <published>2023-11-08T16:00:00.000Z</published>
    <updated>2023-11-09T02:12:20.600Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Exports-窗口"><a href="#Exports-窗口" class="headerlink" title="Exports 窗口"></a>Exports 窗口</h2><p>Exports 窗口展示了当前 PE 文件的导出接口信息。</p><img src="/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91IDA%20%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%AE%B0/image-20231109101150295.png" class="" title="Exports窗口"><p>在IDA Pro的Exports窗口中，每个函数名称旁边的字母可能有多种含义，具体取决于函数的属性。</p><p>在Exports窗口中，通常会看到以下几种字母标识：</p><ul><li>“I”：表示该函数是导入的（Imported）。这通常意味着这个函数是由另一个模块提供的，而不是当前分析的模块。导入的函数通常在调用其他模块的函数时使用。</li><li>“D”：表示该函数是导出的（Declared）。这通常意味着该函数是当前模块声明的，但并未实现。导出的函数通常是为了允许其他模块通过名称链接（name mangling）来调用它们。</li><li>“F”：表示该函数是已定义的（Defined）。这通常意味着该函数在当前的模块中已经实现。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Exports-窗口&quot;&gt;&lt;a href=&quot;#Exports-窗口&quot; class=&quot;headerlink&quot; title=&quot;Exports 窗口&quot;&gt;&lt;/a&gt;Exports 窗口&lt;/h2&gt;&lt;p&gt;Exports 窗口展示了当前 PE 文件的导出接口信息。&lt;/p&gt;
&lt;img</summary>
      
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>【汇编】寄存器相关.md</title>
    <link href="http://example.com/B_Code/%E6%B1%87%E7%BC%96/%E3%80%90%E6%B1%87%E7%BC%96%E3%80%91%E5%AF%84%E5%AD%98%E5%99%A8%E7%9B%B8%E5%85%B3/"/>
    <id>http://example.com/B_Code/%E6%B1%87%E7%BC%96/%E3%80%90%E6%B1%87%E7%BC%96%E3%80%91%E5%AF%84%E5%AD%98%E5%99%A8%E7%9B%B8%E5%85%B3/</id>
    <published>2023-11-02T16:00:00.000Z</published>
    <updated>2023-11-08T05:40:31.892Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：寄存器相关整理</p></blockquote><span id="more"></span><p>[toc]</p><h2 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h2><h3 id="CS"><a href="#CS" class="headerlink" title="CS"></a>CS</h3><p>存放当前正在运行的程序代码所在段的段基址，表示当前使用的指令代码可以从该段寄存器指定的存储器段中取得，相应的偏移量则由IP提供。 </p><h3 id="SS"><a href="#SS" class="headerlink" title="SS"></a>SS</h3><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><h3 id="ES"><a href="#ES" class="headerlink" title="ES"></a>ES</h3><h3 id="FS"><a href="#FS" class="headerlink" title="FS"></a>FS</h3><p>&#x3D;&#x3D;fs&#x3D;&#x3D; 是 &#x3D;&#x3D;80386&#x3D;&#x3D; 起增加的两个辅助段寄存器之一,在这之前只有一个辅助段寄存器ES FS寄存器指向当前活动线程的TEB结构（线程结构）</p><table><thead><tr><th>偏移</th><th>说明</th></tr></thead><tbody><tr><td>00</td><td>只想SEH链表指针</td></tr><tr><td>04</td><td>线程堆栈顶部（地址最小）</td></tr><tr><td>08</td><td>线程堆栈底部（地址最大）</td></tr><tr><td>0c</td><td>SubSystemTib</td></tr><tr><td>10</td><td>FiberData</td></tr><tr><td>14</td><td>ArbitraryUserPointer</td></tr><tr><td>18</td><td>FS 段寄存器在内存中的镜像</td></tr><tr><td>20</td><td>进程PID</td></tr><tr><td>24</td><td>线程ID</td></tr><tr><td>2c</td><td>指向线程局部存储的指针</td></tr><tr><td>30</td><td>PEB结构地址（进程结构）</td></tr><tr><td>34</td><td>上一个错误（LastError)</td></tr></tbody></table><h3 id="GS"><a href="#GS" class="headerlink" title="GS"></a>GS</h3>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：寄存器相关整理&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="B_Code" scheme="http://example.com/categories/B-Code/"/>
    
    <category term="汇编" scheme="http://example.com/categories/B-Code/%E6%B1%87%E7%BC%96/"/>
    
    
    <category term="寄存器" scheme="http://example.com/tags/%E5%AF%84%E5%AD%98%E5%99%A8/"/>
    
    <category term="汇编" scheme="http://example.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>【工具】使用 GraphViz 画图</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/Graphviz%E7%94%BB%E5%9B%BE/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/Graphviz%E7%94%BB%E5%9B%BE/</id>
    <published>2023-11-01T02:50:09.593Z</published>
    <updated>2023-11-09T07:24:38.585Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：使用 GraphViz 画图</p><p>Example: <a href="https://renenyffenegger.ch/notes/tools/Graphviz/examples/index">Graphviz (dot) examples</a></p></blockquote><span id="more"></span><p>[toc]</p><h2 id="Dot命令"><a href="#Dot命令" class="headerlink" title="Dot命令"></a>Dot命令</h2><p>dot渲染成其他文件命令：</p><p><a href="https://graphviz.org/doc/info/command.html">Command Line | Graphviz</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dot -Tsvg input.dot</span><br></pre></td></tr></table></figure><h2 id="中文乱码问题"><a href="#中文乱码问题" class="headerlink" title="中文乱码问题"></a>中文乱码问题</h2><p>需要设置字体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fontname=&quot;Microsoft Yahei&quot;</span><br></pre></td></tr></table></figure><h2 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h2><p><a href="https://www.graphviz.org/doc/info/attrs.html">Attributes | Graphviz</a></p><h3 id="cluster"><a href="#cluster" class="headerlink" title="cluster"></a>cluster</h3><p>Whether the subgraph is a cluster</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">digraph cats &#123;</span><br><span class="line">  subgraph cluster_big_cats &#123;</span><br><span class="line">    // This subgraph is a cluster, because the name begins with &quot;cluster&quot;</span><br><span class="line">    </span><br><span class="line">    &quot;Lion&quot;;</span><br><span class="line">    &quot;Snow Leopard&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  subgraph domestic_cats &#123;</span><br><span class="line">    // This subgraph is also a cluster, because cluster=true.</span><br><span class="line">    cluster=true;</span><br><span class="line"></span><br><span class="line">    &quot;Siamese&quot;;</span><br><span class="line">    &quot;Persian&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  subgraph not_a_cluster &#123;</span><br><span class="line">    // This subgraph is not a cluster, because it doesn&#x27;t start with &quot;cluster&quot;,</span><br><span class="line">    // nor sets cluster=true.</span><br><span class="line">    </span><br><span class="line">    &quot;Wildcat&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="colorscheme"><a href="#colorscheme" class="headerlink" title="colorscheme"></a>colorscheme</h3><p>A color scheme namespace: the context for interpreting color names</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">graph &#123;</span><br><span class="line">  node [colorscheme=oranges9] # Apply colorscheme to all nodes</span><br><span class="line">  1 [color=1]</span><br><span class="line">  2 [color=2]</span><br><span class="line">  3 [color=3]</span><br><span class="line">  4 [color=4]</span><br><span class="line">  5 [color=5]</span><br><span class="line">  6 [color=6]</span><br><span class="line">  7 [color=7]</span><br><span class="line">  8 [color=8]</span><br><span class="line">  9 [color=9]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="compound"><a href="#compound" class="headerlink" title="compound"></a>compound</h3><p>If true, allow edges between clusters</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">digraph &#123;</span><br><span class="line">  compound=true;</span><br><span class="line"></span><br><span class="line">  subgraph cluster_a &#123;</span><br><span class="line">    label=&quot;Cluster A&quot;;</span><br><span class="line">    node1; node3; node5; node7;</span><br><span class="line">  &#125;</span><br><span class="line">  subgraph cluster_b &#123;</span><br><span class="line">    label=&quot;Cluster B&quot;;</span><br><span class="line">    node2; node4; node6; node8;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  node1 -&gt; node2 [label=&quot;1&quot;];</span><br><span class="line">  node3 -&gt; node4 [label=&quot;2&quot; ltail=&quot;cluster_a&quot;];</span><br><span class="line">  </span><br><span class="line">  node5 -&gt; node6 [label=&quot;3&quot; lhead=&quot;cluster_b&quot;];</span><br><span class="line">  node7 -&gt; node8 [label=&quot;4&quot; ltail=&quot;cluster_a&quot; lhead=&quot;cluster_b&quot;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="concentrate"><a href="#concentrate" class="headerlink" title="concentrate"></a>concentrate</h3><p>If true, use edge concentrators</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">digraph &#123;</span><br><span class="line">    concentrate=true</span><br><span class="line">    a -&gt; b [label=&quot;1&quot;]</span><br><span class="line">    c -&gt; b</span><br><span class="line">    d -&gt; b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="constraint"><a href="#constraint" class="headerlink" title="constraint"></a>constraint</h3><p>If false, the edge is not used in ranking the nodes</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">digraph G &#123;</span><br><span class="line">  a -&gt; c;</span><br><span class="line">  a -&gt; b;</span><br><span class="line">  b -&gt; c [constraint=false];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用GraphVia画结构体"><a href="#使用GraphVia画结构体" class="headerlink" title="使用GraphVia画结构体"></a>使用GraphVia画结构体</h2><h3 id="使用DEMO"><a href="#使用DEMO" class="headerlink" title="使用DEMO"></a>使用DEMO</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">digraph structs &#123;</span><br><span class="line">    node [shape=record];</span><br><span class="line">    struct1 [label=&quot;&lt;f0&gt; left|&lt;f1&gt; mid&amp;#92; dle|&lt;f2&gt; right&quot;];</span><br><span class="line">    struct2 [label=&quot;&lt;f0&gt; one|&lt;f1&gt; two&quot;];</span><br><span class="line">    struct3 [label=&quot;hello&amp;#92;nworld |&#123; b |&#123;c|&lt;here&gt; d|e&#125;| f&#125;| g | h&quot;];</span><br><span class="line">    struct1:f1 -&gt; struct2:f0;</span><br><span class="line">    struct1:f2 -&gt; struct3:here;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/G_%E5%B7%A5%E5%85%B7/Graphviz%E7%94%BB%E5%9B%BE/image-20231101160751453.png" class="" title="绘制结果">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：使用 GraphViz 画图&lt;/p&gt;
&lt;p&gt;Example: &lt;a href=&quot;https://renenyffenegger.ch/notes/tools/Graphviz/examples/index&quot;&gt;Graphviz (dot) examples&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>自然辩证法</title>
    <link href="http://example.com/Z_%E6%9D%82%E8%AE%B0/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95/"/>
    <id>http://example.com/Z_%E6%9D%82%E8%AE%B0/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95/</id>
    <published>2023-10-27T01:24:02.562Z</published>
    <updated>2023-11-08T05:51:46.262Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：自然辩证法</p></blockquote><span id="more"></span><p>参考链接：<a href="http://www.doczj.com/doc/6110418199-11.html">2019自然辩证法课后思考题及答案_文档之家</a></p><p>[toc]</p><h2 id="第一章-自然辩证法（byself）"><a href="#第一章-自然辩证法（byself）" class="headerlink" title="第一章 自然辩证法（byself）"></a>第一章 自然辩证法（byself）</h2><h3 id="1-如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？"><a href="#1-如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？" class="headerlink" title="1.如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？"></a>1.如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？</h3><p>（1）古代朴素自然观以直观性、思辨性和猜测性的方式从整体把握认识自然界的本源和发展，但缺乏系统的、以实验为基础的科学依据，尤其是将非物质性的东西当做限于物质世界的独立存在，并认为物质世界是它的派生物，为唯心主义的产生提供了借口，最终导致人类认识的分化。</p><p>（2）机械唯物主义自然观的核心是自然界绝对不变，虽然在实证科学的基础上继承和坚持了古代朴素唯物主义的思想，但是不懂得一般与个别、运动和静止等的辩证关系，以一种片面的、孤立的和静止的方法观察自然界，挤不动的自然界的辩证法，自然不能吧唯物主义坚持到底。</p><p>（3）辩证唯物主义自然克服了以往哲学自然观的缺陷，坚持了物质世界的客观实在性的唯物主义一元论原则，突出了物质世界的整体性和矛盾性，提示了物质世界的普遍联系，强调了人类起源于自然界、依赖于自然并在把握自然界发展规律的基础上能移动地和改造自然，强调了人与自然界的和谐统一。</p><h3 id="2-如何理解系统自然观、人工自然观和生态自然观的辩证关系？"><a href="#2-如何理解系统自然观、人工自然观和生态自然观的辩证关系？" class="headerlink" title="2.如何理解系统自然观、人工自然观和生态自然观的辩证关系？"></a>2.如何理解系统自然观、人工自然观和生态自然观的辩证关系？</h3><p>第一，它们都围绕人与自然界关系的主题，丰富和发展了马克思注意自然观的本体论、认识论和方法论；它们都坚持人类与自然界、人工自然界和天然自然界、人与生态系统的辩证统一，都为实现可持续发展和生态文明建设奠定了理论基础。</p><p>第二，它们在研究人与自然界关系的各方面各有其侧重点；系统自然观为正确认识和处理人与自然地关系提供了新的思维方式，人工自然观突出并反思了人的主体性和创造性；自然生态馆站在人类文明的立场，强调了人与自然界的协调与发展。</p><p>第三，它们在研究人与自然界的关系方面相互关联；系统自然观通过系统思维方式，为人工自然观和生态自然观提供了方法论基础；人工自然观通过突出人的主体性和实践性，为系统自然观和生态自然观提供了认识论前提；生态自然观通过强调人与自然界的统一性、协调性关系为系统自然观和人工自然观指明了发展方向和目标。</p><h3 id="3-如何认识生态自然观和生态文明建设之间的辩证关系？"><a href="#3-如何认识生态自然观和生态文明建设之间的辩证关系？" class="headerlink" title="3.如何认识生态自然观和生态文明建设之间的辩证关系？"></a>3.如何认识生态自然观和生态文明建设之间的辩证关系？</h3><p>生态文明是人类文明的一种形式。它以尊重和维护生态环境为主旨，以可持续发展为根据，以未来人类的继续发展为着眼点。人类对生态文明的探索，是对人与自然和谐关系的表现。生态文明与生态自然观有着紧密的联系，生态文明是生态自然观的应有之义，生态自然观对现今世界生态文明发展及实践有着广泛的指导意义。生态文明的提出，是人们对可持续发展问题认识深化的必然结果。人类通过遵守可持续性、共同性和公平性等原则，通过实施节能减排和发展低碳经济，构建和谐社会和建设生态文明，实现人类社会与生态系统的协调发展；人与生态系统的协调发展仍应以人类为主体，仍应包括改造自然的内容，注重保护生态环境和防灾减灾；生态自然界是天然自然界和人工自然界的统一，是人类文明发展的目标，生态文明的提出，是人们对可持续发展问题认识深化的必然结果。生态自然观指出，人与自然都是生态系统中不可或缺的重要组成部分，人与自然是相互依存、和谐共处、共同促进的关系。人类的发展应该是人与社会、人与环境、当代人与后代人的协调发展。人类的发展不仅要讲究代内公平，而且要讲究代际之间的公平，不能以当代人的利益为中心，甚至为了当代人的利益而不惜牺牲后代人的利益。而必须讲究生态文明，牢固树立起可持续发展的生态文明观。</p><h3 id="4-如何理解“绿水青山就是金山银山”？"><a href="#4-如何理解“绿水青山就是金山银山”？" class="headerlink" title="4.如何理解“绿水青山就是金山银山”？"></a>4.如何理解“绿水青山就是金山银山”？</h3><p>简单的来说，”绿水青山就是金山银山”就是指生态可持续发展。蓝天白云、青山绿水是人类赖以生存的环境，是社会长远发展的最大本钱，生态优势可以变成经济优势、发展优势，形成了一种浑然一体、和谐统一的关系。因此保护绿水青山，才能保住人们赖以生存的生态环境，从而赢得长远的经济可持续发展。</p><p>习近平总书记关于绿水青山就是金山银山的辩证论是生态环境生产力理论生动、朴实和富含哲理的印证：“绿水青山可以源源不断地带来金山银山，绿水青山本身就是金山银山，我们种的常青树就是摇钱树，生态优势变成经济优势。”</p><p>“如果能够把这些生态环境优势转化为生态农业、生态工业、生态旅游等生态经济的优势，那么绿水青山也就变成了金山银山。”当然，绿水青山和金山银</p><p>山之间也有矛盾，绿水青山是真正的金不换，“绿水青山可带来金山银山，但金山银山却买不到绿水青山”。</p><p>因此，当绿水青山和金山银山之间有不可调和的矛盾时，我们宁要绿水青山，不要金山银山。要像对待生命一样对待生态环境，统筹山水林田湖草系统治理，实行最严格的生态环境保护制度，形成绿色发展方式和生活方式，坚定走生产发展、生活富裕、生态良好的文明发展道路，建设美丽中国。</p><p>绿水青山就是金山银山的理念，一头是人类赖以生存的自然环境，另一头牵着财富生产；一头连着生态环境，另一头是人类活动的产物。从人与自然是生命共同体出发，将生态环境内化为生产力的内生变量与价值目标，蕴含着尊重自然、顺应自然、保护自然，谋求人与自然和谐发展的生态理念和价值诉求。</p><p>揭示了生态环境与生产力之间的辩证统一关系，突破了把保护生态与发展生产力对立起来的僵化思维，内含了保护、改善与建设生态环境和保护与发展生产力的有机统一，鲜活地概括了有中国气派、中国风格和中国话语特色的绿色发展内涵，是中国化马克思主义理论的光辉典范。</p><h2 id="第一章-自然辩证法"><a href="#第一章-自然辩证法" class="headerlink" title="第一章 自然辩证法"></a>第一章 自然辩证法</h2><h3 id="1-如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？-1"><a href="#1-如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？-1" class="headerlink" title="1.如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？"></a>1.如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系？</h3><p>朴素唯物主义自然观是古代自然哲学家们以科学技术为基础，概括和总结自然界及其与人类的关系形成的总的观点。它是马克思主义自然观形成的最初思想渊源。它具有①整体性和直观性，②思辨性和臆测性，③自发性和不彻底性。朴素唯物主义自然观的思想渊源是原始宗教神话自然观，其理论基础是自然哲学。朴素唯物主义自然观具有一定的缺陷：①不能彻底地坚持唯物主义，具有唯心主义因素，如泰勒斯的”水本原说”②不能满足民众的需要，掺杂着宿命和迷信等因素。③不能科学地说明自然界。</p><p>机械唯物主义自然观是近代自然科学家们以近代科学技术为基础，概括和总结自然界及其与人类的关系形成的总的观点。它是马克思主义自然观形成的重要思想渊源。它具有①机械性②不彻底性③形而上学性。机械唯物主义自然观①为辩证唯物主义自然观的形成创造了条件。他以近代自然科学为基础，强调自然界存在的客观性，物质性和发展的规律性，传承了朴素唯物主义自然观的思想传统。③为辩证唯物主义自然观的形成提供了前提。它所培植的崇尚理性的科学精神促进了辩证唯物主义自然观的形成。</p><p>辩证唯物主义自然观是马克思恩格斯以近代科学技术为基础，概括和总结自然界及其与人类关系形成的总的观点。它是马克思主义自然观形成的重要标志。辩证唯物主义自然观具有①实践性②历史性③辩证性④批判性。辩证唯物主义自然观“扬弃”了机械唯物主义自然观，在更高层次上实现了向古希腊朴素唯物主义自然观的回归。</p><p>三种自然观的发展本质是人类认识的发展，辩证唯物主义自然观是对朴素唯物主义自然观的否定之否定，是对机械唯物主义自然观的否定。任何一种自然观的产生都脱离不了当时科学的发展水平，也离不开人们的认识水平。而更先进的自然观对科学的发展又具有指导性意义。这个发展是螺旋上升的，在我们的认识中还会进行补充和丰富，在运动中发展自己。</p><h3 id="2-如何理解系统自然观、人工自然观和生态自然观的辩证关系？-1"><a href="#2-如何理解系统自然观、人工自然观和生态自然观的辩证关系？-1" class="headerlink" title="2.如何理解系统自然观、人工自然观和生态自然观的辩证关系？"></a>2.如何理解系统自然观、人工自然观和生态自然观的辩证关系？</h3><p>P42</p><h3 id="3-如何认识生态自然观和生态文明建设之间的辩证关系？-1"><a href="#3-如何认识生态自然观和生态文明建设之间的辩证关系？-1" class="headerlink" title="3.如何认识生态自然观和生态文明建设之间的辩证关系？"></a>3.如何认识生态自然观和生态文明建设之间的辩证关系？</h3><p>生态文明是人类文明的一种形式。它以尊重和维护生态环境为主旨，以可持续发展为根据，以未来人类的继续发展为着眼点。人类对生态文明的探索，是对人与自然和谐关系的表现。生态文明与生态自然观有着紧密的联系，生态文明是生态自然观的应有之义，生态自然观对现今世界生态文明发展及实践有着广泛的指导意义。生态文明的提出，是人们对可持续发展问题认识深化的必然结果。人类通过遵守可持续性、共同性和公平性等原则，通过实施节能减排和发展低碳经济，构建和谐社会和建设生态文明，实现人类社会与生态系统的协调发展；人与生态系统的协调发展仍应以人类为主体，仍应包括改造自然的内容，注重保护生态环境和防灾减灾；生态自然界是天然自然界和人工自然界的统一，是人类文明发展的目标，生态文明的提出，是人们对可持续发展问题认识深化的必然结果。生态自然观指出，人与自然都是生态系统中不可或缺的重要组成部分，人与自然是相互依存、和谐共处、共同促进的关系。人类的发展应该是人与社会、人与环境、当代人与后代人的协调发展。人类的发展不仅要讲究代内公平，而且要讲究代际之间的公平，不能以当代人的利益为中心，甚至为了当代人的利益而不惜牺牲后代人的利益。而必须讲究生态文明，牢固树立起可持续发展的生态文明观。</p><h3 id="4-如何理解“绿水青山就是金山银山”？-1"><a href="#4-如何理解“绿水青山就是金山银山”？-1" class="headerlink" title="4.如何理解“绿水青山就是金山银山”？"></a>4.如何理解“绿水青山就是金山银山”？</h3><p>“绿水青山就是金山银山”的重要思想，触及到了一个人类社会发展的大难题，即：金山银山是人的物质追求，绿水青山是人赖以生存的自然条件，这两者都是人生存和发展所需要的，而这两者对于人来说又很难兼得。自工业革命以来，人类以牺牲绿水青山来实现自己的物质追求，曾经创造了前所未有的文明奇迹。但是，这种不可持续的经济增长方式造成了许多灾难性的后果，促使人们在对传统的增长方式和发展理论进行反思的同时，开始重新研究发展理论，重新研究发展中人与自然的关系。</p><p>以我国为例，我们在过去实行的是“先增长后治污”模式，在“两座山”问题上实际上是采取了“为了金山银山可以暂时牺牲绿水青山”的做法;后来认识到这样做不仅不可持续，而且治污的代价要大于增长获得的收益，于是许多地方提出了“宁要绿水青山，不要金山银山”的口号，即下决心改变“先增长后治污”的模式，优化环境，保护生态。这样的口号，这样的做法，虽然也讲“可持续发展”，但实际上是把“可持续”与“发展”割裂开来，这不利于生产力的发展。</p><p>“绿水青山就是金山银山”，则以“就是”一词把“绿水青山”和“金山银山”辩证地连接起来，以积极的而不是悲观的态度阐明了这两者之间的关系，讲清楚了发展中人与自然的辩证统一关系绿水青山就是金山银山”这一重要思想，所表达的则是环境、生态应该是社会生产力内部的一个有机组成部分。也就是说，习近平把环境、生态纳入了社会生产力的范畴。这种态度就是马克思主义的态度，这种认识就是马克思主义的认识。。</p><p>因此，我们说习近平关于“绿水青山就是金山银山”的重要思想，以一种新颖的发展理念，坚持和发展了马克思主义创始人以积极乐观的态度认识和处理发展中人与自然关系问题的科学思想。</p><h3 id="5-简述辩证唯物主义自然观战胜机械论自然观的历史必然性。"><a href="#5-简述辩证唯物主义自然观战胜机械论自然观的历史必然性。" class="headerlink" title="5.简述辩证唯物主义自然观战胜机械论自然观的历史必然性。"></a>5.简述辩证唯物主义自然观战胜机械论自然观的历史必然性。</h3><p>机械论自然观的产生有其历史的必然性和合理性，但它用孤立的，静止的，片面的观点去看待世界，否认事物的联系和发展变化，否认事物的内部矛盾。实践是检验真理的唯一标准，机械论自然观的这些特点与近代自然科学已经相悖，应当摒弃。人类社会的大趋势是发展，在目前的历史环境下，机械论自然观的存在只会阻碍这种发展，所以必将被适应当前自然科学的辩证唯物主义自然观所取代，这是历史必然性。</p><p>P28</p><h2 id="第二章-科学技术观（byself）"><a href="#第二章-科学技术观（byself）" class="headerlink" title="第二章 科学技术观（byself）"></a>第二章 科学技术观（byself）</h2><h3 id="6-如何理解18-19世纪科学技术发展与马克思恩格斯科学技术思想产生的关系？"><a href="#6-如何理解18-19世纪科学技术发展与马克思恩格斯科学技术思想产生的关系？" class="headerlink" title="6.如何理解18.19世纪科学技术发展与马克思恩格斯科学技术思想产生的关系？"></a>6.如何理解18.19世纪科学技术发展与马克思恩格斯科学技术思想产生的关系？</h3><p>p45</p><p>从18世纪60年代起始于英国的第一头次技术革命和继之而来的产业革命，既向科学提出了新的要求，也为科学提供了新的事实，更为科学提供了新的交流方法，从而使科学在19世纪获得了长足的进步，取得了影响深远的一些重要发现，为辩证唯物主义自然观的产生提供了丰富的物质基础</p><p>19世纪的自然科学成就为辩证唯物主义自然观产生提供了科学前提。如在天文学上，1755年康德和拉普拉斯（1796年）分别提出的关于太阳系起源的星去假设。在地质学上，英国科学家莱伊尔1830年发表“地球演化学说”，在物理学上焦耳发现能量转化和守恒定律，从而动摇了形而上学的基础，在化学上1824年由维等人合成尿素，在生物上，1838年施旺提出细胞是生命 的基本结构单位，1958年达尔文创立特种起源论，对于这些重要的发现，恩格斯经过反复研究，从自然观的高度提出了运动形式及其相互转化的学说。恩格斯关于运动形式的学说把蕴含在当时诸多科学发现中的思想精华作了概念性升华，从而提供了一种观察研究自然的哲学方式</p><p>综上所述，辩证唯物主义自然观的产生反映了科学技术发展的历史必然性。</p><h3 id="7-怎样认识马克思恩格斯的科学技术思想在马克思主义理论体系中的重要地位？"><a href="#7-怎样认识马克思恩格斯的科学技术思想在马克思主义理论体系中的重要地位？" class="headerlink" title="7.怎样认识马克思恩格斯的科学技术思想在马克思主义理论体系中的重要地位？"></a>7.怎样认识马克思恩格斯的科学技术思想在马克思主义理论体系中的重要地位？</h3><p>马克思主义理论体系，是关于全世界无产阶级和全人类彻底解放的学说。它由马克思主义哲学、马克思主义政治经济学和科学社会主义三大部分组成，是马克思、恩格斯在批判地继承和吸收人类关于自然科学、思维科学、社会科学优秀成果的基础上于19世纪40年代创立的，并在实践中不断地丰富、发展和完善的无产阶级思想的科学体系。</p><p>马克思恩格斯科学技术思想表明了科学技术是推动社会发展的革命力量，通过对科学技术的理解、科学的分类、科学技术与哲学的关系、科学技术是生产力、科学技术的生产动因、科学技术的社会功能、科学技术与社会制度、科学与技术的相互关系、科学技术异化等方面观点的阐述，极大的丰富和发展了马克思主义理论，有助于指导我们正确分析科学技术及其发展的理论和现实问题。</p><h3 id="8-马恩与国外学者关于科技的本质区别p51-55"><a href="#8-马恩与国外学者关于科技的本质区别p51-55" class="headerlink" title="8.马恩与国外学者关于科技的本质区别p51-55"></a>8.马恩与国外学者关于科技的本质区别p51-55</h3><h3 id="9-如何理解科学技术一体化的特征？"><a href="#9-如何理解科学技术一体化的特征？" class="headerlink" title="9.如何理解科学技术一体化的特征？"></a>9.如何理解科学技术一体化的特征？</h3><p>在人类历史上，科学与技术经历了几次分合。科学与技术源起于人类的社会生产实践，本来是内在统一的，但随着生产力的发展，出现了脑力劳动与体力劳动的分工，一部分人从单纯的体力劳动中分化出来，专门从事政治、宗教、艺术、哲学等活动，科学与技术从此分道扬镳，科学活动由学者们承担，技术研究则由工匠们掌握。在古代，科学对技术的影响甚微，无论是自然经济条件下的农业技术，还是工匠的手工业技术，都是凭经验掌握和积累的，那时几乎没有以科学的应用为特征的技术，而只有手艺、技能——尽管这些经验可能发展到惊人的水平。</p><p>从15世纪下半叶近代自然科学产生以后，直到19世纪的上半叶，科学的实际应用才逐步显现效能。正如马克思所说：只有在资本主义条件下，才第一次产生了只有用科学方法才能解决的实际问题，才第一次达到使科学的应用成为可能和必要的那样一种规模，科学获得了成为致富手段的使用，发明成为一种特殊的职业，科学成为生产过程的因素，生产过程成为科学的应用。15世纪以后，科学实验活动融入科学研究20科学成就是在技术基础上的“技术科学化”的结果，技术可以产生科学，“技术科学化”表明:技术是科学发展的动力 ，科学需要推动技术前进；技术为科学的发展提供研究手段，特别是科学实</p><h3 id="10-为什么说科学发展表现为继承与创新的统一？（p62）"><a href="#10-为什么说科学发展表现为继承与创新的统一？（p62）" class="headerlink" title="10.为什么说科学发展表现为继承与创新的统一？（p62）"></a>10.为什么说科学发展表现为继承与创新的统一？（p62）</h3><h3 id="11-怎样认识技术发展的动力？对技术具有双刃剑作用的看法？"><a href="#11-怎样认识技术发展的动力？对技术具有双刃剑作用的看法？" class="headerlink" title="11.怎样认识技术发展的动力？对技术具有双刃剑作用的看法？"></a>11.怎样认识技术发展的动力？对技术具有双刃剑作用的看法？</h3><p>技术发展史不断证明,技术像一把双刃剑,既有有益于人类发展的一面,也有危害人类利益的一面。一方面，技术的进步推动了生产力内部各要素的变革，促进了产业结构的调整、经济形式的变化和经济增长方式的变化，实现了经济转型；变革了生产关系，增进了人类自由而全面的发展，推动人类社会进入发展的新阶段；将人类从繁重的劳动中解放出来，对人类的生活方式产生了深刻的影响。另一方面，技术的进步也产生了一些道德和伦理问题，如克隆人的伦理问题、基因治疗和基因增强的伦理问题、网络伦理问题、核伦理问题等。</p><p>因此，必须以人民为中心，大力发展事关国计民生的科学技术；必须以先进的文化来引导，协调科学文化与人文文化的冲突；必须改变单纯有利于经济增长的倾向，走经济增长与环境保护双赢之路；必须客观全面评价科学技术的风险和收益，指定恰当的科学技术公共政策。</p><h2 id="第二章-科学技术观"><a href="#第二章-科学技术观" class="headerlink" title="第二章 科学技术观"></a>第二章 科学技术观</h2><h3 id="1-如何理解18、19世纪科学技术发展与马克思、恩格斯科学技术思想产生的关系？"><a href="#1-如何理解18、19世纪科学技术发展与马克思、恩格斯科学技术思想产生的关系？" class="headerlink" title="1.如何理解18、19世纪科学技术发展与马克思、恩格斯科学技术思想产生的关系？"></a>1.如何理解18、19世纪科学技术发展与马克思、恩格斯科学技术思想产生的关系？</h3><p>18、19世纪，天文学、地理学、物理学、化学、解剖学、生物学等都有了长足的发展，特别是能量守恒与转化定律、细胞学说和生物进化论三大发现，使自然科学的发展进入了一个新时期，两次科技革命使人类进入了工业文明时代。马克思、恩格斯在总结和概括19世纪科学技术成果的基础上，形成了以辩证唯物主义为理论基础的科学技术思想。</p><h3 id="2-怎样认识马克思、恩格斯的科学技术思想在马克思主义理论体系中的地位？"><a href="#2-怎样认识马克思、恩格斯的科学技术思想在马克思主义理论体系中的地位？" class="headerlink" title="2.怎样认识马克思、恩格斯的科学技术思想在马克思主义理论体系中的地位？"></a>2.怎样认识马克思、恩格斯的科学技术思想在马克思主义理论体系中的地位？</h3><p>马克思主义科学技术观是基于马克思、恩格斯的科学技术思想，对科学基础机器发展规律的概括和总结，是马克思主义关于科学技术的本体论和认识论。</p><p>从辩证唯物主义和历史唯物主义的基本立场出发，在总体上把握马克思、恩格斯的科学技术思想；马克思主义认为科学是一般生产力，技术是现实生产力；科学是认识世界，技术是改造世界。现代科学和技术形成既有区别又有联系的体系结构。</p><h3 id="3-马克思、恩格斯和国外学者关于科学技术本质的分析有何主要差异？"><a href="#3-马克思、恩格斯和国外学者关于科学技术本质的分析有何主要差异？" class="headerlink" title="3.马克思、恩格斯和国外学者关于科学技术本质的分析有何主要差异？"></a>3.马克思、恩格斯和国外学者关于科学技术本质的分析有何主要差异？</h3><p>（1）马克思、恩格斯关于技术本质特征的分析</p><p>  马克思、恩格斯认为技术在本质上体现了“人类对自然的实践关系”，技术是人的本质力量的对象化。<br>  第一，劳动资料延长了人的自然的肢体。<br>  第二，工艺学在本质上揭示出人对自然的能动关系。<br>  第三，技术的发展引起生产关系的变革。</p><p>（2）国外学者对技术本质特征的研究</p><p>  欧美技术哲学存在工程学的和人文主义的两种技术研究路线；日本的技术论在技术的本质问题上形成了“方法技能说”、“劳动手段说”、“知识应用说”等观点。这些观点各有特色，但大都表现出对技术理解的单一性。<br>  我们需要用马克思主义科学技术观进行分析评价。马克思主义认为，技术是人类为满足自身的需要，在实践活动中根据实践经验或科学原理所创造发明的各种手段和方式方法的总和。主要体现在两个方面：一是技术活动，狭义的技术是指人类在利用自然、改造自然的劳动过程中所掌握的方法和手段；广义的技术是指人类改造自然、改造社会和改造人类自身的方法和手段。二是技术成果，包括技术理论、技能技巧、技术工艺与技术产品（物质设备）。<br>  技术在本质上体现了人对自然的实践关系，是人的本质力量的展现，属于直接生产力，是自然性和社会性、物质性和精神性、中立性与价值性、主体性和客体性、跃迁性和积累性的统一。</p><h3 id="4-如何理解科学技术一体化的特征？"><a href="#4-如何理解科学技术一体化的特征？" class="headerlink" title="4.如何理解科学技术一体化的特征？"></a>4.如何理解科学技术一体化的特征？</h3><p>（1）现代科学的体系结构由学科结构和知识结构组成</p><p>  学科结构由基础科学、技术科学、工程科学构成。知识结构由科学事实、科学概念、科学定律、科学假说、科学理论构成。现代科学的体系结构表现出现代科学的发展过程，其中学科结构形成立体的架构，知识结构各要素渗透在学科结构相对应的要素之中。基础科学、技术科学、工程科学都是系统化的知识，都会经过一个由科学事实到科学理论的形成过程。</p><p>（2）现代技术的体系结构由门类结构和形态结构组成</p><p>  门类结构由实验技术、基本技术和产业技术构成。<br>  形态结构由经验形态的技术、实体形态的技术和知识形态的技术构成。<br>  现代技术的体系结构表现出现代技术的发展过程，其中门类结构是立体的架构，形态结构的各要素同样渗透咋门类结构相对应的要素当中。实验技术、基本技术和产业技术都包含经验技能，都使用工具机器，都蕴含了知识。<br>  现代科学技术体系结构的研究表明，科学技术在各自的发展中，不但日益多样化和系统化，而且越来越呈现出科学技术一体化的特征。</p><h3 id="5-为什么说科学发展表现为继承与创新的统一？"><a href="#5-为什么说科学发展表现为继承与创新的统一？" class="headerlink" title="5.为什么说科学发展表现为继承与创新的统一？"></a>5.为什么说科学发展表现为继承与创新的统一？</h3><p>继承：市科学技术发展中的量变，它可使科学知识延续、扩大和加深。科学是个开放系统，它在时间上有继承性，在空间上有积累性。只有继承已发现的科学事实、已有理论中的正确东西，科学才能发展、不断完善。</p><p>创新：是人类对自然的认识出现新的飞跃，引起科学发展中的质变。创新是继承的必然趋势和目的。</p><p>在科学技术的发展模式及动力问题上，马克思主义认为科学发展在纵向上表现为渐进与飞跃的统一，在横向上表现为分化与综合的统一，在总体趋势上表现为继承与创新的统一。</p><p>技术的发展由社会需要、技术目的及科学进步等多种因素共同推动。其中社会需求与技术发展水平之间的矛盾是技术发展的基本动力，技术目的和技术手段之间的矛盾是技术发展的直接动力，科学进步是技术发展的重要推动力。</p><h3 id="6-怎样认识技术发展的动力？"><a href="#6-怎样认识技术发展的动力？" class="headerlink" title="6.怎样认识技术发展的动力？"></a>6.怎样认识技术发展的动力？</h3><p>马克思主义认为，技术的发展由社会需要、技术目的以及科学进步等多种因素共同推动。</p><p>（1）社会需求与技术发展水平之间的矛盾是技术发展的基本动力<br>  任何技术，最早都源于人类的需要。正是为了生存发展的需要，人类起初模仿自然，进而进行创造，发明了各种技术。同时，文化对技术发展具有明显的张力作用。先进的思想文化会推动技术的发展，而落后的思想文化则会制约和阻碍技术的发展，包括影像技术决策、技术研发以及技术成果的产业化各方面。</p><p>（2）技术目的和技术手段之间的矛盾是技术发展的直接动力<br>  技术目的就是在技术实践过程中在观念上预先建立的技术结果的主观形象，是技术实践的内在要求，影响并贯穿技术实践的全过程。技术手段即实现技术目的中介因素，包括实现技术目的的工具和实用工具的形式。技术目的的提出和实现，必须依赖于与之相匹配的技术手段。技术手段是实现技术目的的中介和保证，它包括达到技术功能要求所使用的工具以及应用工具的方式。</p><p>（3）科学进步是技术发展的重要推动力<br>  19世纪中期以后，科学走到了技术前面，成为技术发展的理论向导。科学革命导致技术革命，技术发展对科学进步的依赖程度越来越高，技术已成为科学的应用。尤其是当今社会的发展，已形成了科学技术一体化的双向互动过程。</p><h2 id="第三章-科学技术方法论"><a href="#第三章-科学技术方法论" class="headerlink" title="第三章 科学技术方法论"></a>第三章 科学技术方法论</h2><h3 id="1-如何理解马克思主义科学技术方法论与科学研究中的具体方法的关系？"><a href="#1-如何理解马克思主义科学技术方法论与科学研究中的具体方法的关系？" class="headerlink" title="1.如何理解马克思主义科学技术方法论与科学研究中的具体方法的关系？"></a>1.如何理解马克思主义科学技术方法论与科学研究中的具体方法的关系？</h3><p>马克思主义的科学技术方法论是以辩证唯物主义立场、观点为基础，吸取具体科学技术研究中的基本方法，并对其进行概括和升华的方法论。</p><p>科学技术研究，离不开辩证思维。分析与综合、归纳与演绎、从抽象到具体、历史与逻辑的统一，这些辩证思维的形式体现和贯彻在科学家、工程师的具体科学技术研究中。自觉的认识和提升这些辩证思维的形式，对于树立，马克思主义科学技术观，深入研究科学技术，建设创新型国家具有重要意义。</p><h3 id="2-如何理解辩证思维渗透在科学研究的全部过程中？"><a href="#2-如何理解辩证思维渗透在科学研究的全部过程中？" class="headerlink" title="2.如何理解辩证思维渗透在科学研究的全部过程中？"></a>2.如何理解辩证思维渗透在科学研究的全部过程中？</h3><p>马克思主义科学技术方法论的核心就是辩证思维。马克思主义科学技术方法论的基本原则就是把辩证法贯彻到科学技术研究中，以对立统一、质量互变和否定之否定的辩证思想渗透到具体的科学技术研究中，把握具体科学技术的研究过程。</p><h3 id="3-如何把握创造性思维特性？"><a href="#3-如何把握创造性思维特性？" class="headerlink" title="3.如何把握创造性思维特性？"></a>3.如何把握创造性思维特性？</h3><p>创造是科学研究和技术发明最重要特性之一。创造性思维不是在所有辩证思维和科学研究方法之外独立的一种思维方式或方法，是能够提出创见的思维，与一般性思维相比，是在思维特征方面不刻板，组合各种思维、灵活调用思维的特性。</p><p>创造性思维的特点是思维方向的求异性，思维结构的灵活性、思维进程的飞跃性、思维效果的整体性、思维表达的新颖性等。</p><p>创造性思维特别注重逻辑思维与非逻辑思维的统一、抽象思维与形象思维的辩证统一。</p><h3 id="4-注意多学科的交叉与融贯有何方法论意义？"><a href="#4-注意多学科的交叉与融贯有何方法论意义？" class="headerlink" title="4.注意多学科的交叉与融贯有何方法论意义？"></a>4.注意多学科的交叉与融贯有何方法论意义？</h3><p>移植和学科交叉或跨学科的研究方法，是创造性思维的两种非常有效的研究方法。当代科学研究和技术发明变得越来越复杂，进行移植与交叉，通过多学科或跨学科的研究，常常能够获得单一学科研究无法获得的创新成果。多学科融合或通过跨学科研究问题也是当代科学和技术解决问题的创造性方法，体现了广泛联系和发展的辩证法。</p><p>当代各门科学之间的交叉型越来越大，通过学科之间的交叉往往可以获得新的认识，带来创新。学科交叉成为一种新的思考方式和研究方法。</p><p>所谓学科交叉方法，就是两门以上的学科之间在面对同一研究对象时，从不同学科的角度进行比对研究的方法。借鉴其他学科的研究，思考本学科的问题和对象，融合其他学科的研究方法，以达到对研究对象的新认识。</p><p>所谓跨学科方法就是通过多学科的协作共同解决同一问题的方法，跨学科也是一种学科融合的方法，也可以称为多维融贯的方法。</p><h3 id="5-战略性思维对于科学研究有何意义？"><a href="#5-战略性思维对于科学研究有何意义？" class="headerlink" title="5.战略性思维对于科学研究有何意义？"></a>5.战略性思维对于科学研究有何意义？</h3><p>战略性思维是对战略科学家的思维要求。同时对于一个从事一般科学研究、技术发明和工程建设的科学家也有重要意义。习近平非常重视战略性思维的重要作用与深刻意义，是其提出的“六大思维”之一，战略性思维对于科学研究而言，非常重要。</p><p>战略性思维是高瞻远瞩、统揽全局、善于把握事物发展总体趋势和方向的思维方法，展示的是看问题的高度和深度。古人讲：“不谋万世者，不足谋一时；不谋全局者，不足谋一域。”科学家与工程师没有战略性思维、具有什么样的战略性思维，一定程度上决定着在中国特色社会主义伟大事业中的科学技术研究能登多高、能走多远、将抵达何处。战略性思维能力的强弱，取决于思考问题的高度、理论研究的深度、知识视野的广度，以及对于科学技术发展全局的时间跨度的认识与把握。</p><p>对于国家而言，科学技术的总体规划是一种科学技术研究的战略，战略科学家需要掌握国家科学技术的基本战略，按照国家需要，结合自己及其研究团队的研究确定科学研究方向。</p><h2 id="第四章-科学技术社会论"><a href="#第四章-科学技术社会论" class="headerlink" title="第四章 科学技术社会论"></a>第四章 科学技术社会论</h2><h3 id="1-为什么说“科学是一种在历史上起推动作用的、革命的力量”？"><a href="#1-为什么说“科学是一种在历史上起推动作用的、革命的力量”？" class="headerlink" title="1.为什么说“科学是一种在历史上起推动作用的、革命的力量”？"></a>1.为什么说“科学是一种在历史上起推动作用的、革命的力量”？</h3><p>   科学技术是历史发展的火车头，改变了社会历史进程，造就了新的社会形态;推动了生产力内部各要素的变革，引发了产业结构的调整、经济形式的变化和经济增长方式的转变，造就了经济转型;产生了技术异化现象，要对异化的资本主义制度展开批判，更好地发挥科学技术的社会功能。<br> 科学技术作为社会发展的动力,是马克思主义的基木观点。科学是生产力的“知识的形态”。作为生产力的科学技术，能够大大提高社会生产力水平，推动着整个人类物质生产的迅猛发展。<br> 作为强大的精神力量的科学技术，能够促进人类思想的解放，在产业革命的基础上，推动社会变革，对社会生产关系产生有力影响。<br> 作为人类最终走向白由的科学技术，能够作为解放的杠杆，增进人类精神生活的丰富性和自我发展能力，有助于实现人的全面自由的发展。</p><h3 id="2-如何看待科学技术对人的异化和对自然的异化？"><a href="#2-如何看待科学技术对人的异化和对自然的异化？" class="headerlink" title="2.如何看待科学技术对人的异化和对自然的异化？"></a>2.如何看待科学技术对人的异化和对自然的异化？</h3><p> 科技异化实质上是在资本主义制度下劳动异化和人的异化一种必然结果。由于劳动是人的最根本最现实的实践活动，是人及人类社会存在的根本方式，劳动的异化必然带来人的其他社会活动和社会关系的全面异化，科学技术也不例外，因为“宗教、家庭、国家、法、道德、科学、艺术等等，都不过是生产的一些特殊的方式，并且受生产的普遍规律的支配。”</p><p> 因此，科学技术作为劳动亦即人处理自身与自然界关系的社会活动的产物，也必然随着资本主义社会劳动的异化而表现出异化的现象。最根本的是要消灭对科学技术的资本主义利用方式，把现代科学技术从资本主义制度下解放出来。也就是说只有通过无产阶级革命来最终解决资本主义的科技异化问题。当然，在马克思看来，异化的完全克服只有在共产主义社会制度中才能最终实现。</p><h3 id="3-科学技术的社会体制和组织机构对科学技术的发展有何意义？"><a href="#3-科学技术的社会体制和组织机构对科学技术的发展有何意义？" class="headerlink" title="3.科学技术的社会体制和组织机构对科学技术的发展有何意义？"></a>3.科学技术的社会体制和组织机构对科学技术的发展有何意义？</h3><p> 科学技术的社会建制有一个历史过程。经济支持制度、法律保障体系等科学技术体制是根本，各种组织机构及其科研组织运行是保证，科学技术的伦理规范是导引。在科学技术发展应用的新阶段，科学技术的社会建制呈现出一些新特点，因此必须进行科学技术体制改革，以保证科学技术的良好运行。<br> 作为社会建制的科学技术体制是在一定社会价值观念支配下，依据相应的物质设备条件形成的一种社会组织制度，旨在支持推动人类对自然的认识和利用。科学技术的体制化以相应的职业化为核心，其内涵随着科学技术的发展而不断拓展和丰富。科学技术的社会体制包括:组织领导体制、经济支持制度、法律保障体制、交流与传播体制、人才教育培养制度等。科学技术与其他各种事业密切相关,需要建立相应的组织机构以保证科学技术活动的顺利进行。科学技术组织机构随着历史的演化而变化，具有各白的特点和功能，是实现科学技术现代化的组织保证。在科学技术社会史上形成与发展起来的组织机构有:科学技术决策、管理与咨询机构，科学技术活动组织机构，科学技术传播机构，科学技术人才培养机构。</p><blockquote><p>【以下摘白百度贴吧帖子“科学技术的社会体制化及其对科学发展的意义”】<br>科学技术体制化的内容包括:科学技术的投入体制、科技研究的结构比例、科学技术的法律制度、科技研究的管理体制。<br>科学技术的社会体制化对科学发展的意义:1、它可以积聚社会上的力量来进行柑应的科学研究;2、当代科技活动的结构中基础研究将会有大量的人员参l与j;3、明确的法律以及管理制度将会更进一步促进科学技术的发展。</p></blockquote><h3 id="4-为什么要对科学技术工作者进行伦理规范？"><a href="#4-为什么要对科学技术工作者进行伦理规范？" class="headerlink" title="4.为什么要对科学技术工作者进行伦理规范？"></a>4.为什么要对科学技术工作者进行伦理规范？</h3><p> 科学技术活动与人类其他活动一样，建立在诚信和道德的基础上。现阶段，默顿的科学的精神气质受到挑战，科学技术工作者有失范行为，需要制定相关科研诚信指南和工程师伦理准则加以规范。科学工作者进行科学研究和医学实践，尤其是进行人体实验和动物实验，应该遵循社会伦理、生命伦理、动物伦理等。技术工作者，尤其是工程师，在工程技术活动中，应该遵循一定的职业伦理和社会伦理准则，应该承担对社会、专业、雇主和同事的责任，应该对工程的环境影响负有特别的责任，规范白己的行为，为人类福祉和环境保护服务。</p><h3 id="5-如何理解科学技术文化与人文文化之间的冲突与协调？"><a href="#5-如何理解科学技术文化与人文文化之间的冲突与协调？" class="headerlink" title="5.如何理解科学技术文化与人文文化之间的冲突与协调？"></a>5.如何理解科学技术文化与人文文化之间的冲突与协调？</h3><p>(一）社会文化对科学技术的影响</p><p> 科学技术的产生和发展需要一定的社会文化环境。社会文化与科学技术文化紧密关联，并由此影响科学技术的发展及其应用。默顿在《十七世纪英格兰的科学、技术与社会》中提出的“清教主义促进英国近代科学的制度变化”，以及“李约瑟难题”——“近代科学为什么没有在中国诞生”的解答，就说明了这一点。</p><p>(二）科学文化与人文文化的协调<br>  1．要防止科学在生活世界、自然世界对人文的僭越所造成的科学文化与人文文化之间的冲突，深刻理解科学的限度，用正确的人文理念指导我们的生活。<br>  2．必须以社会先进文化来引领科学技术文化，使科学技术发展和应用为经济社会健康全面发展服务。得到广泛提倡的环境科学技术就是为了协调人与自然之间的关系所做的努力，是科学技术文化与人文文化——绿色文化的良性互动产物。</p><h3 id="6-科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？"><a href="#6-科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？" class="headerlink" title="6.科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？"></a>6.科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？</h3><p> 科学技术的风险包括环境风险、政治风险、经济风险、健康风险和伦理风险等。这些风险会引发一系列争论，造成评价和决策上的困难。习近平指出:“要加快建立科技咨询支撑行政决策的科技决策机制，加强科技决策咨询系统，建设高水平科技智库。要加快推进重大科技决策制度化，解决好实际存在的部门领导拍脑袋、科技专家看颜色行事等问题。”</p><p>要恰当进行科学技术风险评价与决策，就应该全面评价科学技术风险—收益的多个方面，批判性地考察“内部”存有争议的科学知识或技术知识，分析相互竞争的利益集团和社会结构的”外部”政治学，理解科学技术专家知识和决策的局限性、公众理解科学的必要性以及外行知识的优势，明确政府、科学技术专家以及公众在与科学技术风险相关的公共决策中的不同作用，确立公众参与决策的可能方式，从而形成最优化的科学技术公共政策模式，以达到对科学技术风险社会有效治理的目的。</p><h2 id="第五章-中国马克思主义科学技术观"><a href="#第五章-中国马克思主义科学技术观" class="headerlink" title="第五章 中国马克思主义科学技术观"></a>第五章 中国马克思主义科学技术观</h2><h3 id="1-为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？"><a href="#1-为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？" class="headerlink" title="1.为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？"></a>1.为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？</h3><p> 毛泽东、邓小平、……、胡锦涛、习近平的科学技术思想，是在中国共产党领导我国科学技术事业发展和进行社会主义现代化建设的伟大时间中，逐渐形成、发展和完善的。</p><p> 中国马克思主义科学技术观是基于马克思、恩格斯的科学技术思想，对当代科学技术机器发展规律的概括和总结，是马克思主义科学技术论的重要组成部分。</p><p> 中国马克思主义科学技术观是中国共产党人集体智慧的结晶，是对毛泽东、邓小平、……、习近平科学技术思想的概括和总结，是他们科学技术思想的理论升华和飞跃，是他们科学技术思想的凝练和精髓。</p><p> 中国马克思主义科学技术观的内容丰富，涉及了科学技术的功能、目标、机制、战略、人才和方针等重大问题，是一个科学、完整的思想理论体系。</p><h3 id="2-如何理解中国马克思主义科学技术观的理论精髓？"><a href="#2-如何理解中国马克思主义科学技术观的理论精髓？" class="headerlink" title="2.如何理解中国马克思主义科学技术观的理论精髓？"></a>2.如何理解中国马克思主义科学技术观的理论精髓？</h3><p> 中国马克思主义科学技术观概括和总结了毛泽东、邓小平、···、习近平等的科学技术思想，包括科学技术的功能观、战略观、人才观、和谐观和创新观的基木内容，体现出时代性、实践性、科学性、创新性、自主性、人本性等特征，建设中国特色的创新型国家，是中国马克思主义科学技术观的具体体现。中国马克思主义科学技术观，是马克思主义科学技术观与中国具体科学技术实践相结合的产物，是马克思主义科学技术论的重要组成部分。</p><h3 id="3-如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？"><a href="#3-如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？" class="headerlink" title="3.如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？"></a>3.如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？</h3><p> 中国马克思主义科学技术观的三个历史阶段是其各自所处的历史条件所决定的，是对时代背景实事求是的反映，因此科学技术思想都镌刻了时代的烙印，反映了时代的需求。</p><p> 习近平新时代中国特色社会主义思想中的科学技术观，是在中国特色社会主义进入新时代的历史条件下形成的。新时代之“新”，一是在于我们进入了一个新的发展阶段，发展环境、发展条件都发生了新的变化，目标任务也发生了新的变化;二是在于我们面临着新的社会主义主要矛盾;三是我们迈向新的奋斗目标。正是基于这一新时代的”新”特征时代背景，习近平立足于我贵哦科学技术与社会发展的现实需要，提出了一系列关于科学技术发展的理论观点，形成了习近平新时代中国特色社会主义科学技术观。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：自然辩证法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Z_杂记" scheme="http://example.com/categories/Z-%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>【证书】安装PEM文件</title>
    <link href="http://example.com/Z_%E6%9D%82%E8%AE%B0/%E5%AE%89%E8%A3%85PEM%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/Z_%E6%9D%82%E8%AE%B0/%E5%AE%89%E8%A3%85PEM%E6%96%87%E4%BB%B6/</id>
    <published>2023-10-27T01:24:02.562Z</published>
    <updated>2023-11-10T06:09:20.272Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述： windows和Linux安装PEM文件步骤</p></blockquote><span id="more"></span><p>[toc]</p><h1 id="如何安装PEM证书"><a href="#如何安装PEM证书" class="headerlink" title="如何安装PEM证书"></a>如何安装PEM证书</h1><p>更新：2023-05-29 21:11</p><p>PEM证书是一种常见的证书文件格式，通常用于加密、验证和身份认证等。在运行应用程序或服务时，有时需要将PEM证书安装到系统或设备中，并确保其正确配置。本文将介绍如何安装PEM证书。</p><h2 id="1-下载PEM证书文件"><a href="#1-下载PEM证书文件" class="headerlink" title="1. 下载PEM证书文件"></a>1. 下载PEM证书文件</h2><p>首先，您需要有PEM证书文件。它可以是自签名证书、客户端或服务器证书、根证书或中间证书。您可以从许多来源获取PEM证书文件，例如：</p><ul><li>证书颁发机构 (CA)</li><li>厂商提供的PEM证书</li><li>自己创建的PEM证书文件</li></ul><p>确保您已经获得PEM证书文件并将其下载到计算机的本地文件夹中。</p><h2 id="2-安装PEM证书文件"><a href="#2-安装PEM证书文件" class="headerlink" title="2. 安装PEM证书文件"></a>2. 安装PEM证书文件</h2><h3 id="2-1-在Linux系统上安装PEM证书"><a href="#2-1-在Linux系统上安装PEM证书" class="headerlink" title="2.1 在Linux系统上安装PEM证书"></a>2.1 在Linux系统上安装PEM证书</h3><p>如果您想在Linux系统上安装PEM证书，可以使用以下步骤：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp server.crt /usr/local/share/ca-certificates/</span><br><span class="line">sudo update-ca-certificates</span><br></pre></td></tr></table></figure><p>在上述命令中，“server.crt”是您的PEM证书文件名。通过将PEM证书文件复制到“&#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;”目录，您可以将PEM证书添加到系统的可信证书列表中。接下来，运行“sudo update-ca-certificates”命令以更新证书列表并使其生效。</p><h3 id="2-2-在Windows系统上安装PEM证书"><a href="#2-2-在Windows系统上安装PEM证书" class="headerlink" title="2.2 在Windows系统上安装PEM证书"></a>2.2 在Windows系统上安装PEM证书</h3><ul><li>方式一</li></ul><p>如果您想在Windows系统上安装PEM证书，可以使用以下步骤：</p><ol><li>双击PEM证书文件，打开证书向导。</li><li>在弹出窗口中，选择“安装证书”选项，并单击“下一步”。</li><li>选择“计算机帐户”选项，并单击“下一步”。</li><li>在“选择存储位置”窗口中，选择“受信任的根证书颁发机构”选项，并单击“下一步”。</li><li>单击“下一步”以确认选项，并单击“完成”以完成证书安装。</li></ol><p>现在，您的PEM证书已经安装在您的Windows系统中。</p><ul><li>方式二</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开控制面板 -&gt; 网络设置 -&gt; Internet选项 -&gt; 内容 -&gt; 证书 -&gt; 导入</span><br></pre></td></tr></table></figure><p>然后选择你需要安装的证书导入即可。</p><ul><li>方式三<ul><li>打开“开始”菜单，搜索“mmc”并打开“Microsoft Management Console”。</li><li>点击“文件”菜单，选择“添加&#x2F;删除管理单元”。</li><li>在“可用的管理单元”列表中，选择“证书”并点击“添加”。</li><li>选择“计算机帐户”并点击“下一步”。</li><li>选择“本地计算机”并点击“完成”。</li><li>在“控制台根证书存储”下，右键点击“受信任的根证书颁发机构”并选择“所有任务” &gt; “导入”。</li><li>点击“下一步”，浏览到您的Pem证书文件并选择它。</li><li>点击“下一步”，选择“将所有证书都放置在下列存储中”并点击“浏览”。</li><li>选择“受信任的根证书颁发机构”并点击“确定”。</li><li>点击“下一步”并完成证书安装。</li></ul></li></ul><h2 id="3-使用PEM证书文件"><a href="#3-使用PEM证书文件" class="headerlink" title="3. 使用PEM证书文件"></a>3. 使用PEM证书文件</h2><p>一旦您已经安装了PEM证书，您可以开始使用它。通常，您需要在应用程序或服务的配置文件中指定PEM证书的路径或名称。以下是一些示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /path/to/your/cert.pem;</span><br><span class="line"></span><br><span class="line">// For Node.js server</span><br><span class="line">const server = https.createServer(&#123;</span><br><span class="line">  key: fs.readFileSync(&#x27;server.key&#x27;),</span><br><span class="line">  cert: fs.readFileSync(&#x27;server.cert&#x27;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以Nginx Web服务器和Node.js服务器为例，您可以将PEM证书文件路径或名称指定为“ssl_certificate”或“cert”选项的值。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>在本文中，您已了解如何安装PEM证书文件并在应用程序或服务中使用它们。无论您要在哪个平台上安装PEM证书，都需要按照相应的步骤来执行。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述： windows和Linux安装PEM文件步骤&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Z_杂记" scheme="http://example.com/categories/Z-%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="证书" scheme="http://example.com/tags/%E8%AF%81%E4%B9%A6/"/>
    
    <category term="PEM" scheme="http://example.com/tags/PEM/"/>
    
  </entry>
  
  <entry>
    <title>声网参赛经历记录——白板插件开发(前端)</title>
    <link href="http://example.com/Z_%E6%9D%82%E8%AE%B0/%E5%A3%B0%E7%BD%91%E5%8F%82%E8%B5%9B%E5%88%86%E4%BA%AB/"/>
    <id>http://example.com/Z_%E6%9D%82%E8%AE%B0/%E5%A3%B0%E7%BD%91%E5%8F%82%E8%B5%9B%E5%88%86%E4%BA%AB/</id>
    <published>2023-10-27T01:24:02.561Z</published>
    <updated>2023-11-08T05:52:05.745Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><img src="/Z_%E6%9D%82%E8%AE%B0/%E5%A3%B0%E7%BD%91%E5%8F%82%E8%B5%9B%E5%88%86%E4%BA%AB/image-20220925184747631.png" class="" title><p>[toc]</p><h1 id="比赛创意"><a href="#比赛创意" class="headerlink" title="# 比赛创意"></a># 比赛创意</h1><p>最开始讨论的结果时做一个会议记录相关的插件，结合声望原本提供的白板插件功能，可以实时的进行展示，多人操作、互动，音视频通话。区别于现有会议模式的一点就是，除了音视频通话，还可以在通话的同时，在白板上进行操作，类似于Web上 <mark>在线文档</mark>、<mark>在线会议</mark>、<mark>在线画板</mark> 三者功能集一身的一款白板插件，当然这里在线白板的功能是由声望的 <code>SDK</code> 提供了这个能力，在线文档的这些具体的在线同步的逻辑还是要以声望提供的为基准。</p><h1 id="1-最终结果"><a href="#1-最终结果" class="headerlink" title="1. 最终结果"></a>1. 最终结果</h1><p>最终由于我们人力有限，并且都是兼职参加比赛，所以完成上是大打折扣。</p><ul><li>调用了讯飞的实时语音识别接口实现了插件的 <mark>语音转写</mark> 功能，可以进行多人语音识别到插件内部</li><li>可以对会议内容和识别记录进行 <mark>一键导出</mark> 的功能</li></ul><p>最后呢，由于实现的功能过于单调，又新增了一个 <code>Markdown</code> 的编辑器，插件启动后可以编辑，但是这个内容是不同步的。</p><h1 id="技术总结"><a href="#技术总结" class="headerlink" title="# 技术总结"></a># 技术总结</h1><p>总结一下我个人在比赛中学习和使用到的一些技术，由于我本人是 C++客户端 开发，之前虽然也有学习过VUE和前端知识，但是 <code>VUE3</code> 的改动还是挺大，使用起来颇有些不太习惯的地方。主要的前端框架以及代码功能都是由我比赛的队友去完成的。我负责后台数据相关的一些工作。主要面向于音视频录制、存储、发送等，以及调用语音识别接口。</p><ol><li>AgoraRTC(声网的sdk，提供实时音视频服务)</li><li>IatRecorder(讯飞封装的一个语音识别接口)</li><li>Vue</li><li>前端三剑客（js、h5、CSS）这三个在调试过程中占比很大</li></ol><h1 id="实现"><a href="#实现" class="headerlink" title="# 实现"></a># 实现</h1><p>实现部分主要讲关于音频传输、录音、实时语音转写这三点：</p><h2 id="音频传输"><a href="#音频传输" class="headerlink" title="音频传输"></a>音频传输</h2><p>音频传输方面。声网有现成的demo提供学习，使用起来相对比较简单。</p><p><a href="https://github.com/AgoraIO/API-Examples-Web/tree/main/Demo/selfRendering">API-Examples-Web&#x2F;Demo&#x2F;selfRendering at main · AgoraIO&#x2F;API-Examples-Web</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;



&lt;img src=&quot;/Z_%E6%9D%82%E8%AE%B0/%E5%A3%B0%E7%BD%91%E5%8F%82%E8%B5%9B%E5%88%86%E4%BA%AB/image-20220925184747631.pn</summary>
      
    
    
    
    <category term="Z_杂记" scheme="http://example.com/categories/Z-%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="声网" scheme="http://example.com/tags/%E5%A3%B0%E7%BD%91/"/>
    
    <category term="比赛" scheme="http://example.com/tags/%E6%AF%94%E8%B5%9B/"/>
    
    <category term="RTC" scheme="http://example.com/tags/RTC/"/>
    
    <category term="音视频" scheme="http://example.com/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>访谈记录</title>
    <link href="http://example.com/Z_%E6%9D%82%E8%AE%B0/%E8%AE%BF%E8%B0%88%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/Z_%E6%9D%82%E8%AE%B0/%E8%AE%BF%E8%B0%88%E8%AE%B0%E5%BD%95/</id>
    <published>2023-10-27T01:24:02.560Z</published>
    <updated>2023-11-08T05:52:36.724Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>[toc]</p><p>人文环境的形成是常年累月的积淀，是人的改造与自然的打磨巧妙结合形成的，因此也蕴含了独特的精神力量和难得的物质底色。从物质文化和精神文化两个角度来看，对人文环境中的建筑进行设计所受到的牵制较多。纵向看，有历史文化的影响；横向看，有地域因素的制约；另一个方面，观者的审美角度、使用者的生活习惯，以及人们道德规范的约束都是人文环境中对建筑消隐的重要因素。在这种情况下，做到“消隐”，需要设计师考虑各方面的因素，从而做出更能突出建筑特，又能达到“消隐”目的的设计方案。以下结合三个相对典型的案例进行具体的分析。</p><p>建筑设计环节需要考虑的因素除了人文环境、造价、风格之外，也应考虑到建筑技术对建筑设计的提升。不仅如此，建筑技术可以说是建筑创作中重要的一个环节，其最终体现在建筑的空间形态上，建筑形态是否优美、是否达到了效果，又可以直接反馈出建筑技术的使用情况。建筑技术的要素包括材料、结构、施工等不同的类别，从选材到施工，每一个技术环节都有其对应的使用环境，充分利用这一特定环境，从而有效地利用建筑技术对每个环节进行改造和提升。这也能充分体现环境整体观的理念。</p><h1 id="社会访谈：-一名工程师眼中的新时代及启示"><a href="#社会访谈：-一名工程师眼中的新时代及启示" class="headerlink" title="社会访谈： 一名工程师眼中的新时代及启示"></a>社会访谈： 一名工程师眼中的新时代及启示</h1><p>深入访谈一个自己的长辈，请其介绍职业经历和人生阅历，并通过这个切入点，以小见大介绍其对国家发展的看法感受，记述其访谈内容及对自己未来的启示。</p><h2 id="访谈对象："><a href="#访谈对象：" class="headerlink" title="访谈对象："></a><strong>访谈对象：</strong></h2><p>访谈对象：同学的舅舅 </p><p>性别：男 </p><p>年龄：48</p><p>职业：结构工程师 </p><p>单位：中建一局某分公司 </p><p>职务：工程师</p><p>从业年数：22 </p><p>访谈时间：2022.11.26</p><p>访谈形式：电话</p><h2 id="访谈内容："><a href="#访谈内容：" class="headerlink" title="访谈内容："></a><strong>访谈内容：</strong></h2><ol><li><h3 id="您是如何找到这份工作的？"><a href="#您是如何找到这份工作的？" class="headerlink" title="您是如何找到这份工作的？"></a>您是如何找到这份工作的？</h3></li></ol><p>当时工作还是包分配的，毕业后我选择了去中建。</p><ol start="2"><li><h3 id="就您的工作而言，您最喜欢什么？最不喜欢什么？"><a href="#就您的工作而言，您最喜欢什么？最不喜欢什么？" class="headerlink" title="就您的工作而言，您最喜欢什么？最不喜欢什么？"></a>就您的工作而言，您最喜欢什么？最不喜欢什么？</h3></li></ol><p>喜欢的是自己和大家一起努力工作之后，出现的问题被解决，工程一日日逐渐被完成，最终被交付的那种喜悦。</p><p>不喜欢工作中的与人打交道，在工作中会产生内耗，需要处理好复杂的人际关系。还有就是工作常年在外，全国各地地跑，和家人是聚少离多。不过工作这么些年，也习惯了，有空间就会回家看看家人，这两年因为疫情的原因，回去的更少了。在单位，就是想着怎么把工作干好。保质保量完成建设任务。</p><ol start="3"><li><h3 id="您的职位是什么？你的主要职责是什么？"><a href="#您的职位是什么？你的主要职责是什么？" class="headerlink" title="您的职位是什么？你的主要职责是什么？"></a>您的职位是什么？你的主要职责是什么？</h3></li></ol><p>目前是项目部的工程师，主要职责就是负责工程上的项目进行监工以及项目部规划等内容。</p><ol start="4"><li><h3 id="大学期间可以做的准备有什么？"><a href="#大学期间可以做的准备有什么？" class="headerlink" title="大学期间可以做的准备有什么？"></a>大学期间可以做的准备有什么？</h3></li></ol><p>学好自己的专业知识，尽量拓展知识面。这个岗位对专业的对口性一般要求不高，但是不论是经济类、管理类还是工程类的专业，还是需要认真学习的，它虽然要求的面广，但你总得有一方面是要有核心竞争力的。尽量多学习其他知识，做到“见多识广”，因为这个岗位会遇到很多人，很多不同种类的项目，这样工作起来思维会比较快，沟通也会变得容易些。</p><p>有侧重的锻炼自己的沟通、写作、表达能力。多参加社团活动，和一些有意义的比赛，历练自己。</p><ol start="5"><li><h3 id="在行业内，先从什么样的工作岗位做起，能学到最多的知识，最有益于发展？"><a href="#在行业内，先从什么样的工作岗位做起，能学到最多的知识，最有益于发展？" class="headerlink" title="在行业内，先从什么样的工作岗位做起，能学到最多的知识，最有益于发展？"></a>在行业内，先从什么样的工作岗位做起，能学到最多的知识，最有益于发展？</h3></li></ol><p>先应聘资料员或质检员、施工员,能利用在校学到的知识,工作起来顺手,工作后通过自学尽快掌握各种工程软件的应用,掌握后根据自己的爱好,可转行预算员、技术员、测量员等.</p><ol start="6"><li><h3 id="工作地点在哪里？主要工作场所是什么？有哪些特征？"><a href="#工作地点在哪里？主要工作场所是什么？有哪些特征？" class="headerlink" title="工作地点在哪里？主要工作场所是什么？有哪些特征？"></a>工作地点在哪里？主要工作场所是什么？有哪些特征？</h3></li></ol><p>工作地点有工地，项目部。主要场所是项目部。忙的时候来回奔波，也会加班赶工期。</p><ol start="7"><li><h3 id="您在做这份工作时，日常面临的问题是什么，什么最有挑战性？"><a href="#您在做这份工作时，日常面临的问题是什么，什么最有挑战性？" class="headerlink" title="您在做这份工作时，日常面临的问题是什么，什么最有挑战性？"></a>您在做这份工作时，日常面临的问题是什么，什么最有挑战性？</h3></li></ol><p>这个很多，比如刚开始工作的时候，要慢慢适应工厂的环境;还要和同事打好关系等等。特别是厂里的一些老师傅在我们正式上岗前经行培训的时候，老师傅传授了一些我们在学校里没见过的加工方法，我们只能从头学起。我想说的是学校里的教材之类的不能太过相信，有些老旧的教材的内容已经逐渐被淘汰，因此要不断地学习，要关注行业发展动态。</p><ol start="8"><li><h3 id="在您的工作领域里初级职位和略高级别职位的薪水一般是什么水平？"><a href="#在您的工作领域里初级职位和略高级别职位的薪水一般是什么水平？" class="headerlink" title="在您的工作领域里初级职位和略高级别职位的薪水一般是什么水平？"></a>在您的工作领域里初级职位和略高级别职位的薪水一般是什么水平？</h3></li></ol><p>收入还可以，包括基本工资+年底奖金。主要还是根据工程难度，工期长短，以及工作地点等因素影响。初级平均可以拿到8000左右，年底5~20万不等。</p><ol start="9"><li><h3 id="在这个职位上，如果想获得成功必须拥有并保持什么样的能力？"><a href="#在这个职位上，如果想获得成功必须拥有并保持什么样的能力？" class="headerlink" title="在这个职位上，如果想获得成功必须拥有并保持什么样的能力？"></a>在这个职位上，如果想获得成功必须拥有并保持什么样的能力？</h3></li></ol><p>需要有坚实的基础学科知识，更需要有不断学习的能力，去挑战的新的建设需求。其次的话就是有一定的与人交往的能力。</p><ol start="10"><li><h3 id="目前还缺乏的必须改进的能力有哪些？"><a href="#目前还缺乏的必须改进的能力有哪些？" class="headerlink" title="目前还缺乏的必须改进的能力有哪些？"></a>目前还缺乏的必须改进的能力有哪些？</h3></li></ol><p>需要的技能：CAD及各种计算软件，比如PKPM、YJK、3D3S、MIDAS等（至少学会一到两种，各软件有相通之处）。</p><ol start="11"><li><h3 id="您认为什么样的个人品质、性格和能力对做好这份工作来讲是重要的？"><a href="#您认为什么样的个人品质、性格和能力对做好这份工作来讲是重要的？" class="headerlink" title="您认为什么样的个人品质、性格和能力对做好这份工作来讲是重要的？"></a>您认为什么样的个人品质、性格和能力对做好这份工作来讲是重要的？</h3></li></ol><p>能坚持下去，有创新思想，常与人沟通交流，通过工作不断积累自己的经验。</p><ol start="12"><li><h3 id="您认为做好这份工作应该具备哪些知识、技能和经验？"><a href="#您认为做好这份工作应该具备哪些知识、技能和经验？" class="headerlink" title="您认为做好这份工作应该具备哪些知识、技能和经验？"></a>您认为做好这份工作应该具备哪些知识、技能和经验？</h3></li></ol><p>要掌握一些基本的专业知识，比如制图（包括CAD)，金属加工的技艺，还有就是一些行业规定，行业语言等，之后当然要考取这种证书来表明已经掌握了这些内容。当然，经验也是很重要的，特别是出现一些课本上或平时没出现过的情况时，经验显得尤为重要。</p><ol start="13"><li><h3 id="目前，行业内要求从事这份工作的人应该有什么准备？"><a href="#目前，行业内要求从事这份工作的人应该有什么准备？" class="headerlink" title="目前，行业内要求从事这份工作的人应该有什么准备？"></a>目前，行业内要求从事这份工作的人应该有什么准备？</h3></li></ol><p>首先梳理自己已有的专业知识能力，客观地评价自己的优势和劣势，尽可能做到扬长补短。其次有目的地提前锁定一些目标实习单位，有针对性地进行一些关注和调研，做到有的放矢。最后可以阅读一些人际交往或社交礼仪的知识，力求在细节方面也做到位，也可以向往届师兄师姐讨教实习的一些鲜活的经验，以利于较快地适应角色和心态的转变。</p><ol start="14"><li><h3 id="学校中的哪些课程对这个行业比较有帮助？"><a href="#学校中的哪些课程对这个行业比较有帮助？" class="headerlink" title="学校中的哪些课程对这个行业比较有帮助？"></a>学校中的哪些课程对这个行业比较有帮助？</h3></li></ol><p>总的来说是有帮助的，但是大家都知道，书上的知识永远赶不上技术的发展，所有如果你向在这个行业有好的发展的话，就不能局限于书本上的东西，要多动手，这样能学到的东西比你课程上所能学到的多很多。</p><ol start="15"><li><h3 id="行业内，单位对刚进入该领域工作的员工一般会提供哪些培训？"><a href="#行业内，单位对刚进入该领域工作的员工一般会提供哪些培训？" class="headerlink" title="行业内，单位对刚进入该领域工作的员工一般会提供哪些培训？"></a>行业内，单位对刚进入该领域工作的员工一般会提供哪些培训？</h3></li></ol><p>每一个新进入的员工都会进行一系列相关的培训，内容主要是对新来员工培训相关技能，让员工能够更好的将学校中所学到的知识更好的转化为想用的技能。除了部门自己组织的学习以外，公司每年都会组织一些培训，让大家更好的了解当前行业的新技术，新动态。正式进入工作岗位后，要求每个人都有一定的技能，能够独立面对一些问题，在技术方面要求会比较多。在深造方面，公司是比较支持大家进行更加高层的学习。</p><ol start="16"><li><h3 id="这个行业存在的困难及前景如何？"><a href="#这个行业存在的困难及前景如何？" class="headerlink" title="这个行业存在的困难及前景如何？"></a>这个行业存在的困难及前景如何？</h3></li></ol><p>目前这一行业工作较为辛苦，有很多人难以坚持下来，现有的人员构成并不是非常合理，尽管做这个方面的人相当多，但是很缺少能够独当一面的优秀人才，总的来说就是，高层然才比较欠缺，低层人员泛滥。所以，对于每一个想要在此行业有所发展的人来说，机遇和挑战是同时并存的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;



&lt;p&gt;[toc]&lt;/p&gt;
&lt;p&gt;人文环境的形成是常年累月的积淀，是人的改造与自然的打磨巧妙结合形成的，因此也蕴含了独特的精神力量和难得的物质底色。从物质文化和精神文化两个角度来看，对人文环境中的建筑进行设计所受到的牵制较多。纵</summary>
      
    
    
    
    <category term="Z_杂记" scheme="http://example.com/categories/Z-%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>中国马克思主义科学技术观</title>
    <link href="http://example.com/Z_%E6%9D%82%E8%AE%B0/%E4%B8%AD%E5%9B%BD%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E8%A7%82/"/>
    <id>http://example.com/Z_%E6%9D%82%E8%AE%B0/%E4%B8%AD%E5%9B%BD%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E8%A7%82/</id>
    <published>2023-10-27T01:24:02.559Z</published>
    <updated>2023-10-27T01:24:02.559Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="第四章、科学技术社会论"><a href="#第四章、科学技术社会论" class="headerlink" title="第四章、科学技术社会论"></a>第四章、科学技术社会论</h1><h2 id="1-为什么说“科学是一种在历史上起推动作用的、革命的力量”？"><a href="#1-为什么说“科学是一种在历史上起推动作用的、革命的力量”？" class="headerlink" title="1. 为什么说“科学是一种在历史上起推动作用的、革命的力量”？"></a>1. 为什么说“科学是一种在历史上起推动作用的、革命的力量”？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;科学技术是历史发展的火车头，改变了社会历史进程，造就了新的社会形态;推动了生产力内部各要素的变革，引发了产业结构的调整、经济形式的变化和经济增长方式的转变，造就了经济转型;产生了技术异化现象，要对异化的资本主义制度展开批判，更好地发挥科学技术的社会功能。<br>&amp;nbsp;&amp;nbsp;科学技术作为社会发展的动力,是马克思主义的基木观点。科学是生产力的“知识的形态”。作为生产力的科学技术，能够大大提高社会生产力水平，推动着整个人类物质生产的迅猛发展。<br>&amp;nbsp;&amp;nbsp;作为强大的精神力量的科学技术，能够促进人类思想的解放，在产业革命的基础上，推动社会变革，对社会生产关系产生有力影响。<br>&amp;nbsp;&amp;nbsp;作为人类最终走向白由的科学技术，能够作为解放的杠杆，增进人类精神生活的丰富性和自我发展能力，有助于实现人的全面自由的发展。</p></blockquote><h2 id="2-如何看待科学技术对人的异化和对自然的异化？"><a href="#2-如何看待科学技术对人的异化和对自然的异化？" class="headerlink" title="2. 如何看待科学技术对人的异化和对自然的异化？"></a>2. 如何看待科学技术对人的异化和对自然的异化？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;科技异化实质上是在资本主义制度下劳动异化和人的异化一种必然结果。由于劳动是人的最根本最现实的实践活动，是人及人类社会存在的根本方式，劳动的异化必然带来人的其他社会活动和社会关系的全面异化，科学技术也不例外，因为“宗教、家庭、国家、法、道德、科学、艺术等等，都不过是生产的一些特殊的方式，并且受生产的普遍规律的支配。”</p><p>&amp;nbsp;&amp;nbsp;因此，科学技术作为劳动亦即人处理自身与自然界关系的社会活动的产物，也必然随着资本主义社会劳动的异化而表现出异化的现象。最根本的是要消灭对科学技术的资本主义利用方式，把现代科学技术从资本主义制度下解放出来。也就是说只有通过无产阶级革命来最终解决资本主义的科技异化问题。当然，在马克思看来，异化的完全克服只有在共产主义社会制度中才能最终实现。</p></blockquote><h2 id="3-科学技术的社会体制和组织机构对科学技术的发展有何意义？"><a href="#3-科学技术的社会体制和组织机构对科学技术的发展有何意义？" class="headerlink" title="3. 科学技术的社会体制和组织机构对科学技术的发展有何意义？"></a>3. 科学技术的社会体制和组织机构对科学技术的发展有何意义？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;科学技术的社会建制有一个历史过程。经济支持制度、法律保障体系等科学技术体制是根本，各种组织机构及其科研组织运行是保证，科学技术的伦理规范是导引。在科学技术发展应用的新阶段，科学技术的社会建制呈现出一些新特点，因此必须进行科学技术体制改革，以保证科学技术的良好运行。<br>&amp;nbsp;&amp;nbsp;作为社会建制的科学技术体制是在一定社会价值观念支配下，依据相应的物质设备条件形成的一种社会组织制度，旨在支持推动人类对自然的认识和利用。科学技术的体制化以相应的职业化为核心，其内涵随着科学技术的发展而不断拓展和丰富。科学技术的社会体制包括:组织领导体制、经济支持制度、法律保障体制、交流与传播体制、人才教育培养制度等。科学技术与其他各种事业密切相关,需要建立相应的组织机构以保证科学技术活动的顺利进行。科学技术组织机构随着历史的演化而变化，具有各白的特点和功能，是实现科学技术现代化的组织保证。在科学技术社会史上形成与发展起来的组织机构有:科学技术决策、管理与咨询机构，科学技术活动组织机构，科学技术传播机构，科学技术人才培养机构。</p><hr><p>【以下摘白百度贴吧帖子“科学技术的社会体制化及其对科学发展的意义”】<br>科学技术体制化的内容包括:科学技术的投入体制、科技研究的结构比例、科学技术的法律制度、科技研究的管理体制。<br>科学技术的社会体制化对科学发展的意义:1、它可以积聚社会上的力量来进行柑应的科学研究;2、当代科技活动的结构中基础研究将会有大量的人员参l与j;3、明确的法律以及管理制度将会更进一步促进科学技术的发展。</p></blockquote><h2 id="4-为什么要对科学技术工作者进行伦理规范？"><a href="#4-为什么要对科学技术工作者进行伦理规范？" class="headerlink" title="4. 为什么要对科学技术工作者进行伦理规范？"></a>4. 为什么要对科学技术工作者进行伦理规范？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;科学技术活动与人类其他活动一样，建立在诚信和道德的基础上。现阶段，默顿的科学的精神气质受到挑战，科学技术工作者有失范行为，需要制定相关科研诚信指南和工程师伦理准则加以规范。科学工作者进行科学研究和医学实践，尤其是进行人体实验和动物实验，应该遵循社会伦理、生命伦理、动物伦理等。技术工作者，尤其是工程师，在工程技术活动中，应该遵循一定的职业伦理和社会伦理准则，应该承担对社会、专业、雇主和同事的责任，应该对工程的环境影响负有特别的责任，规范白己的行为，为人类福祉和环境保护服务。</p></blockquote><h2 id="5-如何理解科学技术文化与人文文化之间的冲突与协调？"><a href="#5-如何理解科学技术文化与人文文化之间的冲突与协调？" class="headerlink" title="5. 如何理解科学技术文化与人文文化之间的冲突与协调？"></a>5. 如何理解科学技术文化与人文文化之间的冲突与协调？</h2><blockquote><p>(一）社会文化对科学技术的影响<br>&amp;nbsp;&amp;nbsp;科学技术的产生和发展需要一定的社会文化环境。社会文化与科学技术文化紧密关联，并由此影响科学技术的发展及其应用。默顿在《十七世纪英格兰的科学、技术与社会》中提出的“清教主义促进英国近代科学的制度变化”，以及“李约瑟难题”——“近代科学为什么没有在中国诞生”的解答，就说明了这一点。</p><p>(二）科学文化与人文文化的协调<br>&amp;nbsp;&amp;nbsp;1．要防止科学在生活世界、自然世界对人文的僭越所造成的科学文化与人文文化之间的冲突，深刻理解科学的限度，用正确的人文理念指导我们的生活。<br>&amp;nbsp;&amp;nbsp;2．必须以社会先进文化来引领科学技术文化，使科学技术发展和应用为经济社会健康全面发展服务。得到广泛提倡的环境科学技术就是为了协调人与自然之间的关系所做的努力，是科学技术文化与人文文化——绿色文化的良性互动产物。</p></blockquote><h2 id="6-科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？"><a href="#6-科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？" class="headerlink" title="6. 科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？"></a>6. 科学技术的风险有哪些？如何恰当地进行科学技术风险评价与决策？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;科学技术的风险包括环境风险、政治风险、经济风险、健康风险和伦理风险等。这些风险会引发一系列争论，造成评价和决策上的困难。习近平指出:“要加快建立科技咨询支撑行政决策的科技决策机制，加强科技决策咨询系统，建设高水平科技智库。要加快推进重大科技决策制度化，解决好实际存在的部门领导拍脑袋、科技专家看颜色行事等问题。”</p><p> 要恰当进行科学技术风险评价与决策，就应该全面评价科学技术风险—收益的多个方面，批判性地考察“内部”存有争议的科学知识或技术知识，分析相互竞争的利益集团和社会结构的”外部”政治学，理解科学技术专家知识和决策的局限性、公众理解科学的必要性以及外行知识的优势，明确政府、科学技术专家以及公众在与科学技术风险相关的公共决策中的不同作用，确立公众参与决策的可能方式，从而形成最优化的科学技术公共政策模式，以达到对科学技术风险社会有效治理的目的。</p></blockquote><h1 id="第五章、中国马克思主义科学技术观"><a href="#第五章、中国马克思主义科学技术观" class="headerlink" title="第五章、中国马克思主义科学技术观"></a>第五章、中国马克思主义科学技术观</h1><h2 id="1-为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？"><a href="#1-为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？" class="headerlink" title="1. 为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？"></a>1. 为什么说新时代中国马克思主义科学技术是一个科学、完整的思想理论体系？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;毛泽东、邓小平、……、胡锦涛、习近平的科学技术思想，是在中国共产党领导我国科学技术事业发展和进行社会主义现代化建设的伟大时间中，逐渐形成、发展和完善的。</p><p>&amp;nbsp;&amp;nbsp;中国马克思主义科学技术观是基于马克思、恩格斯的科学技术思想，对当代科学技术机器发展规律的概括和总结，是马克思主义科学技术论的重要组成部分。</p><p>&amp;nbsp;&amp;nbsp;中国马克思主义科学技术观是中国共产党人集体智慧的结晶，是对毛泽东、邓小平、……、习近平科学技术思想的概括和总结，是他们科学技术思想的理论升华和飞跃，是他们科学技术思想的凝练和精髓。</p><p>&amp;nbsp;&amp;nbsp;中国马克思主义科学技术观的内容丰富，涉及了科学技术的功能、目标、机制、战略、人才和方针等重大问题，是一个科学、完整的思想理论体系。</p></blockquote><h2 id="2-如何理解中国马克思主义科学技术观的理论精髓？"><a href="#2-如何理解中国马克思主义科学技术观的理论精髓？" class="headerlink" title="2. 如何理解中国马克思主义科学技术观的理论精髓？"></a>2. 如何理解中国马克思主义科学技术观的理论精髓？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;中国马克思主义科学技术观概括和总结了毛泽东、邓小平、···、习近平等的科学技术思想，包括科学技术的功能观、战略观、人才观、和谐观和创新观的基木内容，体现出时代性、实践性、科学性、创新性、自主性、人本性等特征，建设中国特色的创新型国家，是中国马克思主义科学技术观的具体体现。中国马克思主义科学技术观，是马克思主义科学技术观与中国具体科学技术实践相结合的产物，是马克思主义科学技术论的重要组成部分。</p></blockquote><h2 id="3-如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？"><a href="#3-如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？" class="headerlink" title="3. 如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？"></a>3. 如何理解习近平新时代中国特色社会主义思想中的科学技术观的时代意义？</h2><blockquote><p>&amp;nbsp;&amp;nbsp;中国马克思主义科学技术观的三个历史阶段是其各自所处的历史条件所决定的，是对时代背景实事求是的反映，因此科学技术思想都镌刻了时代的烙印，反映了时代的需求。</p><p>&amp;nbsp;&amp;nbsp;习近平新时代中国特色社会主义思想中的科学技术观，是在中国特色社会主义进入新时代的历史条件下形成的。新时代之“新”，一是在于我们进入了一个新的发展阶段，发展环境、发展条件都发生了新的变化，目标任务也发生了新的变化;二是在于我们面临着新的社会主义主要矛盾;三是我们迈向新的奋斗目标。正是基于这一新时代的”新”特征时代背景，习近平立足于我贵哦科学技术与社会发展的现实需要，提出了一系列关于科学技术发展的理论观点，形成了习近平新时代中国特色社会主义科学技术观。</p></blockquote><p>参考链接：</p><p><a href="http://www.doczj.com/doc/6110418199-11.html">2019自然辩证法课后思考题及答案_文档之家</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;第四章、科学技术社会论&quot;&gt;&lt;a href=&quot;#第四章、科学技术社会论&quot; class=&quot;headerlink&quot; title=&quot;第四章、科学技术社会论&quot;&gt;&lt;/a&gt;第四章、科学技术社会论&lt;/h1&gt;&lt;h2 id=&quot;1-为什么说“科学是一种在历史上</summary>
      
    
    
    
    <category term="Z_杂记" scheme="http://example.com/categories/Z-%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>png和jpg格式的图片(一)</title>
    <link href="http://example.com/Z_%E6%9D%82%E8%AE%B0/png%E5%92%8Cjpg%E6%A0%BC%E5%BC%8F%E5%9B%BE%E7%89%87/"/>
    <id>http://example.com/Z_%E6%9D%82%E8%AE%B0/png%E5%92%8Cjpg%E6%A0%BC%E5%BC%8F%E5%9B%BE%E7%89%87/</id>
    <published>2023-10-27T01:24:02.558Z</published>
    <updated>2023-10-27T01:24:02.558Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="jpg-和-png-图片格式"><a href="#jpg-和-png-图片格式" class="headerlink" title="jpg 和 png 图片格式"></a><code>jpg</code> 和 <code>png</code> 图片格式</h1><p>在写这篇文章之前，笔者在编写一个简单的 Qt 程序时遇到了这样一个问题：</p><blockquote><p>问题：一个<code>png</code>格式的图片改成后缀为<code>jpg</code>格式的图片时，QLabel无法读取的问题。笔者是通过<code>setStyleSheet()</code>、<code>QImage</code>、<code>QPixmap</code>的接口均尝试过将改后缀后图片设置到<code>QLabel</code>中，均以<mark style="background-color:red">失败</mark>告终。</p></blockquote><p>特此研究了一下这<code>jpg</code>和<code>png</code>两者之间的区别，后续再研究一下Qt关于相关格式图片读取的问题。</p><p>图片会有<code>jpg</code>和<code>png</code>两种格式，那么这俩种格式的图片又有着什么样的区别呢？下面就给大家分享一下。 <code>png</code>和<code>jpg</code>都是常用的图片格式，其中<code>png</code>属于无损压缩，<code>jpg</code>是有损压缩，使用中两者最明显的一个区别是:</p><ul><li>png支持透明通道</li><li>jpg的图片更适合在网络中传播和使用。</li></ul><h2 id="jpg格式"><a href="#jpg格式" class="headerlink" title="jpg格式"></a><code>jpg</code>格式</h2><blockquote><p><strong>jpg：</strong>是JPEG标准的产物，也是目前网络最为流行的图片格式，jpg格式的图片可以将图像文件压缩到最小格式，在高度压缩率的同时，可以展现是分丰富生动的图像，但是随着压缩比的增大，图片的品质会逐渐降低的。我们现在常用的jpg的标准全程为<code>JPEG 2000标准</code>，有以下几点特性：</p><ol><li>高压缩率</li><li>无损压缩和有损压缩</li><li>渐进传输</li><li>感兴趣区域压缩</li><li>码流的随机访问和处理</li><li>容错性</li><li>基于内容的描述</li></ol></blockquote><h2 id="png格式"><a href="#png格式" class="headerlink" title="png格式"></a><code>png</code>格式</h2><blockquote><p><strong>png：</strong>是一种采用无损压缩算法的位图模式，其设计目的是视图替代GIF和TIFF文件格式，同时增加一下GIF文件格式所不具备的特性。PNG使用从LZ77派生的无损数据压缩算法，一般应用于JAVA程序、网页或S60程序中，原因就是因为png的压缩比更高，生成文件体积小。png图片也有一些特性：</p><ol><li>体积小</li><li>无损压缩</li><li>索引彩色模式</li><li>更优化的网络传输显示</li><li><strong>支持透明模式</strong></li></ol></blockquote><p>关于 <code>png</code> 格式还需要说明的是：</p><p>png格式有8位、24位、32位三种形式，其中8位PNG支持两种不同的透明形式（索引透明和alpha透明），24位PNG不支持透明，32位PNG在24位基础上增加了8位透明通道，因此可展现256级透明程度。</p><p>PNG8和PNG24后面的数字则是代表这种PNG格式最多可以索引和存储的颜色值。8代表2的8次方也就是256色，而24则代表2的24次方大概有1600多万色。</p><h1 id="区别：png-和-jpg"><a href="#区别：png-和-jpg" class="headerlink" title="区别：png 和 jpg"></a>区别：<code>png</code> 和 <code>jpg</code></h1><blockquote><p>转自百度百科：</p><p>1、<a href="https://baike.baidu.com/item/JPEG">JPEG</a>可以对照片（或类似）图像生成更小的文件，这是由于JPEG采用了一种针对照片图像的特定有损编码方法，这种编码适用于低对比，图像颜色过渡平滑，噪声多，且结构不规则的情况下。如果在这种情况下用PNG代替JPEG，文件尺寸增大很多，而图像质量的提高有限。相应的，如果保存文本，线条或类似的边缘清晰，有大块相同颜色区域的图像，PNG格式的压缩效果就要比JPEG好很多，并且不会出现JPEG那样的高对比度区域的图像有损。如果图像既有清晰边缘，又有照片图像的特点，就在在这两种格式之间权衡一下了。JPEG不支持透明度。</p><p>2、由于JPEG是有损压缩，会产生迭代有损，在重复压缩和解码的过程中会不断丢失信息使图像质量下降。由于PNG是无损的，保存将要被编辑的图像来说更加合适。虽然PNG压缩照片图像也有效，但有专门针对照片图像设计的无损压缩格式，比如无损JPEG2000，Adobe DNG等。总的来说这些格式都不能做到适用所有图像。对于将要发布的图像可以保存成JPEG，用JPEG编码一次不会造成明显的图像有损。</p></blockquote><p>总结就是：</p><ol><li><code>jpg</code>格式的图片能在高度压缩率的同时，展现十分丰富生动的图像，但是随着压缩比的增大，图片的品质会逐渐降低的。而<code>png</code>图片的特性就是体积小，节约空间，与<code>jpg</code>图片相比，<code>png</code>图片时无损压缩，在不损失图片数据的情况下，可以快速的获取自己想要的图片，而且图片的质量并不会下降。</li><li><code>png</code>格式的图片可以编辑，比如图片中的字体、线条等，可以通过ps等软件更改。但是<code>jpg</code>格式的图片则不可以更改，<code>png</code>与<code>jpg</code>图片相比<code>png</code>格式的图片更大。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;jpg-和-png-图片格式&quot;&gt;&lt;a href=&quot;#jpg-和-png-图片格式&quot; class=&quot;headerlink&quot; title=&quot;jpg 和 png 图片格式&quot;&gt;&lt;/a&gt;&lt;code&gt;jpg&lt;/code&gt; 和 &lt;code&gt;png&lt;/c</summary>
      
    
    
    
    <category term="Z_杂记" scheme="http://example.com/categories/Z-%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="图片" scheme="http://example.com/tags/%E5%9B%BE%E7%89%87/"/>
    
    <category term="格式" scheme="http://example.com/tags/%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>png和jpg格式的图片(二)</title>
    <link href="http://example.com/Z_%E6%9D%82%E8%AE%B0/Qt-images/"/>
    <id>http://example.com/Z_%E6%9D%82%E8%AE%B0/Qt-images/</id>
    <published>2023-10-27T01:24:02.557Z</published>
    <updated>2023-10-27T01:24:02.557Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在上篇文章 <a href="./png%E5%92%8Cjpg%E6%A0%BC%E5%BC%8F%E5%9B%BE%E7%89%87.md">png和jpg格式图片</a> 中笔者就 <code>jpg</code> 和 <code>png</code> 两种格式进行了说明，但是关于 Qt 打开改后缀文件名之后图片的问题依然没有说明。要探究Qt为何不能打开改了后缀的图片文件，这个还是得从多方面去定位。前文说了，通过三种方式设置了 <code>QLabel</code> 的图片。</p><h2 id="场景复现"><a href="#场景复现" class="headerlink" title="场景复现"></a>场景复现</h2><blockquote><p>这里还是先说明一下设置不成功的场景如何复现:</p><ol><li>找一张 <code>.jpg</code> 的图片，修改后缀也就是文件属性为 <code>.png</code></li><li>通过以下三种方式中的任意一种去设置 <code>QLabel</code> 为图片。</li></ol><p>Qt 版本是 <code>5.9</code></p><p>编译器试了 <code>MSVC</code> 和 <code>mingw</code> 都不好使。</p></blockquote><h2 id="QLabel-设置图片方法"><a href="#QLabel-设置图片方法" class="headerlink" title="QLabel 设置图片方法"></a><code>QLabel</code> 设置图片方法</h2><ol><li>通过 <code>QPixmap</code>设置 <code>QLabel</code> 的图片</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QPixmap <span class="title">img</span><span class="params">(<span class="string">&quot;:/Win11.png&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">ui-&gt;label-&gt;<span class="built_in">setPixmap</span>(img);</span><br><span class="line">ui-&gt;label-&gt;<span class="built_in">setScaledContents</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>通过 <code>QImage</code> 设置 <code>QLabel</code> 的图片</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QImage img;</span><br><span class="line">img.<span class="built_in">load</span>(<span class="string">&quot;:/Win11.png&quot;</span>);</span><br><span class="line">ui-&gt;label-&gt;<span class="built_in">setPixmap</span>(QPixmap::<span class="built_in">fromImage</span>(img))</span><br></pre></td></tr></table></figure><ol start="3"><li>通过 <code>QLabel.setStyleSheet()</code> 的图片</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui-&gt;label-&gt;<span class="built_in">setStyleSheet</span>(<span class="built_in">QString</span>(<span class="string">&quot;QLabel&#123;&quot;</span></span><br><span class="line">                                 <span class="string">&quot;border-image:url(:/Win11.png) 4 4 4 4 stretch stretch;&quot;</span></span><br><span class="line">                                 <span class="string">&quot;&#125;&quot;</span>));</span><br></pre></td></tr></table></figure><p>当然还有第四种方法，通过 <code>QSvgRenderer</code> 设置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QSvgRenderer&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">QSvgRenderer <span class="title">svgRender</span><span class="params">(QString(<span class="string">&quot;:/Win11.svg&quot;</span>))</span></span>;</span><br><span class="line"><span class="function">QPixmap <span class="title">pixmap</span><span class="params">(<span class="number">20</span>,<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">QPainter <span class="title">painter</span><span class="params">(&amp;pixmap)</span></span>;</span><br><span class="line">svgRender.<span class="built_in">render</span>(&amp;painter);</span><br><span class="line">ui-&gt;label-&gt;<span class="built_in">setPixmap</span>(pixmap);</span><br></pre></td></tr></table></figure><p>场景是描述完了，可以动手尝试了</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>接着就是去查看几种实现方式中的源码是如何是设置的了，这里先猜一下结论</p><blockquote><p>就是 <code>png</code> 和 <code>jpg</code> 格式的算法不同，格式问题导致的读取的算法不一致，因此Qt内部实现的读取图片的算法只能根据图片文件的后缀所对应的算法去读取算法，而 <code>setStyleSheet</code> 算法也是基于这么一个逻辑，因此三种读取方式都不成功。</p><p>关于图片算法的问题，在上篇文章 <a href="./png%E5%92%8Cjpg%E6%A0%BC%E5%BC%8F%E5%9B%BE%E7%89%87.md">png和jpg格式图片</a> 中也略微提到，这个我们不深做研究，只需知道 <code>jpg</code> 和 <code>png</code> 不是同一种算法，也不通用即可。</p></blockquote><h2 id="初步验证"><a href="#初步验证" class="headerlink" title="初步验证"></a>初步验证</h2><p>因为上述几种步骤笔者都做过尝试，因此在验证过程中我们不纠结于使用哪一种方式，直接看结果。</p><ol><li>那如何去验证呢，我们还是看代码，这次我们在 Qt 的 <code>qrc</code> 文件中，去掉图片的后缀名，不带后缀属性去读取图片看看其是否可以读取成功。</li></ol><div class="tag-plugin image"><div class="image-bg"><img src="../../images/Qt%E5%9B%BE%E7%89%87/image-20220423143541263.png" fancybox="true"/></div></div><p><mark>运行结果</mark>:  <code>QLabel</code> 读取成功</p><p>如上图所示，在 <code>qrc</code> 文件中去掉图片的后缀，读取图片设置到 <code>QLabel</code> 依然是成功的。 </p><ol start="2"><li>我们接着操作，在代码中修改图片后缀为 <code>png</code>，看看这次能不能读取成功。</li></ol><img src="../../images/Qt%E5%9B%BE%E7%89%87/image-20220423143916480.png" alt="修改后缀为png" style="zoom:50%;" /><p><mark>运行结果</mark>：读取失败</p><p>如上图所示，添加后缀后反而还展示不成功了。</p><h2 id="初步验证的结果"><a href="#初步验证的结果" class="headerlink" title="初步验证的结果"></a>初步验证的结果</h2><p>这就基本上说明了：</p><blockquote><p>在 <code>Qt</code> 的内部有很大的几率是通过文件的后缀去判断调用哪个图片读取算法的。也就是说，当你人为的修改了 <code>png-&gt;jpg</code> 时，在 <code>Qt</code> 中就会出现设置图片失败的问题。目前看来，在代码没有问题，但是图片设置后不显示的情况下，最好的方式是，就是去掉图片的后缀，让 <code>Qt</code> 自己去判断调用哪个算法读取图片。</p></blockquote><h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><p>这里有关于 <code>Qt</code> 图片 <code>I\O</code> 的描述可以看看Qt帮助手册中关于图像文件读写的文档。</p><div class="tag-plugin image"><div class="image-bg"><img src="../../images/Qt%E5%9B%BE%E7%89%87/image-20220423152853629.png" fancybox="true"/></div></div><p>源码部分，我们只需查看两个<code>Qt</code> 类就行，个人感觉看一个就知道了。两者识别图片的算法应该是一致的。包括 <code>setStyleSheet()</code>接口中设置图片的接口应该都是一致的。 </p><blockquote><ol><li>QPixmap依赖于所在的平台的绘图引擎，故例如反锯齿等一些效果在不同的平台上可能会有不同的显示效果，QImage使用Qt自身的绘图引擎，可在不同平台上具有相同的显示效果</li><li>目前的Qt会把QPixmap都存储在graphics memory中，QImage是存储在客户端的，是独立于硬件的。在X11, Mac 以及 Symbian平台上，QPixmap 是存储在服务器端，而QImage则是存储在客户端，在Windows平台上，QPixmap和QImage都是存储在客户端，并不使用任何的GDI资源。</li><li>由于QImage是独立于硬件的，也是一种QPaintDevice，因此我们可以在另一个线程中对其进行绘制，而不需要在GUI线程中处理，使用这一方式可以很大幅度提高UI响应速度。</li></ol></blockquote><h2 id="QPixmap"><a href="#QPixmap" class="headerlink" title="QPixmap"></a>QPixmap</h2><p>查询到QPixmap的源文件，一般存放在 <code>Qt</code> 安装目录下 <code>$&#123;安装目录&#125;\5.9.9\Src\qtbase\src\gui\image</code>，文件名为 <code>qpixmap.h qpixmap.cpp</code></p><p>先看一下 <code>QPixmap</code> 的 构造函数中读取图片文件的方法。</p><ol><li><p><code>QPixmap::QPixmap(const QString&amp; fileName, const char *format, Qt::ImageConversionFlags flags)</code>的源码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">QPixmap::<span class="built_in">QPixmap</span>(<span class="type">const</span> QString&amp; fileName, <span class="type">const</span> <span class="type">char</span> *format, Qt::ImageConversionFlags flags)</span><br><span class="line">    : <span class="built_in">QPaintDevice</span>()</span><br><span class="line">   &#123;</span><br><span class="line">        <span class="built_in">doInit</span>(<span class="number">0</span>, <span class="number">0</span>, QPlatformPixmap::PixmapType);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">qt_pixmap_thread_test</span>())</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">load</span>(fileName, format, flags); <span class="comment">// 这里看到调用了load()的接口，接着查看load是如何实现的</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>load()</code>函数源码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment">    Loads a pixmap from the file with the given \a fileName. Returns</span></span><br><span class="line"><span class="comment">    true if the pixmap was successfully loaded; otherwise invalidates</span></span><br><span class="line"><span class="comment">    the pixmap and returns \c false.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The loader attempts to read the pixmap using the specified \a</span></span><br><span class="line"><span class="comment">    format. If the \a format is not specified (which is the default),</span></span><br><span class="line"><span class="comment">    the loader probes the file for a header to guess the file format.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The file name can either refer to an actual file on disk or to one</span></span><br><span class="line"><span class="comment">    of the application&#x27;s embedded resources. See the</span></span><br><span class="line"><span class="comment">    \l&#123;resources.html&#125;&#123;Resource System&#125; overview for details on how to</span></span><br><span class="line"><span class="comment">    embed pixmaps and other resource files in the application&#x27;s</span></span><br><span class="line"><span class="comment">    executable.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    If the data needs to be modified to fit in a lower-resolution</span></span><br><span class="line"><span class="comment">    result (e.g. converting from 32-bit to 8-bit), use the \a flags to</span></span><br><span class="line"><span class="comment">    control the conversion.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Note that QPixmaps are automatically added to the QPixmapCache</span></span><br><span class="line"><span class="comment">    when loaded from a file; the key used is internal and can not</span></span><br><span class="line"><span class="comment">    be acquired.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    \sa loadFromData(), &#123;QPixmap#Reading and Writing Image</span></span><br><span class="line"><span class="comment">    Files&#125;&#123;Reading and Writing Image Files&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 翻译过来就是</span></span><br><span class="line"><span class="comment">从给定的文件名的文件中加载一个像素图。如果pixmap成功加载，则为True;否则返回无效pixmap并返回\c false。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">加载器尝试使用指定的\a读取pixmap格式。如果没有指定\a格式(这是默认的)，</span></span><br><span class="line"><span class="comment">加载器探测文件的头，以猜测文件的格式。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">文件名可以指向磁盘上的实际文件，也可以指向磁盘上的实际文件应用程序的嵌入式资源。看到\l&#123;resources.html&#125;&#123;Resource System&#125;概述如何嵌入pixmap和其他资源文件在应用程序的可执行文件。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果数据需要修改以适应低分辨率结果(例如从32位转换到8位)，使用\a标志来控制转换。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">注意，qpixmap会自动添加到QPixmapCache中</span></span><br><span class="line"><span class="comment">当从文件加载时;使用的密钥是内部的，不能被收购。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">\sa loadFromData()， &#123;QPixmap#读写图像读写图像文件&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// loadFromdata的源码我也补充到了文末</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">QPixmap::load</span><span class="params">(<span class="type">const</span> QString &amp;fileName, <span class="type">const</span> <span class="type">char</span> *format, Qt::ImageConversionFlags flags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!fileName.<span class="built_in">isEmpty</span>()) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function">QFileInfo <span class="title">info</span><span class="params">(fileName)</span></span>;</span><br><span class="line">        <span class="comment">// Note: If no extension is provided, we try to match the</span></span><br><span class="line">        <span class="comment">// file against known plugin extensions</span></span><br><span class="line">        <span class="keyword">if</span> (info.<span class="built_in">completeSuffix</span>().<span class="built_in">isEmpty</span>() || info.<span class="built_in">exists</span>()) &#123;</span><br><span class="line"></span><br><span class="line">            QString key = <span class="built_in">QLatin1String</span>(<span class="string">&quot;qt_pixmap&quot;</span>)</span><br><span class="line">                    % info.<span class="built_in">absoluteFilePath</span>()</span><br><span class="line">                    % <span class="built_in">HexString</span>&lt;uint&gt;(info.<span class="built_in">lastModified</span>().<span class="built_in">toSecsSinceEpoch</span>())</span><br><span class="line">                    % <span class="built_in">HexString</span>&lt;quint64&gt;(info.<span class="built_in">size</span>())</span><br><span class="line">                    % <span class="built_in">HexString</span>&lt;uint&gt;(data ? data-&gt;<span class="built_in">pixelType</span>() : QPlatformPixmap::PixmapType);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (QPixmapCache::<span class="built_in">find</span>(key, <span class="keyword">this</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            data = QPlatformPixmap::<span class="built_in">create</span>(<span class="number">0</span>, <span class="number">0</span>, data ? data-&gt;<span class="built_in">pixelType</span>() : QPlatformPixmap::PixmapType);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (data-&gt;<span class="built_in">fromFile</span>(fileName, format, flags)) &#123;</span><br><span class="line">                QPixmapCache::<span class="built_in">insert</span>(key, *<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">isNull</span>()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isQBitmap</span>())</span><br><span class="line">            *<span class="keyword">this</span> = <span class="built_in">QBitmap</span>();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            data.<span class="built_in">reset</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>一看源码是不是就清晰多了。在 <code>load()</code>函数的实现中：①判断文件名是不是为空；②不为空时，首先就是读取文件的后缀。这里我们可以细细查一下第二个 <code>if</code> 判断中 <code>QString</code> 类型的 <code>key</code> 到底是进行了一个什么操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QString key = <span class="built_in">QLatin1String</span>(<span class="string">&quot;qt_pixmap&quot;</span>)</span><br><span class="line">                    % info.<span class="built_in">absoluteFilePath</span>() <span class="comment">// 返回文件名的绝对路径</span></span><br><span class="line">                    % <span class="built_in">HexString</span>&lt;uint&gt;(info.<span class="built_in">lastModified</span>().<span class="built_in">toSecsSinceEpoch</span>()) <span class="comment">// 返回文件最后一次修改的日期和时间</span></span><br><span class="line">                    % <span class="built_in">HexString</span>&lt;quint64&gt;(info.<span class="built_in">size</span>()) <span class="comment">// 返回文件的大小</span></span><br><span class="line">                    % <span class="built_in">HexString</span>&lt;uint&gt;(data ? data-&gt;<span class="built_in">pixelType</span>() : QPlatformPixmap::PixmapType); <span class="comment">// 这里的data是成员变量，就是说如果设置了data的pixelType的值就读取，没设置的话就是默认值 QPlatformPixmap::PixmapType</span></span><br></pre></td></tr></table></figure><p>上述的 <code>HexString&lt;type&gt;</code>就是 ASCII 的数组形式，<code>16进制</code> 的数组。<u>上述代码中的 <code>%</code> 操作如果不是求余的话会是什么呢。如果是求余，<code>QString</code> 会报错才是呀？？？</u></p><p>这里最终还是通过设置和查看 <code>QPixmap</code> 的内置变量 <code>data</code> 中的标志去查看当前文件是不是图片，如果是图片，则会修改当前的 <code>QPixmap</code> 指针，如果不是就会返回 <mark style="background:red;">false</mark>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (QPixmapCache::<span class="built_in">find</span>(key, <span class="keyword">this</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>这里补充一个<code>QPixmapCache</code>的demo：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在缓存中查找与给定键关联的缓存pixmap。如果找到了pixmap，函数将pixmap设置为该pixmap并返回true;否则，它将保留pixmap并返回false。*/</span></span><br><span class="line">QPixmap pm;</span><br><span class="line"><span class="keyword">if</span> (!QPixmapCache::<span class="built_in">find</span>(<span class="string">&quot;my_big_image&quot;</span>, &amp;pm)) &#123;</span><br><span class="line">    pm.<span class="built_in">load</span>(<span class="string">&quot;bigimage.png&quot;</span>);</span><br><span class="line">    QPixmapCache::<span class="built_in">insert</span>(<span class="string">&quot;my_big_image&quot;</span>, pm);</span><br><span class="line">&#125;</span><br><span class="line">painter-&gt;<span class="built_in">drawPixmap</span>(<span class="number">0</span>, <span class="number">0</span>, pm);</span><br></pre></td></tr></table></figure><p>最终判断当前文件是不是图片应该是在 <code>data-&gt;fromFile()</code> 中实现的。</p><p>这个<code>data</code>的定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QExplicitlySharedDataPointer&lt;QPlatformPixmap&gt; data;</span><br></pre></td></tr></table></figure><p><mark>未完成</mark>这篇文章还在编辑中</p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><blockquote><p>补充一下</p><p><code>load()</code>的函数有必要读一下。</p><p> <code>QPixmap::loadFromData()</code> 的源码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment">    \fn bool QPixmap::loadFromData(const uchar *data, uint len, const char *format, Qt::ImageConversionFlags flags)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Loads a pixmap from the \a len first bytes of the given binary \a</span></span><br><span class="line"><span class="comment">    data.  Returns \c true if the pixmap was loaded successfully;</span></span><br><span class="line"><span class="comment">    otherwise invalidates the pixmap and returns \c false.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The loader attempts to read the pixmap using the specified \a</span></span><br><span class="line"><span class="comment">    format. If the \a format is not specified (which is the default),</span></span><br><span class="line"><span class="comment">    the loader probes the file for a header to guess the file format.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    If the data needs to be modified to fit in a lower-resolution</span></span><br><span class="line"><span class="comment">    result (e.g. converting from 32-bit to 8-bit), use the \a flags to</span></span><br><span class="line"><span class="comment">    control the conversion.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    \sa load(), &#123;QPixmap#Reading and Writing Image Files&#125;&#123;Reading and</span></span><br><span class="line"><span class="comment">    Writing Image Files&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">QPixmap::loadFromData</span><span class="params">(<span class="type">const</span> uchar *buf, uint len, <span class="type">const</span> <span class="type">char</span> *format, Qt::ImageConversionFlags flags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span> || buf == <span class="number">0</span>) &#123;</span><br><span class="line">        data.<span class="built_in">reset</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data = QPlatformPixmap::<span class="built_in">create</span>(<span class="number">0</span>, <span class="number">0</span>, QPlatformPixmap::PixmapType);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (data-&gt;<span class="built_in">fromData</span>(buf, len, format, flags))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    data.<span class="built_in">reset</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在上篇文章 &lt;a href=&quot;./png%E5%92%8Cjpg%E6%A0%BC%E5%BC%8F%E5%9B%</summary>
      
    
    
    
    <category term="Z_杂记" scheme="http://example.com/categories/Z-%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="图片" scheme="http://example.com/tags/%E5%9B%BE%E7%89%87/"/>
    
    <category term="Qt" scheme="http://example.com/tags/Qt/"/>
    
    <category term="格式" scheme="http://example.com/tags/%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>使用 osquery 查询系统uuid和系统信息</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/osquery/%E6%9F%A5%E8%AF%A2uuid%E5%92%8C%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/osquery/%E6%9F%A5%E8%AF%A2uuid%E5%92%8C%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/</id>
    <published>2023-10-27T01:24:02.555Z</published>
    <updated>2023-11-06T10:58:14.915Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查询uuid"><a href="#查询uuid" class="headerlink" title="查询uuid"></a>查询uuid</h1><h2 id="方法一-见查询信息"><a href="#方法一-见查询信息" class="headerlink" title="方法一 见查询信息"></a>方法一 见<a href="#sysinfo">查询信息</a></h2><h2 id="方法二-通过注册表"><a href="#方法二-通过注册表" class="headerlink" title="方法二 通过注册表"></a>方法二 通过注册表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> data <span class="keyword">from</span> registry <span class="keyword">where</span> key <span class="operator">=</span><span class="string">&#x27;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography&#x27;</span> <span class="keyword">AND</span> name<span class="operator">=</span><span class="string">&#x27;MachineGuid&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> data <span class="keyword">FROM</span> registry <span class="keyword">WHERE</span> path<span class="operator">=</span><span class="string">&#x27;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid&#x27;</span></span><br></pre></td></tr></table></figure><img src="/G_%E5%B7%A5%E5%85%B7/osquery/%E6%9F%A5%E8%AF%A2uuid%E5%92%8C%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/2166070-20230710100249111-804875540.png" class="" title="img"><h1 id="查询系统版本号和windows版本"><a href="#查询系统版本号和windows版本" class="headerlink" title="查询系统版本号和windows版本"></a>查询系统版本号和windows版本</h1><h2 id="方法一-直接查询"><a href="#方法一-直接查询" class="headerlink" title="方法一 直接查询"></a>方法一 <a id="sysinfo"></a>直接查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> uuid, computer_name, hardware_model, hardware_serial <span class="keyword">FROM</span> system_info;</span><br></pre></td></tr></table></figure><img src="/G_%E5%B7%A5%E5%85%B7/osquery/%E6%9F%A5%E8%AF%A2uuid%E5%92%8C%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/2166070-20230710100234639-1950797265.png" class="" title="img"><h2 id="方法二-通过注册表-1"><a href="#方法二-通过注册表-1" class="headerlink" title="方法二 通过注册表"></a>方法二 通过注册表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> data </span><br><span class="line"><span class="keyword">FROM</span> registry </span><br><span class="line"><span class="keyword">WHERE</span> key <span class="operator">=</span> <span class="string">&#x27;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> name <span class="keyword">IN</span>(<span class="string">&#x27;CurrentMajorVersionNumber&#x27;</span>,<span class="string">&#x27;CurrentMinorVersionNumber&#x27;</span>, <span class="string">&#x27;CurrentBuildNumber&#x27;</span>, <span class="string">&#x27;ProductName&#x27;</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">   <span class="keyword">CASE</span> name</span><br><span class="line">      <span class="keyword">WHEN</span> <span class="string">&#x27;ProductName&#x27;</span> <span class="keyword">THEN</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">WHEN</span> <span class="string">&#x27;CurrentMajorVersionNumber&#x27;</span> <span class="keyword">THEN</span> <span class="number">2</span></span><br><span class="line">      <span class="keyword">WHEN</span> <span class="string">&#x27;CurrentMinorVersionNumber&#x27;</span> <span class="keyword">THEN</span> <span class="number">3</span></span><br><span class="line">      <span class="keyword">WHEN</span> <span class="string">&#x27;CurrentBuildNumber&#x27;</span> <span class="keyword">THEN</span> <span class="number">4</span></span><br><span class="line">      <span class="keyword">ELSE</span> <span class="number">3</span></span><br><span class="line">   <span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><img src="/G_%E5%B7%A5%E5%85%B7/osquery/%E6%9F%A5%E8%AF%A2uuid%E5%92%8C%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/2166070-20230710100158910-1063727182.png" class="" title="img">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;查询uuid&quot;&gt;&lt;a href=&quot;#查询uuid&quot; class=&quot;headerlink&quot; title=&quot;查询uuid&quot;&gt;&lt;/a&gt;查询uuid&lt;/h1&gt;&lt;h2 id=&quot;方法一-见查询信息&quot;&gt;&lt;a href=&quot;#方法一-见查询信息&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    <category term="osquery" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/osquery/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="osquery" scheme="http://example.com/tags/osquery/"/>
    
  </entry>
  
  <entry>
    <title>自动生成 readme 文档</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/ReadneGenerator/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/ReadneGenerator/</id>
    <published>2023-10-27T01:24:02.508Z</published>
    <updated>2023-11-07T01:15:16.315Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开源地址： <a href="https://github.com/kefranabg/readme-md-generator">https://github.com/kefranabg/readme-md-generator</a></p></blockquote><p>自动生成 readme 的开源工具</p><p>安装方式：npm i -g readme-md-generator</p><p>npm版本要大于8</p><img src="/G_%E5%B7%A5%E5%85%B7/ReadneGenerator/readme-generate.jpeg" class="" title="readme-generate">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;开源地址： &lt;a href=&quot;https://github.com/kefranabg/readme-md-generator&quot;&gt;https://github.com/kefranabg/readme-md-generator&lt;/a&gt;&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="readme" scheme="http://example.com/tags/readme/"/>
    
  </entry>
  
  <entry>
    <title>使用SM3加密文件</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/OpenSSL/%E4%BD%BF%E7%94%A8sm3%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/OpenSSL/%E4%BD%BF%E7%94%A8sm3%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6/</id>
    <published>2023-10-27T01:24:02.507Z</published>
    <updated>2023-10-27T01:24:02.507Z</updated>
    
    <content type="html"><![CDATA[<p>以下是使用 OpenSSL 库进行 SM3 消息摘要和文件加密的 C++ 示例代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/sha.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/sm3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算字符串的 SM3 摘要值</span></span><br><span class="line"><span class="function">std::string <span class="title">sm3_hash_string</span><span class="params">(<span class="type">const</span> std::string&amp; str)</span> </span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> md[SM3_DIGEST_LENGTH];</span><br><span class="line">    <span class="built_in">SM3</span>(<span class="built_in">reinterpret_cast</span>&lt;<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>*&gt;(str.<span class="built_in">data</span>()), str.<span class="built_in">size</span>(), md);</span><br><span class="line">    <span class="function">std::string <span class="title">hash_str</span><span class="params">(<span class="keyword">reinterpret_cast</span>&lt;<span class="type">const</span> <span class="type">char</span>*&gt;(md), SM3_DIGEST_LENGTH)</span></span>;</span><br><span class="line">    <span class="keyword">return</span> hash_str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算文件的 SM3 摘要值</span></span><br><span class="line"><span class="function">std::string <span class="title">sm3_hash_file</span><span class="params">(<span class="type">const</span> std::string&amp; file_path)</span> </span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> md[SM3_DIGEST_LENGTH];</span><br><span class="line">    <span class="function">std::ifstream <span class="title">input</span><span class="params">(file_path, std::ios::binary)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (input) &#123;</span><br><span class="line">        EVP_MD_CTX* mdctx = <span class="built_in">EVP_MD_CTX_new</span>();</span><br><span class="line">        <span class="built_in">EVP_DigestInit_ex</span>(mdctx, <span class="built_in">EVP_sm3</span>(), <span class="literal">nullptr</span>);</span><br><span class="line">        <span class="type">const</span> <span class="type">size_t</span> buf_size = <span class="number">4096</span>;</span><br><span class="line">        <span class="type">char</span> buf[buf_size];</span><br><span class="line">        <span class="keyword">while</span> (input.<span class="built_in">read</span>(buf, buf_size)) &#123;</span><br><span class="line">            <span class="built_in">EVP_DigestUpdate</span>(mdctx, buf, buf_size);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">size_t</span> remain_size = input.<span class="built_in">gcount</span>();</span><br><span class="line">        <span class="built_in">EVP_DigestUpdate</span>(mdctx, buf, remain_size);</span><br><span class="line">        <span class="built_in">EVP_DigestFinal_ex</span>(mdctx, md, <span class="literal">nullptr</span>);</span><br><span class="line">        <span class="built_in">EVP_MD_CTX_free</span>(mdctx);</span><br><span class="line">        input.<span class="built_in">close</span>();</span><br><span class="line">        <span class="function">std::string <span class="title">hash_str</span><span class="params">(<span class="keyword">reinterpret_cast</span>&lt;<span class="type">const</span> <span class="type">char</span>*&gt;(md), SM3_DIGEST_LENGTH)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> hash_str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;fail to open file &quot;</span> + file_path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用密码对文件进行加密</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">encrypt_file</span><span class="params">(<span class="type">const</span> std::string&amp; input_file_path, <span class="type">const</span> std::string&amp; output_file_path, <span class="type">const</span> std::string&amp; password)</span> </span>&#123;</span><br><span class="line">    <span class="function">std::ifstream <span class="title">input</span><span class="params">(input_file_path, std::ios::binary)</span></span>;</span><br><span class="line">    <span class="function">std::ofstream <span class="title">output</span><span class="params">(output_file_path, std::ios::binary)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (input &amp;&amp; output) &#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">int</span> key_len = EVP_MAX_KEY_LENGTH;</span><br><span class="line">        <span class="type">const</span> <span class="type">int</span> iv_len = EVP_MAX_IV_LENGTH;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> key[key_len];</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> iv[iv_len];</span><br><span class="line">        <span class="built_in">EVP_BytesToKey</span>(<span class="built_in">EVP_aes_256_cbc</span>(), <span class="built_in">EVP_sm3</span>(), <span class="literal">nullptr</span>, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>*&gt;(password.<span class="built_in">data</span>()), password.<span class="built_in">size</span>(), <span class="number">1</span>, key, iv);</span><br><span class="line">        EVP_CIPHER_CTX* ctx = <span class="built_in">EVP_CIPHER_CTX_new</span>();</span><br><span class="line">        <span class="built_in">EVP_EncryptInit_ex</span>(ctx, <span class="built_in">EVP_aes_256_cbc</span>(), <span class="literal">nullptr</span>, key, iv);</span><br><span class="line">        <span class="type">const</span> <span class="type">size_t</span> buf_size = <span class="number">4096</span>;</span><br><span class="line">        <span class="type">char</span> buf[buf_size];</span><br><span class="line">        <span class="keyword">while</span> (input.<span class="built_in">read</span>(buf, buf_size)) &#123;</span><br><span class="line">            <span class="type">int</span> len = input.<span class="built_in">gcount</span>();</span><br><span class="line">            <span class="type">int</span> out_len = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">EVP_EncryptUpdate</span>(ctx, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">unsigned</span> <span class="type">char</span>*&gt;(buf), &amp;out_len, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">unsigned</span> <span class="type">char</span>*&gt;(buf), len);</span><br><span class="line">            output.<span class="built_in">write</span>(buf, out_len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> len = input.<span class="built_in">gcount</span>();</span><br><span class="line">        <span class="type">int</span> out_len = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">EVP_EncryptFinal_ex</span>(ctx, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">unsigned</span> <span class="type">char</span>*&gt;(buf), &amp;out_len);</span><br><span class="line">        output.<span class="built_in">write</span>(buf, out_len);</span><br><span class="line">        <span class="built_in">EVP_CIPHER_CTX_free</span>(ctx);</span><br><span class="line">        input.<span class="built_in">close</span>();</span><br><span class="line">        output.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;fail to open input/output file.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;message to be hashed&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;SM3 hash of string \&quot;&quot;</span> &lt;&lt; str &lt;&lt; <span class="string">&quot;\&quot;: &quot;</span> &lt;&lt; <span class="built_in">sm3_hash_string</span>(str) &lt;&lt; std::endl;</span><br><span class="line">    std::string file_path = <span class="string">&quot;test.txt&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;SM3 hash of file \&quot;&quot;</span> &lt;&lt; file_path &lt;&lt; <span class="string">&quot;\&quot;: &quot;</span> &lt;&lt; <span class="built_in">sm3_hash_file</span>(file_path) &lt;&lt; std::endl;</span><br><span class="line">    std::string password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="built_in">encrypt_file</span>(file_path, <span class="string">&quot;test_encrypted.txt&quot;</span>, password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Error: &quot;</span> &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中，使用 SM3 函数对字符串或文件内容进行摘要；使用 EVP_BytesToKey 函数生成密码加密密钥和初始化向量，并使用 EVP_EncryptInit_ex 函数初始化加密上下文，在循环中调用 EVP_EncryptUpdate 函数对文件进行逐块加密，最后调用 EVP_EncryptFinal_ex 函数完成加密过程，将结果写入新的加密文件中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以下是使用 OpenSSL 库进行 SM3 消息摘要和文件加密的 C++ 示例代码：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa</summary>
      
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    <category term="OpenSSL" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/OpenSSL/"/>
    
    
    <category term="加密" scheme="http://example.com/tags/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="SM3" scheme="http://example.com/tags/SM3/"/>
    
    <category term="OpenSSL" scheme="http://example.com/tags/OpenSSL/"/>
    
  </entry>
  
  <entry>
    <title>常见排序算法整理（C++)</title>
    <link href="http://example.com/G_LeetCode/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/G_LeetCode/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2023-10-27T01:24:02.504Z</published>
    <updated>2023-10-27T01:24:02.505Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Welcome to GDB Online.</span></span><br><span class="line"><span class="comment">GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,</span></span><br><span class="line"><span class="comment">C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.</span></span><br><span class="line"><span class="comment">Code, Compile, Run and Debug online from anywhere in world.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 左闭右闭区间</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getRand</span><span class="params">(<span class="type">int</span> min, <span class="type">int</span> max)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ( <span class="built_in">rand</span>() % (max - min + <span class="number">1</span>) ) + min ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quickSort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> start, <span class="type">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(start &gt; end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="type">int</span> i = start, j = end;</span><br><span class="line">    <span class="type">int</span> key = nums[start];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; j &amp;&amp; nums[j] &lt; key)</span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; j &amp;&amp; nums[i] &gt;= key)</span><br><span class="line">            i++;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span>(i&lt;j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">swap</span>(nums[i],nums[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">swap</span>(nums[i], nums[start]);</span><br><span class="line">    <span class="built_in">quickSort</span>(nums, start, i<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">quickSort</span>(nums, i+<span class="number">1</span>, end);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp; nums)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.<span class="built_in">empty</span>() || nums.<span class="built_in">size</span>() &lt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">quickSort</span>(nums, <span class="number">0</span>, nums.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        nums.<span class="built_in">push_back</span>(std::<span class="built_in">move</span>(<span class="built_in">getRand</span>(<span class="number">0</span>,<span class="number">100</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(nums);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it : nums)</span><br><span class="line">        cout &lt;&lt; it &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h1&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;</summary>
      
    
    
    
    <category term="G_LeetCode" scheme="http://example.com/categories/G-LeetCode/"/>
    
    
    <category term="排序" scheme="http://example.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="快速排序" scheme="http://example.com/tags/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>2611. 老鼠和奶酪</title>
    <link href="http://example.com/G_LeetCode/2611.%20%E8%80%81%E9%BC%A0%E5%92%8C%E5%A5%B6%E9%85%AA/"/>
    <id>http://example.com/G_LeetCode/2611.%20%E8%80%81%E9%BC%A0%E5%92%8C%E5%A5%B6%E9%85%AA/</id>
    <published>2023-10-27T01:24:02.503Z</published>
    <updated>2023-10-27T01:24:02.504Z</updated>
    
    <content type="html"><![CDATA[<p>2023年6月7日23:18:51</p><p>[toc]</p><h1 id="2611-老鼠和奶酪-力扣（LeetCode）"><a href="#2611-老鼠和奶酪-力扣（LeetCode）" class="headerlink" title="2611. 老鼠和奶酪 - 力扣（LeetCode）"></a><a href="https://leetcode.cn/problems/mice-and-cheese/">2611. 老鼠和奶酪 - 力扣（LeetCode）</a></h1><p>有两只老鼠和 n 块不同类型的奶酪，每块奶酪都只能被其中一只老鼠吃掉。</p><p>下标为 i 处的奶酪被吃掉的得分为：</p><p>如果第一只老鼠吃掉，则得分为 reward1[i] 。<br>如果第二只老鼠吃掉，则得分为 reward2[i] 。<br>给你一个正整数数组 reward1 ，一个正整数数组 reward2 ，和一个非负整数 k 。</p><p>请你返回第一只老鼠恰好吃掉 k 块奶酪的情况下，最大 得分为多少。</p><p> </p><p>示例 1：</p><p>输入：reward1 &#x3D; [1,1,3,4], reward2 &#x3D; [4,4,1,1], k &#x3D; 2<br>输出：15<br>解释：这个例子中，第一只老鼠吃掉第 2 和 3 块奶酪（下标从 0 开始），第二只老鼠吃掉第 0 和 1 块奶酪。<br>总得分为 4 + 4 + 3 + 4 &#x3D; 15 。<br>15 是最高得分。<br>示例 2：</p><p>输入：reward1 &#x3D; [1,1], reward2 &#x3D; [1,1], k &#x3D; 2<br>输出：2<br>解释：这个例子中，第一只老鼠吃掉第 0 和 1 块奶酪（下标从 0 开始），第二只老鼠不吃任何奶酪。<br>总得分为 1 + 1 &#x3D; 2 。<br>2 是最高得分。 </p><p>提示：</p><p>1 &lt;&#x3D; n &#x3D;&#x3D; reward1.length &#x3D;&#x3D; reward2.length &lt;&#x3D; 105<br>1 &lt;&#x3D; reward1[i], reward2[i] &lt;&#x3D; 1000<br>0 &lt;&#x3D; k &lt;&#x3D; n</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode.cn/problems/mice-and-cheese">https://leetcode.cn/problems/mice-and-cheese</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><ol><li>思路<br><strong>贪心 + 排序</strong></li></ol><p>算出差值，取K 个最大值即可</p><ol><li>代码</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">miceAndCheese</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; reward1, vector&lt;<span class="type">int</span>&gt;&amp; reward2, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> n = reward1.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">diffs</span><span class="params">(n)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += reward2[i];</span><br><span class="line">            diffs[i] = reward1[i] - reward2[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">sort</span>(diffs.<span class="built_in">begin</span>(), diffs.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += diffs[n-i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">miceAndCheese</span><span class="params">(reward1 []<span class="type">int</span>, reward2 []<span class="type">int</span>, k <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    ans := <span class="number">0</span></span><br><span class="line">    n := <span class="built_in">len</span>(reward1)</span><br><span class="line"></span><br><span class="line">    diffs := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;n; i++ &#123;</span><br><span class="line">        ans += reward2[i]</span><br><span class="line">        diffs[i] = reward1[i] - reward2[i]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort.Ints(diffs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span>; i&lt;=k; i++ &#123;</span><br><span class="line">        ans += diffs[n-i]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2023年6月7日23:18:51&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;2611-老鼠和奶酪-力扣（LeetCode）&quot;&gt;&lt;a href=&quot;#2611-老鼠和奶酪-力扣（LeetCode）&quot; class=&quot;headerlink&quot; title=&quot;2611. 老鼠</summary>
      
    
    
    
    <category term="G_LeetCode" scheme="http://example.com/categories/G-LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
    <category term="贪心" scheme="http://example.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
    <category term="排序" scheme="http://example.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>2352. 相等行列对 - 力扣（LeetCode）</title>
    <link href="http://example.com/G_LeetCode/2352.%20%E7%9B%B8%E7%AD%89%E8%A1%8C%E5%88%97%E5%AF%B9/"/>
    <id>http://example.com/G_LeetCode/2352.%20%E7%9B%B8%E7%AD%89%E8%A1%8C%E5%88%97%E5%AF%B9/</id>
    <published>2023-10-27T01:24:02.501Z</published>
    <updated>2023-11-06T10:58:36.409Z</updated>
    
    <content type="html"><![CDATA[<p>2023_06_06</p><p>[toc]</p><h1 id="2352-相等行列对-力扣（LeetCode）"><a href="#2352-相等行列对-力扣（LeetCode）" class="headerlink" title="2352. 相等行列对 - 力扣（LeetCode）"></a><a href="https://leetcode.cn/problems/equal-row-and-column-pairs/">2352. 相等行列对 - 力扣（LeetCode）</a></h1><p>给你一个下标从 0 开始、大小为 n x n 的整数矩阵 grid ，返回满足 Ri 行和 Cj 列相等的行列对 (Ri, Cj) 的数目。</p><p>如果行和列以相同的顺序包含相同的元素（即相等的数组），则认为二者是相等的。</p><p> </p><p>示例 1：</p><img src="/G_LeetCode/2352.%20%E7%9B%B8%E7%AD%89%E8%A1%8C%E5%88%97%E5%AF%B9/2166070-20230606232015247-2005756878.png" class="" title="img"><p>输入：grid &#x3D; [[3,2,1],[1,7,6],[2,7,7]]<br>输出：1<br>解释：存在一对相等行列对：</p><ul><li>(第 2 行，第 1 列)：[2,7,7]</li></ul><p>示例 2：</p><img src="/G_LeetCode/2352.%20%E7%9B%B8%E7%AD%89%E8%A1%8C%E5%88%97%E5%AF%B9/2166070-20230606232037353-1792537934.png" class="" title="img"><p>输入：grid &#x3D; [[3,1,2,2],[1,4,4,5],[2,4,2,2],[2,4,2,2]]<br>输出：3<br>解释：存在三对相等行列对：</p><ul><li>(第 0 行，第 0 列)：[3,1,2,2]</li><li>(第 2 行, 第 2 列)：[2,4,2,2]</li><li>(第 3 行, 第 2 列)：[2,4,2,2]</li></ul><p>提示：</p><p>n &#x3D;&#x3D; grid.length &#x3D;&#x3D; grid[i].length<br>1 &lt;&#x3D; n &lt;&#x3D; 200<br>1 &lt;&#x3D; grid[i][j] &lt;&#x3D; 105</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode.cn/problems/equal-row-and-column-pairs">https://leetcode.cn/problems/equal-row-and-column-pairs</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="cpp"><a href="#cpp" class="headerlink" title="cpp"></a>cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">equalPairs</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>, n = grid.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> row = <span class="number">0</span>; row &lt; n; row++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> col = <span class="number">0</span>; col &lt; n; col++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">equal</span>(row, col, grid))</span><br><span class="line">                &#123;</span><br><span class="line">                    res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">equal</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> col, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; &amp;grid)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = grid.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(grid[row][i] != grid[i][col])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">equalPairs</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(grid)</span><br><span class="line">    cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _,row := <span class="keyword">range</span> grid &#123;</span><br><span class="line">        cnt[fmt.Sprint(row)]++</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res := <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> j := <span class="number">0</span>; j &lt; n; j++ &#123;</span><br><span class="line">        <span class="keyword">var</span> arr[] <span class="type">int</span></span><br><span class="line">        <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">            arr = <span class="built_in">append</span>(arr, grid[i][j])</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> val,ok := cnt[fmt.Sprint(arr)]; ok &#123;</span><br><span class="line">            res += val</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2023_06_06&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;2352-相等行列对-力扣（LeetCode）&quot;&gt;&lt;a href=&quot;#2352-相等行列对-力扣（LeetCode）&quot; class=&quot;headerlink&quot; title=&quot;2352. 相等行列对 - 力</summary>
      
    
    
    
    <category term="G_LeetCode" scheme="http://example.com/categories/G-LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="哈希表" scheme="http://example.com/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
    <category term="矩阵" scheme="http://example.com/tags/%E7%9F%A9%E9%98%B5/"/>
    
    <category term="模拟" scheme="http://example.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
    <category term="Go" scheme="http://example.com/tags/Go/"/>
    
    <category term="C/C++" scheme="http://example.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>1706. 球会落何处 - 力扣（LeetCode）</title>
    <link href="http://example.com/G_LeetCode/1706.%20%E7%90%83%E4%BC%9A%E8%90%BD%E4%BD%95%E5%A4%84/"/>
    <id>http://example.com/G_LeetCode/1706.%20%E7%90%83%E4%BC%9A%E8%90%BD%E4%BD%95%E5%A4%84/</id>
    <published>2023-10-27T01:24:02.500Z</published>
    <updated>2023-10-27T01:24:02.500Z</updated>
    
    <content type="html"><![CDATA[<p>2022_02_24</p><p>[toc]</p><h1 id="1706-球会落何处"><a href="#1706-球会落何处" class="headerlink" title="1706. 球会落何处"></a><a href="https://leetcode-cn.com/problems/where-will-the-ball-fall/">1706. 球会落何处</a></h1><p>用一个大小为 <code>m x n</code> 的二维网格 <code>grid</code> 表示一个箱子。你有 <code>n</code> 颗球。箱子的顶部和底部都是开着的。</p><p>箱子中的每个单元格都有一个对角线挡板，跨过单元格的两个角，可以将球导向左侧或者右侧。</p><ul><li>将球导向右侧的挡板跨过左上角和右下角，在网格中用 <code>1</code> 表示。</li><li>将球导向左侧的挡板跨过右上角和左下角，在网格中用 <code>-1</code> 表示。</li></ul><p>在箱子每一列的顶端各放一颗球。每颗球都可能卡在箱子里或从底部掉出来。如果球恰好卡在两块挡板之间的 “V” 形图案，或者被一块挡导向到箱子的任意一侧边上，就会卡住。</p><p>返回一个大小为 <code>n</code> 的数组 <code>answer</code> ，其中 <code>answer[i]</code> 是球放在顶部的第 <code>i</code> 列后从底部掉出来的那一列对应的下标，如果球卡在盒子里，则返回 <code>-1</code> 。</p><p><strong>示例 1：</strong></p><p><strong><div class="tag-plugin image"><div class="image-bg"><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/12/26/ball.jpg" fancybox="true"/></div></div></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[1,1,1,-1,-1],[1,1,1,-1,-1],[-1,-1,-1,1,1],[1,1,1,1,-1],[-1,-1,-1,-1,-1]]</span><br><span class="line">输出：[1,-1,-1,-1,-1]</span><br><span class="line">解释：示例如图：</span><br><span class="line">b0 球开始放在第 0 列上，最终从箱子底部第 1 列掉出。</span><br><span class="line">b1 球开始放在第 1 列上，会卡在第 2、3 列和第 1 行之间的 &quot;V&quot; 形里。</span><br><span class="line">b2 球开始放在第 2 列上，会卡在第 2、3 列和第 0 行之间的 &quot;V&quot; 形里。</span><br><span class="line">b3 球开始放在第 3 列上，会卡在第 2、3 列和第 0 行之间的 &quot;V&quot; 形里。</span><br><span class="line">b4 球开始放在第 4 列上，会卡在第 2、3 列和第 1 行之间的 &quot;V&quot; 形里。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[-1]]</span><br><span class="line">输出：[-1]</span><br><span class="line">解释：球被卡在箱子左侧边上。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1]]</span><br><span class="line">输出：[0,1,2,3,4,-1]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>m == grid.length</code></li><li><code>n == grid[i].length</code></li><li><code>1 &lt;= m, n &lt;= 100</code></li><li><code>grid[i][j]</code> 为 <code>1</code> 或 <code>-1</code></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>思路</p><p>我们依次判断每个球的最终位置。对于每个球，从上至下判断球位置的移动方向。在对应的位置，如果挡板向右偏，则球会往右移动；如果挡板往左偏，则球会往左移动。若移动过程中碰到侧边或者 \text{V}V 型，则球会停止移动，卡在箱子里。如果可以完成本层的移动，则继续判断下一层的移动方向，直到落出箱子或者卡住。</p><p>作者：LeetCode-Solution<br>链接：<a href="https://leetcode-cn.com/problems/where-will-the-ball-fall/solution/qiu-hui-luo-he-chu-by-leetcode-solution-xqop/">https://leetcode-cn.com/problems/where-will-the-ball-fall/solution/qiu-hui-luo-he-chu-by-leetcode-solution-xqop/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">findBall</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = grid[<span class="number">0</span>].<span class="built_in">size</span>(); <span class="comment">//箱子的列数</span></span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123; <span class="comment">//分别求每个球掉到底部的位置下标</span></span><br><span class="line">            <span class="type">int</span> col = i; <span class="comment">//col表示球在下降过程中的纵坐标</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span>&amp; row : grid)&#123; <span class="comment">//分别求出球掉到每层的位置</span></span><br><span class="line">                <span class="type">int</span> dir = row[col];　<span class="comment">//dir表示球在下降过程中向左或向右下降</span></span><br><span class="line">                col += dir; <span class="comment">//更新球在下一层的纵坐标,向右移动(纵坐标加1)/向左移动(纵坐标减1)</span></span><br><span class="line">                <span class="keyword">if</span>(col &lt; <span class="number">0</span> || col == n || row[col] != dir )&#123; <span class="comment">//row[col]表示球将要移动的方向上挡板的布置情况,dir表示当前球的移动方向，两者方向不一致会形成夹角</span></span><br><span class="line">                    col = <span class="number">-1</span>;　<span class="comment">//当形成夹角或被挡在箱子侧边时,球将会卡在盒子里,所以该球下降的结果值直接赋值为-1;</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ans[i] = col; <span class="comment">//col表示每个球掉落到底部的位置,即为结果值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">​<span class="function"><span class="keyword">func</span> <span class="title">findBall</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">    ans := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> j := <span class="keyword">range</span> ans &#123;</span><br><span class="line">        col := j <span class="comment">// 球的初始列</span></span><br><span class="line">        <span class="keyword">for</span> _, row := <span class="keyword">range</span> grid &#123;</span><br><span class="line">            dir := row[col]</span><br><span class="line">            col += dir <span class="comment">// 移动球</span></span><br><span class="line">            <span class="keyword">if</span> col &lt; <span class="number">0</span> || col == n || row[col] != dir &#123; <span class="comment">// 到达侧边或V型</span></span><br><span class="line">                col = <span class="number">-1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[j] = col <span class="comment">// col &gt;= 0 为成功到达底部</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2022_02_24&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;1706-球会落何处&quot;&gt;&lt;a href=&quot;#1706-球会落何处&quot; class=&quot;headerlink&quot; title=&quot;1706. 球会落何处&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcod</summary>
      
    
    
    
    <category term="G_LeetCode" scheme="http://example.com/categories/G-LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
    <category term="矩阵" scheme="http://example.com/tags/%E7%9F%A9%E9%98%B5/"/>
    
    <category term="模拟" scheme="http://example.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
    <category term="Go" scheme="http://example.com/tags/Go/"/>
    
    <category term="C/C++" scheme="http://example.com/tags/C-C/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="深度优先搜索" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【攻击】DDoS攻击</title>
    <link href="http://example.com/F_%E6%94%BB%E9%98%B2/DDoS%E6%94%BB%E5%87%BB/"/>
    <id>http://example.com/F_%E6%94%BB%E9%98%B2/DDoS%E6%94%BB%E5%87%BB/</id>
    <published>2023-10-27T01:24:02.498Z</published>
    <updated>2023-10-27T01:24:02.499Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：DDoS() 技术鉴赏</p></blockquote><p>[toc]</p><h1 id="DDoS说明"><a href="#DDoS说明" class="headerlink" title="DDoS说明"></a>DDoS说明</h1><blockquote><p>DDoS(Distributed Denial of Service)即分布式拒绝服务攻击,是一种通过大量占用目标服务器资源的方式,使服务暂时中断或停止,无法对正常用户提供服务的攻击手段。</p></blockquote><p>DDoS攻击的主要特征包括:</p><blockquote><ul><li>分布式 - 利用大量分布在不同地点的攻击源进行攻击。</li><li>流量泛滥 - 通过发送大量流量淹没目标服务器的带宽或资源。常见的有UDP flood、ICMP flood等。</li><li>资源耗尽 - 占用目标服务器的关键系统资源,如连接数、线程数等。如SYN flood攻击。</li><li>攻击增强 - 通过各种方式增强攻击流量和效果。如IP地址欺骗。</li><li>多向量组合 - 综合使用各种类型的攻击手段,对目标发起多维攻击。</li></ul></blockquote><p>防御DDoS攻击的主要手段包括:</p><blockquote><ul><li><p>增加带宽 - 提高流量承载能力。</p></li><li><p>使用DDoS防护服务 - 由服务提供商过滤攻击流量。</p></li><li><p>限制连接和请求 - 加强对高流量源的访问控制。</p></li><li><p>丢弃无效流量 - 通过技术手段识别并丢弃攻击流量。</p></li><li><p>扩展关键系统资源 - 提高关键资源池容量。</p></li><li><p>服务降级 - 在被攻击时暂时停止非核心服务。</p></li><li><p>服务分散 - 通过CDN等方式分散服务,避免单点故障。</p></li><li><p>合理限速 - 对源IP访问频率和流量进行控制。</p><p>DDoS防御需要综合运用各种技术手段,从网络、服务和应用层进行防护,最大程度减轻攻击影响。</p></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：DDoS() 技术鉴赏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;DDoS说明&quot;&gt;&lt;a href=&quot;#DDoS说明&quot; class=&quot;headerlink&quot; title=&quot;DDoS说明&quot;&gt;&lt;/a&gt;DDoS说明</summary>
      
    
    
    
    <category term="F_攻防" scheme="http://example.com/categories/F-%E6%94%BB%E9%98%B2/"/>
    
    
    <category term="网络安全" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="DDoS" scheme="http://example.com/tags/DDoS/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令脚本</title>
    <link href="http://example.com/E_%E6%89%8B%E5%86%8C/%E8%84%9A%E6%9C%AC/linux%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3%E8%84%9A%E6%9C%AC%E6%95%B4%E7%90%86/"/>
    <id>http://example.com/E_%E6%89%8B%E5%86%8C/%E8%84%9A%E6%9C%AC/linux%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3%E8%84%9A%E6%9C%AC%E6%95%B4%E7%90%86/</id>
    <published>2023-10-27T01:24:02.497Z</published>
    <updated>2023-10-27T01:24:02.497Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="ll-awk-获取文件markdown链接"><a href="#ll-awk-获取文件markdown链接" class="headerlink" title="ll + awk 获取文件markdown链接"></a><code>ll + awk</code> 获取文件markdown链接</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll | awk <span class="string">&#x27;&#123;print &quot;[&quot;$9&quot;](./&quot;$9&quot;readme.md)&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;ll-awk-获取文件markdown链接&quot;&gt;&lt;a href=&quot;#ll-awk-获取文件markdown链接&quot; class=&quot;headerlink&quot; title=&quot;ll + awk 获取文件markdown链接&quot;&gt;&lt;/a&gt;&lt;code&gt;ll</summary>
      
    
    
    
    <category term="E_手册" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/"/>
    
    <category term="脚本" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/%E8%84%9A%E6%9C%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown手册</title>
    <link href="http://example.com/E_%E6%89%8B%E5%86%8C/%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97_Typora%E5%8F%8A%E7%94%A8%E6%B3%95/"/>
    <id>http://example.com/E_%E6%89%8B%E5%86%8C/%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97_Typora%E5%8F%8A%E7%94%A8%E6%B3%95/</id>
    <published>2023-10-27T01:24:02.495Z</published>
    <updated>2023-11-08T05:59:44.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown介绍"><a href="#Markdown介绍" class="headerlink" title="Markdown介绍"></a>Markdown介绍</h1><p><i class="fa fa-quote-left fa-3x fa-pull-left fa-border" aria-hidden="true"></i><code>Markdown</code>是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br> <code>Markdown</code>语法的目标是：成为一种适用于网络的书写语言「易读易写」。并且<code>Markdown</code>兼容HTML。你可以使用HTML语言编写Markdown，如果你要部署你的个人博客，那这更是你必不可少的技能之一！！！</p><p><strong>强烈推荐typora这款markdown软件，谁用谁说好！</strong></p><p><font color=green face="华文彩云" size=5px>一款优质的Markdown编辑器,不仅仅是Markdown</font></p><p>除此之外，如果你愿意花一点点时间来了解{ post_link }</p><hr><h1 id="简述Markdown常见用法"><a href="#简述Markdown常见用法" class="headerlink" title="简述Markdown常见用法"></a>简述Markdown常见用法</h1><p>在下面，我将简单介绍几个常用的<code>markdown</code>写法。希望大家写出更好的观看效果的文章。本文一些内容是属于Hexo下buttrerfly主题的内置标签。</p><hr><p>大家可以自己下载<a href="https://typora.io/">Typora</a>尝试一下<code>markdown</code>。</p><iframe src="https://typora.io/" cols="50%,50%" heigth=500px width=100% style="width:100%;height:500px;scroll-x:auto;"></iframe><p>为什么推荐<mark>Typora</mark>,我归纳了以下几点：</p><p><font style="font-size:20px;font-weight:900;color:green;font-family:'华文彩云'">一</font> “所见即所得”（即时渲染）</p><p><font style="font-size:20px;font-weight:900;color:green;font-family:'华文彩云'">二</font> 支持图床功能，配合PicGO可以实现图片的随用随传</p><div class="tag-plugin image"><div class="image-bg"><img src="https://tva3.sinaimg.cn/large/0072YHp3ly1gk9x8gmzdlj30v904ddg1.jpg" fancybox="true"/></div></div><p>如下所示，右击图片就可以上传到PicGo指定的图床。真的很好用！！！<img src="https://tva4.sinaimg.cn/large/0072YHp3ly1gk9x9cn79xj30v705jq3r.jpg" alt="Markdown" width="1123" data-width="1123" data-height="199"></p><p><font style="font-size:20px;font-weight:900;color:green;font-family:'华文彩云'">三</font> Typora还支持将<code>md文件</code>导出为多种格式的文件，目前支持以下文件:</p><img src="https://tva1.sinaimg.cn/large/0072YHp3ly1gk9x4ku3rqj304u09iq2u.jpg" alt="Markdown" width="174" data-width="174" data-height="342"><p><font style="font-size:20px;font-weight:900;color:green;font-family:'华文彩云'">四</font> 如果你还会一点CSS,那你甚至可以自定义界面样式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://tva4.sinaimg.cn/large/0072YHp3ly1gk9xloodttj306i0d1gls.jpg" fancybox="true"/></div></div><p><big>下面我将从以下这几个方面介绍一下Typora的一些使用方法：</big></p><ul><li><a href="#%E5%AD%97%E4%BD%93">字体</a>             <code> （&lt;small&gt;小&lt;/small&gt;     &lt;big&gt;大&lt;/big&gt;）</code></li><li><a href="#%E6%96%9C%E4%BD%93">斜体</a>                    <code> *斜体*</code></li><li><a href="#%E5%8A%A0%E7%B2%97">粗体</a>                   <code> **粗体**</code></li><li><a href="#%E6%96%9C%E4%BD%93%E5%8A%A0%E7%B2%97">斜体 + 粗体</a>          <code> ***斜体+粗体\***</code></li><li><a href="#%E5%88%A0%E9%99%A4">删除</a>                  <code>~~原价：99.9元~~</code></li><li><a href="#%E9%93%BE%E6%8E%A5">链接</a>               <code>[http://www.jianshu.com](https://www.jianshu.com)</code></li><li><a href="#%E5%88%86%E5%89%B2%E7%BA%BF">分割线</a></li><li><a href="#%E4%B8%8B%E5%88%92%E7%BA%BF">下划线</a></li><li><a href="#%E6%A0%87%E9%A2%98">标题</a></li><li><a href="#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8">任务列表</a></li><li><a href="#%E5%9B%BE%E7%89%87">图片</a></li><li><a href="#%E5%8C%BA%E5%9D%97%E5%BC%95%E7%94%A8">区块引用</a></li><li><a href="#%E8%A1%8C%E5%86%85%E4%BB%A3%E7%A0%81">行内代码</a>    `markdown`</li><li><a href="#%E5%88%97%E8%A1%A8">列表</a></li><li><a href="#%E8%A1%A8%E6%A0%BC">表格</a></li><li><a href="#%E8%84%9A%E6%B3%A8">脚注</a></li><li><a href="#%E9%AB%98%E4%BA%AE%3Cmark%3E">高亮</a></li></ul><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><!--tab 格式 --><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">small</span>&gt;</span></span>小号字体<span class="language-xml"><span class="tag">&lt;/<span class="name">small</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">big</span>&gt;</span></span>大号字体<span class="language-xml"><span class="tag">&lt;/<span class="name">big</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">rgb(25,26,35)</span> <span class="attr">face</span>=<span class="string">&quot;华文彩云&quot;</span> <span class="attr">size</span>=<span class="string">100px</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span>其他快捷方式<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>color</td><td>rgb();<br>#XXXXXX<br>colorname</td><td>规定文本的颜色，可以使用<code>style</code>代替</td></tr><tr><td>face</td><td>font_family</td><td>规定文本的字体</td></tr><tr><td>size</td><td>number</td><td>规定文本的大小</td></tr></tbody></table><p><small>小号字体</small></p><p><big>大号字体</big></p><div style="text-align:center;"><font color=rgb(25,26,35) face="华文彩云" size=100px style="text-align:center">其他快捷方式</font></div><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><p>西方斜体这一习惯看个人喜好吧。在文字前后各加一个<code>*</code>就👌了</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br></pre></td></tr></table></figure><p> 效果如下：<br><em>斜体</em></p><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><p>在文字前后各加两个<code>**</code>就👌了</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**加粗**</span></span><br></pre></td></tr></table></figure><p>效果如下：<br> <strong>加粗</strong></p><h2 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h2><p>斜体文字前后各加<code>*</code>，加粗文字前后各加<code>**</code>，斜体加粗在文字前后加<code>***</code>。没毛病…</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*斜体加粗*</span>**</span></span><br></pre></td></tr></table></figure><p>效果如下:<br> <em><strong>斜体加粗</strong></em></p><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~content~~</span><br></pre></td></tr></table></figure><p> 效果如下：<br><del>content</del></p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接应该是使用最多的场景了。他人有好的文字或者自己摘自哪里、都可以传送门直接过去。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">网站名</span>](<span class="link">地址</span>)</span><br><span class="line">地址</span><br></pre></td></tr></table></figure><p> 效果如下：<br><a href="mailto:example@163.com">example@163.com</a><br><a href="http://www.baidu.com/">http://www.baidu.com</a></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 <span class="strong">****</span></span><br><span class="line">2 <span class="strong">****</span>*</span><br><span class="line">3 ---</span><br><span class="line">以上三种写法都可以，效果一样，看个人心情使用。</span><br></pre></td></tr></table></figure><hr><hr><hr><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>内容<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><u>内容</u></p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line">···</span><br><span class="line"><span class="section">###### 六级标题 //最多支持六级标题</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><font size=10px style="font-weight:700">一级标题</font></p><p><font size=3px style="font-weight:600">六级标题</font></p><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><p>格式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet"> -</span> [] 待完成</span><br><span class="line"><span class="bullet">-</span> [X] 已完成</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li><input disabled="" type="checkbox"> 待完成</li><li><input checked="" disabled="" type="checkbox"> 已完成</li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>格式为<code>&#123;% image   %&#125;</code></p><p>其中图片名称可以为空。直接输入[]就可以。下面我的<code>url</code>输入的直接就文字url。所以肯定是空图片啦。Typora也可以直接把电脑本地的图片拖进来，自动生成图片链接。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image URL  %&#125;</span><br></pre></td></tr></table></figure><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><p>代码块，使用’`‘和<code>~</code>都可以</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">代码</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码</span><br></pre></td></tr></table></figure><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>程序猿引用代码，或者是文章中有一些关键性的名词啊，或者为了突出醒目。效果不错。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`printf(&quot;test&quot;)`</span></span><br></pre></td></tr></table></figure><p>效果如下：<br> <code>printf(&quot;test”);</code></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序项目1</span><br><span class="line"><span class="bullet">*</span> 无序项目2</span><br><span class="line"><span class="bullet">+</span> 无序项目3</span><br><span class="line"><span class="bullet">-</span> 无序二级1</span><br><span class="line"><span class="bullet">-</span> 无序二级2</span><br><span class="line"><span class="bullet">1.</span> 有序标题</span><br><span class="line"><span class="bullet">1.</span> 无序二级标题</span><br></pre></td></tr></table></figure><ul><li>无序项目1</li></ul><ul><li>无序项目2</li></ul><ul><li>无序项目3<ul><li>无序二级1</li><li>无序二级2</li></ul></li></ul><ol><li><p>有序标题</p><ol><li>无序二级标题</li></ol></li></ol><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p><kbd>ctrl+t</kbd>更方便</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 第一格表头                       | 第二格表头             |</span><br><span class="line">| -------------------------------- | ---------------------- |</span><br><span class="line">| 内容单元格 第一列第一格          | 内容单元格第二列第一格 |</span><br><span class="line">| 内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格 |</span><br></pre></td></tr></table></figure><p>效果如下:</p><table><thead><tr><th>第一格表头</th><th>第二格表头</th></tr></thead><tbody><tr><td>内容单元格 第一列第一格</td><td>内容单元格第二列第一格</td></tr><tr><td>内容单元格 第一列第二格 多加文字</td><td>内容单元格第二列第二格</td></tr></tbody></table><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p><code>H~2~o</code>效果预览–&gt;H<del>2</del>o</p><h2 id="高亮-lt-mark-gt"><a href="#高亮-lt-mark-gt" class="headerlink" title="高亮&lt;mark&gt;"></a>高亮&lt;mark&gt;</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">mark</span>&gt;</span></span>content<span class="language-xml"><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><code>&lt;mark&gt;</code>标签支持全局属性，因此可以通过自定义<code>style</code>修改mark的样式。</p><p>参考这个↓：</p><p><a href="http://codingdict.com/article/1679">HTML参考手册|编程字典</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">mark</span>&gt;</span></span>原始样式<span class="language-xml"><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">mark</span> <span class="attr">style</span>=<span class="string">&quot;font:&#x27;微软雅黑&#x27;;color:red;font-weight:900&quot;</span>&gt;</span></span>CSS样式<span class="language-xml"><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><mark>原始样式</mark><br><mark style="font:'微软雅黑';color:green;font-weight:900;background:lightgray">CSS样式</mark></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown介绍&quot;&gt;&lt;a href=&quot;#Markdown介绍&quot; class=&quot;headerlink&quot; title=&quot;Markdown介绍&quot;&gt;&lt;/a&gt;Markdown介绍&lt;/h1&gt;&lt;p&gt;&lt;i class=&quot;fa fa-quote-left fa-3x fa-pu</summary>
      
    
    
    
    <category term="E_手册" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/"/>
    
    
  </entry>
  
</feed>
