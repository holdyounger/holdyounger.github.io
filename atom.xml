<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oone</title>
  
  <subtitle>固执无罪，梦想无价 | Coding For Knowledge</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-18T07:00:48.958Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>mingming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VitualAlloc</title>
    <link href="http://example.com/OS/Windows/API/VirtualAlloc/"/>
    <id>http://example.com/OS/Windows/API/VirtualAlloc/</id>
    <published>2023-10-18T06:53:13.568Z</published>
    <updated>2023-10-18T07:00:48.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>作用：在指定进程的虚拟地址空间中保留、提交或更改内存区域的状态。该函数将它分配的内存初始化为零。</p><p>官方文档：<a href="https://learn.microsoft.com/zh-cn/windows/win32/api/memoryapi/nf-memoryapi-virtualallocex">VirtualAllocEx 函数 (memoryapi.h) - Win32 apps | Microsoft Learn</a></p><h3 id="函数原型："><a href="#函数原型：" class="headerlink" title="函数原型："></a>函数原型：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LPVOID <span class="title">VirtualAllocEx</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           HANDLE hProcess,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional] LPVOID lpAddress,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           SIZE_T dwSize,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           DWORD  flAllocationType,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           DWORD  flProtect</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><p><code>hProcess</code>: 进程的句柄</p></li><li><p><code>lpAddress</code>: 要分配内存块的起始地址的指针</p></li><li><p><code>dwSize</code>: 要分配内存块的大小</p></li><li><p><code>flAllocationType</code>：内存分配的类型</p></li></ul><table><thead><tr><th align="left">值</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><strong>MEM_COMMIT</strong>0x00001000</td><td align="left">从指定保留内存页的磁盘) 的总内存大小和分页文件 (分配内存费用。 函数还保证当调用方稍后最初访问内存时，内容将为零。 除非实际访问虚拟地址，否则不会分配实际物理页面。若要在一个步骤中保留和提交页面，请使用 &#96;MEM_COMMIT</td></tr><tr><td align="left"><strong>MEM_RESERVE</strong>0x00002000</td><td align="left">保留进程的虚拟地址空间范围，而无需在内存或磁盘上的分页文件中分配任何实际物理存储。使用 <strong>MEM_COMMIT</strong> 再次调用 <strong>VirtualAllocEx</strong> 来提交保留页。 若要在一个步骤中保留和提交页面，请使用 &#96;MEM_COMMIT</td></tr><tr><td align="left"><strong>MEM_RESET</strong>0x00080000</td><td align="left">指示 <em>lpAddress</em> 和 <em>dwSize</em> 指定的内存范围中的数据不再感兴趣。 不应从分页文件读取或写入页面。 但是，内存块稍后将再次使用，因此不应取消提交。 此值不能与任何其他值一起使用。使用此值并不能保证使用 <strong>MEM_RESET</strong> 操作的范围将包含零。 如果希望范围包含零，请取消提交内存，然后重新提交。使用 <strong>MEM_RESET</strong> 时， <strong>VirtualAllocEx</strong> 函数会忽略 <em>fProtect</em> 的值。 但是，仍必须将 <em>fProtect</em> 设置为有效的保护值，例如 <strong>PAGE_NOACCESS</strong>。如果使用 <strong>MEM_RESET</strong>并且内存范围映射到文件，<strong>VirtualAllocEx</strong> 将返回错误。 仅当共享视图映射到分页文件时，才可接受该视图。</td></tr><tr><td align="left"><strong>MEM_RESET_UNDO</strong>0x1000000</td><td align="left"><strong>应</strong> 仅对之前成功应用MEM_RESET的地址范围调用 <strong>MEM_RESET_UNDO</strong> 。 它指示调用方对 <em>lpAddress</em> 和 <em>dwSize</em> 指定的指定内存范围中的数据感兴趣，并尝试反转 <strong>MEM_RESET</strong>的影响。 如果该函数成功，则表示指定地址范围中的所有数据都保持不变。 如果函数失败，则至少将地址范围中的某些数据替换为零。此值不能与任何其他值一起使用。 如果在之前未<strong>MEM_RESET</strong>的地址范围上调用<strong>MEM_RESET_UNDO</strong>，则行为未定义。 指定 <strong>MEM_RESET</strong>时， <strong>VirtualAllocEx</strong> 函数将忽略 <em>flProtect</em> 的值。 但是，仍必须将 <em>flProtect</em> 设置为有效的保护值，例如 <strong>PAGE_NOACCESS</strong>。<strong>Windows Server 2008 R2、Windows 7、Windows Server 2008、Windows Vista、Windows Server 2003 和 Windows XP：</strong> 在 Windows 8 和 Windows Server 2012 之前，不支持 <strong>MEM_RESET_UNDO</strong> 标志。</td></tr></tbody></table><ul><li><code>flProtect</code>： 要分配的页区域的内存保护。一般使用 <code>PAGE_EXeCUTE_READWRITE</code>，详见<a href="https://learn.microsoft.com/zh-cn/windows/win32/Memory/memory-protection-constants">每次保护常量 (WinNT.h) - Win32 apps | Microsoft Learn</a></li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>如下所示为在目标进程的内存区域中从 0 开始申请大小为 4096 的内存块，权限为可读可写目标内存区域的权限为可读可写，<code>hTarget</code> 为目标进程句柄：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在目标进程申请内存</span></span><br><span class="line"><span class="type">void</span>* pLoadLibFuncParam = <span class="literal">nullptr</span>;</span><br><span class="line">pLoadLibFuncParam = <span class="built_in">VirtualAllocEx</span>(hTarget, <span class="number">0</span>, <span class="number">4096</span>, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);</span><br><span class="line"><span class="keyword">if</span> (pLoadLibFuncParam == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;alloc memery failed&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hTarget);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四个参数常用 <code>MEM_COMMIT | MEM_RESERVE</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;作用：在指定进程的虚拟地址空间中保留、提交或更改内存区域的状态。该函数将它分配的内存初始化为零。&lt;/p&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/OS/Windows/API/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="API" scheme="http://example.com/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>Windows下编译OpenSSl 1.1.1</title>
    <link href="http://example.com/OpenSource/OpenSSL/Windows%E4%B8%8B%E7%BC%96%E8%AF%91Openssl/"/>
    <id>http://example.com/OpenSource/OpenSSL/Windows%E4%B8%8B%E7%BC%96%E8%AF%91Openssl/</id>
    <published>2023-10-18T00:44:30.910Z</published>
    <updated>2023-10-18T00:44:30.910Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述： windows系统编译OpenSSL 1.1.1版本操作步骤</p></blockquote><span id="more"></span><p>[toc]</p><h2 id="0x01、编译环境说明"><a href="#0x01、编译环境说明" class="headerlink" title="0x01、编译环境说明"></a>0x01、编译环境说明</h2><ul><li>操作系统：win10</li><li>编译器：vs2017</li><li>OpenSSL: 1.1.1W</li></ul><h2 id="0x02、依赖工具说明"><a href="#0x02、依赖工具说明" class="headerlink" title="0x02、依赖工具说明"></a>0x02、依赖工具说明</h2><p>根据官方说明，OpenSSL编译除了Visual Studio 2019以外，为方便编译，需要安装Strawberry Perl和NASM，下载地址分别如下：</p><p>Strawberry Perl：<a href="http://strawberryperl.com/">Strawberry Perl for Windows</a></p><p>NASM：<a href="https://www.nasm.us/">NASM</a>，这是一个汇编器</p><p><strong>特别注意：</strong>Perl安装后会自动添加到环境变量中，而NASM不会，一定要在环境变量Path中添加NASM.exe所在的目录，否则可能会出现意想不到的错误。</p><h2 id="0x03、编译步骤"><a href="#0x03、编译步骤" class="headerlink" title="0x03、编译步骤"></a>0x03、编译步骤</h2><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>从Github中可以直接下载：<a href="https://github.com/openssl/openssl">GitHub - openssl&#x2F;openssl: TLS&#x2F;SSL and crypto library</a></p><p>或者在 OpenSSL 官方去下载 <a href="https://www.openssl.org/source/">OpenSSL</a></p><p>也可以参考官方文档进行编译：<a href="https://github.com/openssl/openssl/blob/master/NOTES-WINDOWS.md">openssl&#x2F;NOTES-WINDOWS.md at master · openssl&#x2F;openssl</a></p><h2 id="0x04、编译"><a href="#0x04、编译" class="headerlink" title="0x04、编译"></a>0x04、编译</h2><ol><li><p>使用管理员权限打开 vs2017 的开发人员命令提示符</p><div class="tag-plugin image"><div class="image-bg"><img src="../images/Windows下编译Openssl/image-20230928102731717.png"/></div></div></li><li><p>打开后切换到 openssl 解压目录：</p><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/images/Windows%E4%B8%8B%E7%BC%96%E8%AF%91Openssl/image-20231010133230852.png" alt="openssl解压目录" style="zoom:50%;" /></li><li><p>配置 Perl，参考官方文档配置</p><ul><li><p><code>perl Configure VC-WIN32</code> if you want 32-bit OpenSSL or</p></li><li><p><code>perl Configure VC-WIN64A</code> if you want 64-bit OpenSSL or</p></li><li><p><code>perl Configure VC-WIN64-ARM</code> if you want Windows on Arm (win-arm64) OpenSSL or</p></li><li><p><code>perl Configure VC-WIN64-CLANGASM-ARM</code> if you want Windows on Arm (win-arm64) OpenSSL with assembly support using clang-cl as assembler or</p></li><li><p><code>perl Configure VC-CLANG-WIN64-CLANGASM-ARM</code> if you want Windows on Arm (win-arm64) OpenSSL using clang-cl as both compiler and assembler or</p></li><li><p><code>perl Configure VC-WIN32-HYBRIDCRT</code> if you want 32-bit OpenSSL dependent on the Universal CRT or</p></li><li><p><code>perl Configure VC-WIN64A-HYBRIDCRT</code> if you want 64-bit OpenSSL dependent on the Universal CRT or</p></li><li><p><code>perl Configure</code> to let Configure figure out the platform</p></li></ul><p><strong>特别注意：</strong>–prefix选项指定的安装路径必须是绝对路径，若不指定，则默认会安装在<code>C:\Program Files (x86)\</code>下面，如果你不是用管理员权限执行，则会出现<code>*Permission Denied*</code> 错误，切记。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl Configure VC-WIN32 --prefix=E:\OpenSSL # 将其安装到 E:\OpenSSL 目录</span><br></pre></td></tr></table></figure></li><li><p><code>nmake</code></p></li><li><p><code>nmake test</code></p></li><li><p><code>namke install</code></p></li></ol><h2 id="0x05、使用"><a href="#0x05、使用" class="headerlink" title="0x05、使用"></a>0x05、使用</h2><p>使用时，在工程引入文件和库文件添加 Openssl 安装目录即可。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/_posts/images/Windows%E4%B8%8B%E7%BC%96%E8%AF%91Openssl/image-20231010133526175.png"/></div></div><h2 id="0x06、补充说明"><a href="#0x06、补充说明" class="headerlink" title="0x06、补充说明"></a>0x06、补充说明</h2><p>如果要编译 <code>/mt</code>、<code>/mtd</code>、<code>mdd</code> 等版本，则需要修改 makefile 文件。</p><p>使用 perl 命令后会生成 makefile 文件。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl Configure VC-WIN32 --prefix=D:\OpenSSL-<span class="number">3</span>.<span class="number">1</span>-Win32-mtd</span><br></pre></td></tr></table></figure><p>makefile 文件修改 <code>CNF_CFLAGS</code> 配置，如下所示：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CNF_ASFLAGS=-f win32</span><br><span class="line">CNF_CPPFLAGS=-D<span class="string">&quot;OPENSSL_SYS_WIN32&quot;</span> -D<span class="string">&quot;WIN32_LEAN_AND_MEAN&quot;</span> -D<span class="string">&quot;UNICODE&quot;</span> -D<span class="string">&quot;_UNICODE&quot;</span> -D<span class="string">&quot;_CRT_SECURE_NO_DEPRECATE&quot;</span> -D<span class="string">&quot;_WINSOCK_DEPRECATED_NO_WARNINGS&quot;</span> -D<span class="string">&quot;OPENSSL_USE_APPLINK&quot;</span> -D<span class="string">&quot;NDEBUG&quot;</span></span><br><span class="line">CNF_CFLAGS=/Gs0 /GF /Gy /MD <span class="comment"># 修改为你需要编译的模式 /MD /MDD /MT /MTD</span></span><br><span class="line">CNF_CXXFLAGS=</span><br><span class="line">CNF_LDFLAGS=</span><br><span class="line">CNF_EX_LIBS=ws2_32.lib gdi32.lib advapi32.lib crypt32.lib user32.lib</span><br></pre></td></tr></table></figure><p>在编译一次之后如果需要重新编译，则需要清除缓存，清楚缓存命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmake clean</span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>完整编译如下：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">perl Configure debug-VC-WIN64A no-asm --prefix=e:\openssl_x64\debug</span><br><span class="line">nmake</span><br><span class="line">nmake install</span><br><span class="line"># 把e:\openssl_x64\debug改名为e:\openssl_x64\debug_mdd</span><br><span class="line"># 完了之后把makefile文件以及configdata.pm文件里面的/MDD改为MTD</span><br><span class="line">nmake clean</span><br><span class="line">nmake</span><br><span class="line">nmake install</span><br><span class="line"># 把e:\openssl_x64\debug改名为e:\openssl_x64\debug_mtd</span><br><span class="line"> </span><br><span class="line">perl Configure VC-WIN64A no-asm --prefix=e:\openssl_x64\release</span><br><span class="line">nmake clean</span><br><span class="line">nmake</span><br><span class="line">nmake install</span><br><span class="line"># 把e:\openssl_x64\release改名为e:\openssl_x64\release_md</span><br><span class="line"># 完了之后把makefile文件以及configdata.pm文件里面的/<span class="built_in">MD</span>改为MT</span><br><span class="line">nmake clean</span><br><span class="line">nmake</span><br><span class="line">nmake install</span><br><span class="line"># 把e:\openssl_x64\release改名为e:\openssl_x64\release_mt</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述： windows系统编译OpenSSL 1.1.1版本操作步骤&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="OpenSource" scheme="http://example.com/categories/OpenSource/"/>
    
    <category term="OpenSSL" scheme="http://example.com/categories/OpenSource/OpenSSL/"/>
    
    
  </entry>
  
  <entry>
    <title>修改windows服务的启动等待时间</title>
    <link href="http://example.com/OS/Windows/%E6%9C%8D%E5%8A%A1/%E4%BF%AE%E6%94%B9Windows%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%8A%A8%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4/"/>
    <id>http://example.com/OS/Windows/%E6%9C%8D%E5%8A%A1/%E4%BF%AE%E6%94%B9Windows%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%8A%A8%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4/</id>
    <published>2023-10-18T00:44:30.175Z</published>
    <updated>2023-10-18T00:44:30.176Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：修改windows服务启动等待时间</p></blockquote><p>当调试Windows服务的启动代码时，服务经常因为长时间没有响应而被Windows关闭。</p><p>为了防止这种情况，我们需要设置注册表项：<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\ServicesPipeTimeout</code>。</p><p>Windows用这个值就是来决定Service启动超时的时间。</p><p>值类型为 <code>dword</code> 类型。</p><p>ps: 在Control下建立一个dword类型的字段，改名为：<code>ServicesPipeTimeout</code>，设置一个比较大的时间，90000 等。默认为30000。单位是毫秒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：修改windows服务启动等待时间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当调试Windows服务的启动代码时，服务经常因为长时间没有响应而被Windows关闭。&lt;/p&gt;
&lt;p&gt;为了防止这种情况，我们需要设置注册表项：&lt;code&gt;HKEY</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="服务" scheme="http://example.com/categories/OS/Windows/%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="服务" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="service" scheme="http://example.com/tags/service/"/>
    
  </entry>
  
  <entry>
    <title>Detours的使用</title>
    <link href="http://example.com/OS/Windows/Detours/"/>
    <id>http://example.com/OS/Windows/Detours/</id>
    <published>2023-10-18T00:44:30.172Z</published>
    <updated>2023-10-18T00:44:30.173Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Detours 的说明和简单使用</p></blockquote><h2 id="Detours"><a href="#Detours" class="headerlink" title="Detours"></a>Detours</h2><p>Detours 是微软提供的一套工具，主要用于win32 API的拦截</p><p>Github：<a href="https://github.com/microsoft/Detours">microsoft&#x2F;Detours: Detours is a software package for monitoring and instrumenting API calls on Windows. It is distributed in source code form.</a></p><p>仓库中有挺多示例程序可供参考。</p><h2 id="简单hook"><a href="#简单hook" class="headerlink" title="简单hook"></a>简单hook</h2><p>修改 <code>GetLocalTime</code> ，使其返回的分钟数为 <em>52</em></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="comment">//包含Detour的头文件和库文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;detours.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (lib,<span class="string">&quot;detours.lib&quot;</span>)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存函数原型（用指针存储要拦截的API）</span></span><br><span class="line"><span class="built_in">void</span> (*OldGetLocalTime)(LPSYSTEMTIME) = GetLocalTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">//拦截后要执行的操作（这里是将时间的分改为52）</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">NewGetLocalTime</span><span class="params">(LPSYSTEMTIME lpSystemTime)</span> </span>&#123;</span><br><span class="line"><span class="built_in">OldGetLocalTime</span>(lpSystemTime);</span><br><span class="line">lpSystemTime-&gt;wMinute = <span class="number">52</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下钩子函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">StartHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//开始事务</span></span><br><span class="line"><span class="built_in">DetourTransactionBegin</span>();</span><br><span class="line"><span class="comment">//更新线程信息</span></span><br><span class="line"><span class="built_in">DetourUpdateThread</span>(<span class="built_in">GetCurrentThread</span>());</span><br><span class="line"><span class="comment">//将拦截的函数附加到原函数的地址上</span></span><br><span class="line"><span class="built_in">DetourAttach</span>(&amp;(PVOID&amp;)OldGetLocalTime, NewGetLocalTime);</span><br><span class="line"><span class="comment">//结束事务</span></span><br><span class="line"><span class="built_in">DetourTransactionCommit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//撤钩子函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">EndHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//开始detours事务</span></span><br><span class="line"><span class="built_in">DetourTransactionBegin</span>();</span><br><span class="line"><span class="comment">//更新线程信息 </span></span><br><span class="line"><span class="built_in">DetourUpdateThread</span>(<span class="built_in">GetCurrentThread</span>());</span><br><span class="line"><span class="comment">//将拦截的函数从原函数的地址上解除</span></span><br><span class="line"><span class="built_in">DetourDetach</span>(&amp;(PVOID&amp;)OldGetLocalTime, NewGetLocalTime);</span><br><span class="line"><span class="comment">//结束detours事务</span></span><br><span class="line"><span class="built_in">DetourTransactionCommit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//获取本地时间</span></span><br><span class="line">SYSTEMTIME time, time2;</span><br><span class="line"><span class="built_in">GetLocalTime</span>(&amp;time);</span><br><span class="line">cout &lt;&lt; time.wHour &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; time.wMinute &lt;&lt; endl;</span><br><span class="line"><span class="comment">//下钩子</span></span><br><span class="line"><span class="built_in">StartHook</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//下钩子后再次获取本地时间</span></span><br><span class="line"><span class="built_in">GetLocalTime</span>(&amp;time2);</span><br><span class="line">cout &lt;&lt; time2.wHour &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; time2.wMinute &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//撤钩子</span></span><br><span class="line"><span class="built_in">EndHook</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Detours 的说明和简单使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Detours&quot;&gt;&lt;a href=&quot;#Detours&quot; class=&quot;headerlink&quot; title=&quot;Detours&quot;&gt;&lt;/a&gt;Detours&lt;/h2</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    
    <category term="hook" scheme="http://example.com/tags/hook/"/>
    
    <category term="Detours" scheme="http://example.com/tags/Detours/"/>
    
  </entry>
  
  <entry>
    <title>VirtualProtect 函数</title>
    <link href="http://example.com/OS/Windows/API/VirtualProtect/"/>
    <id>http://example.com/OS/Windows/API/VirtualProtect/</id>
    <published>2023-10-17T11:11:16.267Z</published>
    <updated>2023-10-18T09:44:25.320Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：VirtualProtect 函数的说明和使用</p></blockquote><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>VirtualProtect</code> 函数主要用于改变内存地址所在页的页属性。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">VirtualProtect</span><span class="params">(  </span></span></span><br><span class="line"><span class="params"><span class="function">  LPVOID lpAddress,  </span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD dwSize,  </span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD flNewProtect,  </span></span></span><br><span class="line"><span class="params"><span class="function">  PDWORD lpflOldProtect  </span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;  </span><br></pre></td></tr></table></figure><p>各参数的意义为：</p><p>lpAddress，要改变属性的内存起始地址。</p><p>dwSize，要改变属性的内存区域大小。</p><p>flNewProtect，内存新的属性类型，设置为PAGE_EXECUTE_READWRITE（0x40）时该内存页为可读可写可执行。</p><p>pflOldProtect，内存原始属性类型保存地址。</p><p>修改内存属性成功时函数返回非0，修改失败时返回0。</p><p>如果我们能够按照如下参数布置好栈帧的话就可以将shellcode所在内存区域设置为可执行模式。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>如下所示为 Hook 虚函数，并使其调用自己的函数。在改写调用之前使用了 <code>VirtualProtect</code> 函数对相关内存区域的属性进行了修改。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span>  <span class="type">void</span> <span class="title">Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;gyarmy.com\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">hookPrint</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hook_gyarmy\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Base* pb = <span class="keyword">new</span> <span class="built_in">Base</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//关键定位虚表的位置</span></span><br><span class="line">DWORD* pVtAddr = (DWORD*)*(DWORD*)pb;</span><br><span class="line"></span><br><span class="line">DWORD dwOldProtect = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">VirtualProtect</span>(pVtAddr, <span class="number">4</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class="line">*pVtAddr = (DWORD)hookPrint;</span><br><span class="line"></span><br><span class="line">pb-&gt;<span class="built_in">Print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> pb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：VirtualProtect 函数的说明和使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Vir</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/OS/Windows/API/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL caching_sha2_password 加密原理和连接过程</title>
    <link href="http://example.com/OpenSource/MySQL/MySQL%20%E5%8A%A0%E5%AF%86%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/OpenSource/MySQL/MySQL%20%E5%8A%A0%E5%AF%86%E5%8E%9F%E7%90%86/</id>
    <published>2023-10-17T06:56:35.443Z</published>
    <updated>2023-10-17T06:59:45.163Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：MySQL8 版本加密原理和连接过程说明</p><p>参考文章：<a href="https://cloud.tencent.com/developer/article/2247829">MYSQL caching_sha2_password 加密原理和连接过程(FULL)-腾讯云开发者社区-腾讯云</a></p></blockquote><h2 id="使用Python连接MySQL"><a href="#使用Python连接MySQL" class="headerlink" title="使用Python连接MySQL"></a>使用Python连接MySQL</h2><p>rsa加密使用的pymysql的. 因为不属于本文的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">#来自pymysql</span></span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization, hashes</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> padding</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">btoint</span>(<span class="params">bdata,t=<span class="string">&#x27;little&#x27;</span></span>):</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">int</span>.from_bytes(bdata,t)</span><br><span class="line"></span><br><span class="line"><span class="comment">#来自pymysql</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_lenenc_int</span>(<span class="params">i</span>):</span><br><span class="line"><span class="keyword">if</span> i &lt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">&quot;Encoding %d is less than 0 - no representation in LengthEncodedInteger&quot;</span> % i)</span><br><span class="line"><span class="keyword">elif</span> i &lt; <span class="number">0xFB</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">bytes</span>([i])</span><br><span class="line"><span class="keyword">elif</span> i &lt; (<span class="number">1</span> &lt;&lt; <span class="number">16</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="string">b&quot;\xfc&quot;</span> + struct.pack(<span class="string">&quot;&lt;H&quot;</span>, i)</span><br><span class="line"><span class="keyword">elif</span> i &lt; (<span class="number">1</span> &lt;&lt; <span class="number">24</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="string">b&quot;\xfd&quot;</span> + struct.pack(<span class="string">&quot;&lt;I&quot;</span>, i)[:<span class="number">3</span>]</span><br><span class="line"><span class="keyword">elif</span> i &lt; (<span class="number">1</span> &lt;&lt; <span class="number">64</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="string">b&quot;\xfe&quot;</span> + struct.pack(<span class="string">&quot;&lt;Q&quot;</span>, i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">&quot;Encoding %x is larger than %x - no representation in LengthEncodedInteger&quot;</span>% (i, (<span class="number">1</span> &lt;&lt; <span class="number">64</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#就是做个异或</span></span><br><span class="line"><span class="comment">#来自Pymysql</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_xor_password</span>(<span class="params">password, salt</span>):</span><br><span class="line">salt = <span class="built_in">bytearray</span>(salt[:<span class="number">20</span>])</span><br><span class="line">password = <span class="built_in">bytearray</span>(password)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(password)):</span><br><span class="line">password[i] ^= salt[i%<span class="built_in">len</span>(salt)]</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">bytes</span>(password)</span><br><span class="line"></span><br><span class="line"><span class="comment">#来自pymysql</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sha2_rsa_encrypt</span>(<span class="params">password, salt, public_key</span>):</span><br><span class="line">message = _xor_password(password + <span class="string">b&quot;\0&quot;</span>, salt)</span><br><span class="line">rsa_key = serialization.load_pem_public_key(public_key, default_backend())</span><br><span class="line"><span class="keyword">return</span> rsa_key.encrypt(</span><br><span class="line">message,</span><br><span class="line">padding.OAEP(</span><br><span class="line">mgf=padding.MGF1(algorithm=hashes.SHA1()),</span><br><span class="line">algorithm=hashes.SHA1(),</span><br><span class="line">label=<span class="literal">None</span>,</span><br><span class="line">),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">native_password</span>(<span class="params">password,salt</span>):</span><br><span class="line">stage1 = hashlib.sha1(password).digest()</span><br><span class="line">stage2 = hashlib.sha1(stage1).digest()</span><br><span class="line"></span><br><span class="line">rp = hashlib.sha1(salt)</span><br><span class="line">rp.update(stage2)</span><br><span class="line">result = <span class="built_in">bytearray</span>(rp.digest())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">result[x] ^= stage1[x]</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sha2_password</span>(<span class="params">password,salt</span>):</span><br><span class="line">stage1 = hashlib.sha256(password).digest()</span><br><span class="line">stage2 = hashlib.sha256(stage1).digest()</span><br><span class="line">stage3 = hashlib.sha256(stage2+salt).digest()</span><br><span class="line"></span><br><span class="line">result = <span class="built_in">bytearray</span>(stage3)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">result[x] ^= stage1[x]</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_handshake</span>(<span class="params">bdata</span>):</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">protocol_version = bdata[:<span class="number">1</span>]</span><br><span class="line">server_end = bdata.find(<span class="string">b&quot;\0&quot;</span>, i)</span><br><span class="line">i = server_end + <span class="number">1</span></span><br><span class="line">thread_id = btoint(bdata[i:i+<span class="number">4</span>])</span><br><span class="line">i += <span class="number">4</span></span><br><span class="line">salt = bdata[i:i+<span class="number">8</span>]</span><br><span class="line">i += <span class="number">9</span></span><br><span class="line">server_capabilities = btoint(bdata[i:i+<span class="number">2</span>])</span><br><span class="line">i += <span class="number">2</span></span><br><span class="line">server_charset = btoint(bdata[i:i+<span class="number">1</span>])</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line">server_status = btoint(bdata[i:i+<span class="number">2</span>])</span><br><span class="line">i += <span class="number">2</span></span><br><span class="line">server_capabilities |= btoint(bdata[i:i+<span class="number">2</span>]) &lt;&lt; <span class="number">16</span></span><br><span class="line">i += <span class="number">2</span></span><br><span class="line">salt_length = struct.unpack(<span class="string">&#x27;&lt;B&#x27;</span>,bdata[i:i+<span class="number">1</span>])[<span class="number">0</span>]</span><br><span class="line">salt_length = <span class="built_in">max</span>(<span class="number">13</span>,salt_length-<span class="number">8</span>)</span><br><span class="line">i += <span class="number">11</span></span><br><span class="line">salt += bdata[i:i+salt_length]</span><br><span class="line">i += salt_length</span><br><span class="line">server_plugname = bdata[i:]</span><br><span class="line"><span class="keyword">return</span> salt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">mysql</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">self.host = <span class="string">&#x27;192.168.101.21&#x27;</span></span><br><span class="line">self.port = <span class="number">3314</span></span><br><span class="line">self.user = <span class="string">&#x27;u1&#x27;</span></span><br><span class="line">self.password = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_pack</span>(<span class="params">self,</span>):</span><br><span class="line">pack_header = self.rf.read(<span class="number">4</span>)</span><br><span class="line">btrl, btrh, packet_seq = struct.unpack(<span class="string">&quot;&lt;HBB&quot;</span>, pack_header)</span><br><span class="line">pack_size = btrl + (btrh &lt;&lt; <span class="number">16</span>)</span><br><span class="line">self._next_seq_id = (self._next_seq_id + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">bdata = self.rf.read(pack_size)</span><br><span class="line"><span class="keyword">return</span> bdata</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_pack</span>(<span class="params">self,data</span>):</span><br><span class="line">bdata = struct.pack(<span class="string">&quot;&lt;I&quot;</span>, <span class="built_in">len</span>(data))[:<span class="number">3</span>] + <span class="built_in">bytes</span>([self._next_seq_id]) + data</span><br><span class="line">self.sock.sendall(bdata)</span><br><span class="line">self._next_seq_id = (self._next_seq_id + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handshake</span>(<span class="params">self,bdata</span>):</span><br><span class="line">i = <span class="number">0</span> <span class="comment">#已经读取的字节数, 解析binlog的时候也是这么用的.....</span></span><br><span class="line">protocol_version = bdata[:<span class="number">1</span>] <span class="comment">#只解析10</span></span><br><span class="line"></span><br><span class="line">server_end = bdata.find(<span class="string">b&quot;\0&quot;</span>, i)</span><br><span class="line">self.server_version = bdata[i:server_end]</span><br><span class="line">i = server_end + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">self.thread_id = btoint(bdata[i:i+<span class="number">4</span>])</span><br><span class="line">i += <span class="number">4</span></span><br><span class="line"></span><br><span class="line">self.salt = bdata[i:i+<span class="number">8</span>]</span><br><span class="line">i += <span class="number">9</span> <span class="comment">#还有1字节的filter, 没啥意义,就不保存了</span></span><br><span class="line"></span><br><span class="line">self.server_capabilities = btoint(bdata[i:i+<span class="number">2</span>])</span><br><span class="line">i += <span class="number">2</span></span><br><span class="line"></span><br><span class="line">self.server_charset = btoint(bdata[i:i+<span class="number">1</span>])</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">self.server_status = btoint(bdata[i:i+<span class="number">2</span>])</span><br><span class="line">i += <span class="number">2</span></span><br><span class="line"></span><br><span class="line">self.server_capabilities |= btoint(bdata[i:i+<span class="number">2</span>]) &lt;&lt; <span class="number">16</span> <span class="comment">#往左移16位 为啥不把capability_flags_1和capability_flags_2和一起呢</span></span><br><span class="line">i += <span class="number">2</span></span><br><span class="line"></span><br><span class="line">salt_length = struct.unpack(<span class="string">&#x27;&lt;B&#x27;</span>,bdata[i:i+<span class="number">1</span>])[<span class="number">0</span>] <span class="comment">#懒得去判断capabilities &amp; CLIENT_PLUGIN_AUTH了</span></span><br><span class="line">salt_length = <span class="built_in">max</span>(<span class="number">13</span>,salt_length-<span class="number">8</span>) <span class="comment">#前面已经有8字节了</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">i += <span class="number">10</span> <span class="comment">#reserved</span></span><br><span class="line"></span><br><span class="line">self.salt += bdata[i:i+salt_length]</span><br><span class="line">i += salt_length</span><br><span class="line"></span><br><span class="line">self.server_plugname = bdata[i:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">HandshakeResponse41</span>(<span class="params">self,</span>):</span><br><span class="line"><span class="comment">#client_flag = 3842565 #不含DBname   </span></span><br><span class="line">client_flag = <span class="number">33531525</span><span class="comment">#不含DBname   </span></span><br><span class="line"><span class="comment">#client_flag |= 1 &lt;&lt; 3</span></span><br><span class="line"></span><br><span class="line">charset_id = <span class="number">45</span> <span class="comment">#45:utf8mb4  33:utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#bdata = client_flag.to_bytes(4,&#x27;little&#x27;) #其实应该最后在加, 毕竟还要判断很多参数, 可能还需要修改, 但是懒</span></span><br><span class="line">bdata = struct.pack(<span class="string">&#x27;&lt;iIB23s&#x27;</span>,client_flag,<span class="number">2</span>**<span class="number">24</span>-<span class="number">1</span>,charset_id,<span class="string">b&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">bdata += self.user.encode() + <span class="string">b&#x27;\0&#x27;</span></span><br><span class="line"></span><br><span class="line">auth_password = native_password(self.password.encode(), self.salt[:<span class="number">20</span>])</span><br><span class="line">auth_response = _lenenc_int(<span class="built_in">len</span>(auth_password)) + auth_password </span><br><span class="line">bdata += auth_response</span><br><span class="line"></span><br><span class="line">bdata += <span class="string">b&quot;mysql_native_password&quot;</span> + <span class="string">b&#x27;\0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#本文有设置连接属性, 主要是为了方便观察</span></span><br><span class="line">attr = &#123;<span class="string">&#x27;_client_name&#x27;</span>:<span class="string">&#x27;ddcw_for_pymysql&#x27;</span>, <span class="string">&#x27;_pid&#x27;</span>:<span class="built_in">str</span>(os.getpid()), <span class="string">&quot;_client_version&quot;</span>:<span class="string">&#x27;0.0.1&#x27;</span>,&#125;</span><br><span class="line"><span class="comment">#key长度+k+v长度+v</span></span><br><span class="line">connect_attrs = <span class="string">b&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> attr.items():</span><br><span class="line">k = k.encode()</span><br><span class="line">connect_attrs += _lenenc_int(<span class="built_in">len</span>(k)) + k</span><br><span class="line">v = v.encode()</span><br><span class="line">connect_attrs += _lenenc_int(<span class="built_in">len</span>(v)) + v</span><br><span class="line">bdata += _lenenc_int(<span class="built_in">len</span>(connect_attrs)) + connect_attrs</span><br><span class="line">self.write_pack(bdata)</span><br><span class="line"></span><br><span class="line"><span class="comment">#0xFE 交换认证 https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_connection_phase_packets_protocol_old_auth_switch_request.html</span></span><br><span class="line"><span class="comment">#0x01 额外认证</span></span><br><span class="line"><span class="comment">#0x00 OK</span></span><br><span class="line"><span class="comment">#偷懒, 懒得去判断client_flag了</span></span><br><span class="line">auth_pack = self.read_pack() </span><br><span class="line"><span class="keyword">if</span> auth_pack[:<span class="number">1</span>] == <span class="string">b&#x27;\0&#x27;</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;OK&#x27;</span>,auth_pack)</span><br><span class="line"><span class="keyword">elif</span> auth_pack[:<span class="number">1</span>] == <span class="string">b&#x27;\xfe&#x27;</span>:</span><br><span class="line"><span class="comment">#switch request</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hava switch request&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> auth_pack.find(<span class="string">b&#x27;caching_sha2_password&#x27;</span>) &lt; <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;仅测试caching_sha2_password, 但当前是:&#x27;</span>,auth_pack[<span class="number">1</span>:auth_pack.find(<span class="string">b&#x27;\x00&#x27;</span>)])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">scrambled = sha2_password(self.password.encode(),auth_pack[auth_pack.find(<span class="string">b&#x27;\x00&#x27;</span>)+<span class="number">1</span>:]) <span class="comment">#salt是剩下的部分</span></span><br><span class="line">self.write_pack(scrambled)</span><br><span class="line">auth_pack = self.read_pack()</span><br><span class="line"><span class="built_in">print</span>(auth_pack)</span><br><span class="line">self.caching_sha2_password_auth(auth_pack)</span><br><span class="line"><span class="keyword">elif</span> auth_pack[:<span class="number">1</span>] == <span class="string">b&#x27;\x01&#x27;</span>:</span><br><span class="line">self.caching_sha2_password_auth(auth_pack)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;FAILED&#x27;</span>,auth_pack)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">caching_sha2_password_auth</span>(<span class="params">self,auth_pack</span>):</span><br><span class="line"><span class="keyword">if</span> auth_pack[<span class="number">1</span>:<span class="number">2</span>] == <span class="string">b&#x27;\x03&#x27;</span>: <span class="comment">#fast</span></span><br><span class="line">bdata = self.read_pack() <span class="comment">#ok pack</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;fast auth success.&#x27;</span>,bdata)</span><br><span class="line"><span class="keyword">elif</span> auth_pack[<span class="number">1</span>:<span class="number">2</span>] == <span class="string">b&#x27;\x04&#x27;</span>: <span class="comment">#full</span></span><br><span class="line"><span class="comment">#如果是SSL/socket/shard_mem就直接发送密码(不需要加密了) TODO</span></span><br><span class="line">self.write_pack(<span class="string">b&#x27;\x02&#x27;</span>) <span class="comment">#要公钥</span></span><br><span class="line">bdata = self.read_pack() <span class="comment">#server发来的公钥</span></span><br><span class="line">pubk = bdata[<span class="number">1</span>:] <span class="comment">#第一字节是extra_auth 而且肯定是 0x01</span></span><br><span class="line"><span class="comment">#print(&#x27;bdata&#x27;,bdata)</span></span><br><span class="line">self.pubk = pubk</span><br><span class="line">password = sha2_rsa_encrypt(self.password.encode(), self.salt, pubk)</span><br><span class="line">self.write_pack(password)</span><br><span class="line">authpack = self.read_pack() <span class="comment">#看看是否成功</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;full auth&#x27;</span>,authpack)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;???&#x27;</span>,auth_pack)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self,sql</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;不考虑SQL超过16MB情况&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># payload_length:3  sequence_id:1 payload:N</span></span><br><span class="line"><span class="comment"># payload: com_query(0x03):1 sql:n</span></span><br><span class="line">bdata = struct.pack(<span class="string">&#x27;&lt;IB&#x27;</span>,<span class="built_in">len</span>(sql)+<span class="number">1</span>,<span class="number">0x03</span>) <span class="comment">#I:每个com_query的seq_id都从0开始,第4字节固定为0, 所以直接用I, +1:com_query占用1字节,  0x03:com_query</span></span><br><span class="line">bdata += sql.encode()</span><br><span class="line">self.sock.sendall(bdata)</span><br><span class="line">self._next_seq_id = <span class="number">1</span> <span class="comment">#下一个包seq_id = 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect</span>(<span class="params">self</span>):</span><br><span class="line">self._next_seq_id = <span class="number">0</span></span><br><span class="line">sock = socket.create_connection((self.host, self.port))</span><br><span class="line">sock.settimeout(<span class="literal">None</span>)</span><br><span class="line">self.sock = sock</span><br><span class="line">self.rf = sock.makefile(<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">bdata = self.read_pack()</span><br><span class="line">self.handshake(bdata)</span><br><span class="line"></span><br><span class="line">self.HandshakeResponse41()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：MySQL8 版本加密原理和连接过程说明&lt;/p&gt;
&lt;p&gt;参考文章：&lt;a href=&quot;https://cloud.tencent.com/developer/article/2247829&quot;&gt;MYSQL caching_sha2_passwor</summary>
      
    
    
    
    <category term="OpenSource" scheme="http://example.com/categories/OpenSource/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/OpenSource/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>RT_MAINFEST 文件</title>
    <link href="http://example.com/OS/Windows/RT_MAINFEST/"/>
    <id>http://example.com/OS/Windows/RT_MAINFEST/</id>
    <published>2023-10-17T03:46:33.885Z</published>
    <updated>2023-10-18T09:37:35.697Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述: MAINFEST文件说明及相关使用</p></blockquote><h2 id="0x01、可以指定加载的dll"><a href="#0x01、可以指定加载的dll" class="headerlink" title="0x01、可以指定加载的dll"></a>0x01、可以指定加载的dll</h2><p>可以通过修改 MAINFEST 文件内容来修改 dll 的加载位置。</p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p>如下所示分别指定了 <code>vcruntime140d.dll</code> 、 <code>ucrtbased.dll</code> 、 <code>libcrypto-3.dll</code> 、<code>libssl-3.dll</code> 四个dll的加载路径</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27; standalone=&#x27;yes&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">&#x27;urn:schemas-microsoft-com:asm.v1&#x27;</span> <span class="attr">manifestVersion</span>=<span class="string">&#x27;1.0&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">file</span> <span class="attr">name</span>=<span class="string">&quot;vcruntime140d.dll&quot;</span> <span class="attr">loadFrom</span>=<span class="string">&quot;C:\Users\holdy\Documents\TestMySQL\temp1\vcruntime140d.dll&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">file</span> <span class="attr">name</span>=<span class="string">&quot;ucrtbased.dll&quot;</span> <span class="attr">loadFrom</span>=<span class="string">&quot;C:\Users\holdy\Documents\TestMySQL\temp1\ucrtbased.dll&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">file</span> <span class="attr">name</span>=<span class="string">&quot;libcrypto-3.dll&quot;</span> <span class="attr">loadFrom</span>=<span class="string">&quot;D:\Documents\A_Source\WindowsTec\Debug\mysqlcppconn8-static-debug-openssl3-mtd\libcrypto-3.dll&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">file</span> <span class="attr">name</span>=<span class="string">&quot;libssl-3.dll&quot;</span> <span class="attr">loadFrom</span>=<span class="string">&quot;D:\Documents\A_Source\WindowsTec\Debug\mysqlcppconn8-static-debug-openssl3-mtd\libcrypto-3.dll&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0x02、自动提升Vista、Win7上进程的权限–RT-MANIFEST"><a href="#0x02、自动提升Vista、Win7上进程的权限–RT-MANIFEST" class="headerlink" title="0x02、自动提升Vista、Win7上进程的权限–RT_MANIFEST"></a>0x02、自动提升Vista、Win7上进程的权限–RT_MANIFEST</h2><p>很多时候自己开发的应用程序需要以更高的用户权限来运行，特别是在Vista、Win7下面。</p><p>如何使得自己编写的应用程序在运行时也如同下面的方式一样，提示权限提升。</p><p>方法：</p><ol><li><p>按照通常方式，开发VC程序，编译、生成.exe文件；</p></li><li><p>在Debug或Release文件夹下面，新建一个“程序名+.exe+.manifest”的文件。若你生成的应用程序名称叫MyApp.exe，在MyApp.exe所在的目录下新建一个名称为MyApp.exe.manifest的文件，将该文件以文本方式打开（如notepad）</p></li><li><p>将下面的此段XML，粘贴到刚刚新建的MyApp.exe.manifest文件中，并保存。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27; standalone=&#x27;yes&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">&#x27;urn:schemas-microsoft-com:asm.v1&#x27;</span> <span class="attr">manifestVersion</span>=<span class="string">&#x27;1.0&#x27;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">trustInfo</span> <span class="attr">xmlns</span>=<span class="string">&quot;urn:schemas-microsoft-com:asm.v3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">security</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">requestedPrivileges</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">requestedExecutionLevel</span> <span class="attr">level</span>=<span class="string">&#x27;requireAdministrator&#x27;</span> <span class="attr">uiAccess</span>=<span class="string">&#x27;false&#x27;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">requestedPrivileges</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">security</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">trustInfo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure><p>requestedExecutionLevel元素中的“level”属性可以取下面的值（比较简单的英文，相信大家都能看懂）。</p></li><li><p>运行.Net Visual Studio命令提示符（注意是.Net下类似cmd.exe的工具，不是Windows附件里面的cmd.exe）。如果你安装了Visual Studio .Net 2003 或 2005 、2008、2010等开发工具，在开始菜单-&gt;Visual Studio 2003或2005-&gt;Visual Studio工具下面可以找到该工具。</p></li><li><p>运行.Net Visual Studio命令提示符之后，将当前目录更改到你应用程序（MyApp.exe）所在的目录下面，之后输入如下命令：</p></li></ol><p>mt.exe -manifest “MyApp.exe.manifest” -outputresource:”MyApp.exe”;#1 </p><p>（此处的MyApp要替换成你自己应用程序的名字）</p><ol start="6"><li>之后再到你应用程序的目录下面就会看到，现在应用程序的图标比原来多了一个安全盾。<br>运行程序就会出现提示。</li></ol><p>注：如果您开发的是动态链接库DLL。则在.Net Visual Studio命令提示符中输入的命令应该为：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mt.exe -manifest &quot;MyApp.dll.manifest&quot; -outputresource:&quot;MyApp.dll&quot;;#<span class="number">2</span> 。</span><br></pre></td></tr></table></figure><p>最后，读者不妨自己测试一下本文所讲的方法，在Vista或Win7系统下，编写一个修改系统时间的简单应用，在不采用此方法之前，看能否修改成功。如果不能试试本文讲述的方法，然后运行程序再看看能否修改成功。</p><p>修改系统时间的代码如下：</p><p> COleDateTime tm;<br> SYSTEMTIME st;<br> tm.ParseDateTime(_T(“2000-10-10 17:00:00”));<br> tm.GetAsSystemTime(st);<br> SetLocalTime(&amp;st);</p><h3 id="在Vista下提升应用程序的执行权限"><a href="#在Vista下提升应用程序的执行权限" class="headerlink" title="在Vista下提升应用程序的执行权限"></a>在Vista下提升应用程序的执行权限</h3><p>在 vista系统应用程序执行时默认不会使用超级用户权限,这会使一些创建文件和目录的IO操作失败,出现访问错误.这种现象是因为Vista的UAC特性 引起的.</p><p>要避免这种情况,可以强制用户在运行应用程序时以超级用户权限执行程序.具体做法:</p><ol><li><p>编辑manifest文 件. 在manifest文件中配置好应用程序执行时需要的参数和执行环境.下面是一个实际例子:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> standalone=<span class="string">&quot;yes&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">&quot;urn:schemas-microsoft-com:asm.v1&quot;</span> <span class="attr">manifestVersion</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">assemblyIdentity</span> <span class="attr">version</span>=<span class="string">&quot;1.0.0.0&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">processorArchitecture</span>=<span class="string">&quot;X86&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">name</span>=<span class="string">&quot;IsUserAdmin&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">type</span>=<span class="string">&quot;win32&quot;</span>/&gt;</span> </span><br><span class="line">     </span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>Description of your application<span class="tag">&lt;/<span class="name">description</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!-- Identify the application security requirements. --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">trustInfo</span> <span class="attr">xmlns</span>=<span class="string">&quot;urn:schemas-microsoft-com:asm.v2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">security</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">requestedPrivileges</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">requestedExecutionLevel</span></span></span><br><span class="line"><span class="tag">          <span class="attr">level</span>=<span class="string">&quot;requireAdministrator&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">uiAccess</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">requestedPrivileges</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">security</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">trustInfo</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编辑应用程序的资源文件(rc后缀的文件),在其中加入下面两行代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MANIFEST_RESOURCE_ID 1MANIFEST_RESOURCE_ID RT_MANIFEST <span class="string">&quot;&#123;Application.exe&#125;.manifest&quot;</span></span></span><br></pre></td></tr></table></figure><p>其中 Application.exe 替换成要编译生成的可执行文件名.</p></li><li><p>编译链接程序,生成可执行应用程序.</p></li><li><p>运行 mt.exe命令,把manifest文件和生成的可执行程序链接起来.把manifest内容写入可执行文件.<br>命令行为:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mt.exe –manifest temp.manifest –outputresource:YourApp.exe;#<span class="number">1</span></span><br></pre></td></tr></table></figure><p>到这一步,生成的可执行文件就可以在vista下运行时弹出UAC确认框,让用户确认以超级用户权限执行应用程序.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述: MAINFEST文件说明及相关使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x01、可以指定加载的dll&quot;&gt;&lt;a href=&quot;#0x01、可以指定加载的dll&quot; class=&quot;headerlink&quot; title=&quot;0x01、可</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    
    <category term="dll" scheme="http://example.com/tags/dll/"/>
    
    <category term="exe" scheme="http://example.com/tags/exe/"/>
    
  </entry>
  
  <entry>
    <title>windows 创建服务</title>
    <link href="http://example.com/OS/Windows/%E6%9C%8D%E5%8A%A1/Windows%E6%9C%8D%E5%8A%A1%E8%BF%9B%E7%A8%8B/"/>
    <id>http://example.com/OS/Windows/%E6%9C%8D%E5%8A%A1/Windows%E6%9C%8D%E5%8A%A1%E8%BF%9B%E7%A8%8B/</id>
    <published>2023-10-16T05:29:28.759Z</published>
    <updated>2023-10-16T05:31:48.537Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：windows操作系统创建服务实例</p></blockquote><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>调用的相关系统API：</p><ul><li>CreateService</li><li>StartServiceCtrlDispatcher</li><li>RegisterServiceCtrlHandlerEx</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>使用时进需要修改 MyServiceName 即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;strsafe.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MyServiceName TEXT(<span class="string">&quot;MyService&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span>                    g_bPausedFlag = <span class="literal">false</span>;</span><br><span class="line">HANDLE                  g_hSvcStopEvent = <span class="literal">NULL</span>;</span><br><span class="line">SERVICE_STATUS          g_MyServiceStatus;</span><br><span class="line">SERVICE_STATUS_HANDLE   g_hMyServiceStatusHandle;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> __stdcall <span class="title">MyServiceMain</span><span class="params">(DWORD  dwArgc, LPTSTR *lpszArgv)</span></span>;</span><br><span class="line"><span class="function">DWORD __stdcall <span class="title">MyServiceHandlerEx</span><span class="params">(DWORD  dwControl, DWORD  dwEventType, LPVOID lpEventData, LPVOID lpContext)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReportServiceStatus</span><span class="params">(DWORD dwCurrentState, DWORD dwWin32ExitCode, DWORD dwWaitHint)</span></span>;</span><br><span class="line"><span class="function">DWORD <span class="title">MyServiceInitialization</span><span class="params">(DWORD  dwArgc, LPTSTR *lpszArgv)</span></span>;</span><br><span class="line"><span class="function">DWORD <span class="title">MyServiceWorker</span><span class="params">(DWORD dwArgc, LPTSTR *lpszArgv)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> _tmain(<span class="type">int</span> argc, TCHAR* argv[])</span><br><span class="line">&#123;</span><br><span class="line">    SERVICE_TABLE_ENTRY dispatchTable[] = &#123; </span><br><span class="line">        &#123;MyServiceName, (LPSERVICE_MAIN_FUNCTION)MyServiceMain&#125;,</span><br><span class="line">        &#123;<span class="literal">NULL</span>, <span class="literal">NULL</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">StartServiceCtrlDispatcher</span>(dispatchTable))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// cleaning worker</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> __stdcall <span class="title">MyServiceMain</span><span class="params">(DWORD  dwArgc, LPTSTR *lpszArgv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    g_hSvcStopEvent = <span class="built_in">CreateEvent</span>(<span class="literal">NULL</span>, TRUE, FALSE, <span class="literal">NULL</span>);</span><br><span class="line">    g_hMyServiceStatusHandle = <span class="built_in">RegisterServiceCtrlHandlerEx</span>(MyServiceName, (LPHANDLER_FUNCTION_EX)MyServiceHandlerEx, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (g_hMyServiceStatusHandle == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    g_MyServiceStatus.dwServiceType = SERVICE_WIN32_OWN_PROCESS;</span><br><span class="line">    g_MyServiceStatus.dwServiceSpecificExitCode = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">ReportServiceStatus</span>(SERVICE_START_PENDING, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    DWORD dwRet = <span class="built_in">MyServiceInitialization</span>(dwArgc, lpszArgv);</span><br><span class="line">    <span class="keyword">if</span> (dwRet != NO_ERROR)</span><br><span class="line">        <span class="built_in">ReportServiceStatus</span>(SERVICE_STOPPED, dwRet, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">ReportServiceStatus</span>(SERVICE_RUNNING, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">MyServiceWorker</span>(dwArgc, lpszArgv);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(g_hSvcStopEvent, INFINITE);</span><br><span class="line">        <span class="built_in">ReportServiceStatus</span>(SERVICE_STOPPED, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD __stdcall <span class="title">MyServiceHandlerEx</span><span class="params">(DWORD  dwControl, DWORD  dwEventType, LPVOID lpEventData, LPVOID lpContext)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (dwControl)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> SERVICE_CONTROL_SHUTDOWN:</span><br><span class="line">    <span class="keyword">case</span> SERVICE_CONTROL_STOP:</span><br><span class="line">        <span class="built_in">ReportServiceStatus</span>(SERVICE_STOP_PENDING, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">SetEvent</span>(g_hSvcStopEvent);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> SERVICE_CONTROL_PAUSE:</span><br><span class="line">        <span class="built_in">ReportServiceStatus</span>(SERVICE_PAUSE_PENDING, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        g_bPausedFlag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> SERVICE_CONTROL_CONTINUE:</span><br><span class="line">        <span class="built_in">ReportServiceStatus</span>(SERVICE_CONTINUE_PENDING, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        g_bPausedFlag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> SERVICE_CONTROL_INTERROGATE:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行一些初始化过程</span></span><br><span class="line"><span class="function">DWORD <span class="title">MyServiceInitialization</span><span class="params">(DWORD  dwArgc, LPTSTR *lpszArgv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> NO_ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务工作执行函数</span></span><br><span class="line"><span class="function">DWORD <span class="title">MyServiceWorker</span><span class="params">(DWORD dwArgc, LPTSTR *lpszArgv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向服务控制管理器报告状态信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReportServiceStatus</span><span class="params">(DWORD dwCurrentState, DWORD dwWin32ExitCode, DWORD dwWaitHint)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> DWORD dwCheckPoint = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    g_MyServiceStatus.dwCurrentState = dwCurrentState;</span><br><span class="line">    g_MyServiceStatus.dwWin32ExitCode = dwWin32ExitCode;</span><br><span class="line">    g_MyServiceStatus.dwWaitHint = dwWaitHint;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dwCurrentState == SERVICE_START_PENDING)</span><br><span class="line">        g_MyServiceStatus.dwControlsAccepted = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        g_MyServiceStatus.dwControlsAccepted = SERVICE_ACCEPT_STOP | SERVICE_ACCEPT_PAUSE_CONTINUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dwCurrentState == SERVICE_RUNNING) ||</span><br><span class="line">        (dwCurrentState == SERVICE_STOPPED))</span><br><span class="line">        g_MyServiceStatus.dwCheckPoint = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        g_MyServiceStatus.dwCheckPoint = dwCheckPoint++;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">SetServiceStatus</span>(g_hMyServiceStatusHandle, &amp;g_MyServiceStatus);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：windows操作系统创建服务实例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;调用的相关系统API：&lt;/p&gt;</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="服务" scheme="http://example.com/categories/OS/Windows/%E6%9C%8D%E5%8A%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows下MySQL Connector/C++ 8.1编译说明</title>
    <link href="http://example.com/OpenSource/MySQL/mysql-connnector-8.0%E7%BC%96%E8%AF%91%E8%AF%B4%E6%98%8E/"/>
    <id>http://example.com/OpenSource/MySQL/mysql-connnector-8.0%E7%BC%96%E8%AF%91%E8%AF%B4%E6%98%8E/</id>
    <published>2023-10-14T04:57:51.604Z</published>
    <updated>2023-10-18T09:47:00.843Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：本文主要记录 MySQL Connector&#x2F;C++ 8.1 静态库的编译方式，因项目工程问题，需要编译 <code>/MT</code> 模式的静态库文件。</p><p>官方文档：<a href="https://mysql.net.cn/doc/connector-cpp/8.0/en/connector-cpp-installation-source-cpp.html">4.3 从源安装连接器&#x2F;C++_MySQL 连接器&#x2F;C++ 8.0 开发人员指南</a></p></blockquote><p>本次编译目标产物：</p><ul><li><input checked="" disabled="" type="checkbox"> Debug 模式下 &#x2F;MTd 编译 静态编译</li><li><input disabled="" type="checkbox"> Release 模式下 &#x2F;MT 编译 静态编译</li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="需求及官方文件说明"><a href="#需求及官方文件说明" class="headerlink" title="需求及官方文件说明"></a>需求及官方文件说明</h3><p>由于 MySQL官方并没有提供 &#x2F;MT 模式的lib文件，因此编译所需要的静态库都需要从源码编译，首先说明一下官方已编译好的文件：</p><p>在 <a href="https://dev.mysql.com/doc/connector-cpp/8.1/en/connector-cpp-apps-windows-notes.html">MySQL :: MySQL Connector&#x2F;C++ Developer Guide :: 5.2.1 Windows Notes</a> 这里可以看到官方提供了 <code>/MD</code> 模式下的 Debug 和 Release 静态库文件，下载为：<a href="https://downloads.mysql.com/archives/c-cpp/">MySQL :: Download MySQL Connector&#x2F;C++ (Archived Versions)</a>。关于下载后安装包的文件这我补充一下：</p><ul><li>mysql-connector-c++-8.0.33-win32-debug：Debug 模式下 <code>/MD</code> 的编译产物</li><li>mysql-connector-c++-8.0.33-win32：Release 模式下 <code>/MD</code> 的编译产物</li></ul><p>两个下载包的文件基本一致，主要是以下四个文件：</p><ul><li>mysqlcppconn.lib: 使用 &#x3D;&#x3D;JDBC+openssl1.1.1&#x3D;&#x3D; 版本编译</li><li>mysqlcppconn8.lib：使用 &#x3D;&#x3D;X DEVAPI+openssl1.1.1&#x3D;&#x3D; 编译产物</li><li>mysqlcppconn8-static.lib：使用 &#x3D;&#x3D;X DEVAPI+OpenSSL3.3.1&#x3D;&#x3D; 编译产物</li><li>mysqlcppconn-static.lib：使用 &#x3D;&#x3D;JDBC+OpenSSL3.3.31&#x3D;&#x3D; 编译产物</li></ul><p>使用 &#x3D;&#x3D;JDBC&#x3D;&#x3D; 和 &#x3D;&#x3D;X DEVAPI&#x3D;&#x3D; 的包需要使用不同的方式去连接 MySQL，具体代码如下所示：</p><h3 id="使用-JDBC-连接"><a href="#使用-JDBC-连接" class="headerlink" title="使用 JDBC 连接"></a>使用 JDBC 连接</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mysqlx/xdevapi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> mysqlx;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;mysqlcppconn8-static-debug-openssl3-mdd.lib&quot;</span>)    <span class="comment">// 特殊命名标记了一下，官方库文件下 mysqlcppconn8_static.lib</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;dnsapi.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;mysqlcppconn8_md.lib&quot;</span>)<span class="comment">// 特殊命名标记了一下，官方库文件下 mysqlcppconn8_static.libs</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;dnsapi.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// DEBUG</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 修改控制台编码</span></span><br><span class="line">    <span class="comment">// std::system(&quot;chcp 65001&quot;);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 改成你的信息b</span></span><br><span class="line">        <span class="function">Session <span class="title">sess</span><span class="params">(SessionOption::USER, <span class="string">&quot;root&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">            SessionOption::PWD, <span class="string">&quot;123456&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">            SessionOption::HOST, <span class="string">&quot;localhost&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">            SessionOption::PORT, <span class="number">33060</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">            SessionOption::DB, <span class="string">&quot;test&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> result = sess.<span class="built_in">sql</span>(<span class="string">&quot;select * from user&quot;</span>).<span class="built_in">execute</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> row : result.<span class="built_in">fetchAll</span>()) &#123;</span><br><span class="line">            std::cout &lt;&lt; row[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; row[<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; row[<span class="number">2</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">        std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="预处理器"><a href="#预处理器" class="headerlink" title="预处理器"></a>预处理器</h4><p>参考官方说明：For applications that use X DevAPI, X DevAPI for C, or (as of Connector&#x2F;C++ 8.0.16) the legacy JDBC API, define the <code>STATIC_CONCPP</code> macro. All that matters is that you define it; the value does not matter. For example: <code>-DSTATIC_CONCPP</code></p><p>使用 JDBC 连接编译时，需要在预处理器添加 <code>STATIC_CONCPP</code> 宏。</p><div class="tag-plugin image"><div class="image-bg"><img src="../images/mysql-connnector-8.0编译说明/image-20231014145224610.png"/></div></div><p>特别的，如果执行以上步骤之后还是编译报错，需要根据相关报错信息链接其他的库。如 <code>MSCVRT.lib</code></p><h2 id="使用cmkae生成工程文件"><a href="#使用cmkae生成工程文件" class="headerlink" title="使用cmkae生成工程文件"></a>使用cmkae生成工程文件</h2><blockquote><p> 有其他特殊需求参考官方说明：<a href="https://dev.mysql.com/doc/connector-cpp/8.1/en/connector-cpp-installation-source-cpp.html">MySQL :: MySQL Connector&#x2F;C++ Developer Guide :: 4.3 Installing Connector&#x2F;C++ from Source</a></p></blockquote><p>官方要求安装boost库，实际编译不安装boost也可以编译成功。</p><p>编译命令如下所示：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake . -G <span class="string">&quot;Visual Studio 15&quot;</span> -A Win32 -DBUILD_STATIC=<span class="keyword">ON</span> -DWITH_SSL=<span class="string">&quot;D:\OpenSSL-3.1-Win32-mtd&quot;</span> -DWITH_JDBC=<span class="keyword">ON</span> -DWITH_MYSQL=<span class="string">&quot;C:\Program Files\MySQL\MySQL Server 8.0&quot;</span></span><br></pre></td></tr></table></figure><p>生成 vs2017工程（v141工具集）下的工程文件，产物为静态库，OpenSSL安装位置为 <code>&quot;D:\OpenSSL-3.1-Win32-mtd</code>。说明：</p><ul><li>-G “Visual Studio 16”：指定工具集</li><li>-A Win32 指定生成的系统</li><li>-DBUILD_STATIC&#x3D;ON：指定生成静态库</li><li>-DWITH_SSL&#x3D;”D:\OpenSSL-3.1-Win32-mtd”：指定 OpenSSL 的安装位置</li><li>-DWITH_MYSQL&#x3D;”C:\Program Files\MySQL\MySQL Server 8.0”：指定 mysql的安装位置</li><li>-DWITH_JDBC&#x3D;ON：指定编译JDBC</li></ul><p>由于需要 <code>/MT</code> 版本的，因此 OpenSSL 也需要自己编译 <code>/MT</code> 版本的才可以。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：本文主要记录 MySQL Connector&amp;#x2F;C++ 8.1 静态库的编译方式，因项目工程问题，需要编译 &lt;code&gt;/MT&lt;/code&gt; 模式的静态库文件。&lt;/p&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://mysql.n</summary>
      
    
    
    
    <category term="OpenSource" scheme="http://example.com/categories/OpenSource/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/OpenSource/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>Hex与Byte相互转化</title>
    <link href="http://example.com/Code/C/HexToByte/"/>
    <id>http://example.com/Code/C/HexToByte/</id>
    <published>2023-10-13T04:22:16.608Z</published>
    <updated>2023-10-13T04:27:44.215Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.chenxublog.com/2020/03/08/c-fast-convert-hex-char-array.html">C语言快速互转HEX（16进制）和原始字符串&#x2F;数组 – 晨旭的博客~</a></p><h2 id="HexToByte"><a href="#HexToByte" class="headerlink" title="HexToByte"></a>HexToByte</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">from_hex</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> l, <span class="type">char</span> *d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span>* p = s+l;</span><br><span class="line">        <span class="type">char</span>* p2 = p<span class="number">-1</span>;</span><br><span class="line">        *(d+l/<span class="number">2</span>) =</span><br><span class="line">        ( (*p&gt;<span class="string">&#x27;9&#x27;</span>? *p+<span class="number">9</span> : *p) &amp; <span class="number">0x0f</span> ) |</span><br><span class="line">        ( (*p2&gt;<span class="string">&#x27;9&#x27;</span>? *p2+<span class="number">9</span> : *p2) &lt;&lt; <span class="number">4</span> );</span><br><span class="line">        l--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> s[]= <span class="string">&quot;6F6B6f6b&quot;</span>;</span><br><span class="line">    <span class="type">char</span> d[<span class="number">5</span>];</span><br><span class="line">    d[<span class="number">4</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">from_hex</span>(s,<span class="number">8</span>,d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ByteToHex"><a href="#ByteToHex" class="headerlink" title="ByteToHex"></a>ByteToHex</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> hex_table[] = &#123;</span><br><span class="line"><span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">to_hex</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> l, <span class="type">char</span> *d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l--)</span><br><span class="line">    &#123;</span><br><span class="line">        *(d+<span class="number">2</span>*l+<span class="number">1</span>) = hex_table[(*(s+l))&amp;<span class="number">0x0f</span>];</span><br><span class="line">        *(d+<span class="number">2</span>*l) = hex_table[(*(s+l))&gt;&gt;<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> s[]= <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">char</span> d[<span class="number">9</span>];</span><br><span class="line">    d[<span class="number">8</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">to_hex</span>(s,<span class="number">4</span>,d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="一种更高效的实现："><a href="#一种更高效的实现：" class="headerlink" title="一种更高效的实现："></a>一种更高效的实现：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">from_hex</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> l, <span class="type">char</span> *d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l--)</span><br><span class="line">    &#123;</span><br><span class="line">        *d = (*s&gt;<span class="string">&#x27;9&#x27;</span> ? *s+<span class="number">9</span> : *s) &lt;&lt; <span class="number">4</span>;</span><br><span class="line">        ++s;</span><br><span class="line">        *d |= (*s&gt;<span class="string">&#x27;9&#x27;</span> ? *s+<span class="number">9</span> : *s) &amp; <span class="number">0x0F</span>;</span><br><span class="line">        ++s;</span><br><span class="line">        ++d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> s[]= <span class="string">&quot;6F6B6f6b&quot;</span>;</span><br><span class="line">    <span class="type">char</span> d[<span class="number">5</span>];</span><br><span class="line">    d[<span class="number">4</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">from_hex</span>(s,<span class="number">4</span>,d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> hex_table[] = &#123;</span><br><span class="line"><span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">to_hex</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> l, <span class="type">char</span> *d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l--)</span><br><span class="line">    &#123;</span><br><span class="line">        *d = hex_table[*s &gt;&gt; <span class="number">4</span>];</span><br><span class="line">        d++;</span><br><span class="line">        *d = hex_table[*s &amp; <span class="number">0x0f</span>];</span><br><span class="line">        s++;</span><br><span class="line">        d++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> s[]= <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">char</span> d[<span class="number">9</span>];</span><br><span class="line">    d[<span class="number">8</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">to_hex</span>(s,<span class="number">4</span>,d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.chenxublog.com/2020/03/08/c-fast-convert-hex-char-array.html&quot;&gt;C语言快速互转HEX（16进制）和原始字符串&amp;#x2F;数组 – 晨旭的博客~&lt;/a&gt;&lt;/p&gt;
&lt;h2 id</summary>
      
    
    
    
    <category term="Code" scheme="http://example.com/categories/Code/"/>
    
    <category term="C" scheme="http://example.com/categories/Code/C/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows内核模块名称遍历</title>
    <link href="http://example.com/OS/Windows/%E9%A9%B1%E5%8A%A8/EasyDriver/Windows%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E5%90%8D%E7%A7%B0%E9%81%8D%E5%8E%86/"/>
    <id>http://example.com/OS/Windows/%E9%A9%B1%E5%8A%A8/EasyDriver/Windows%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E5%90%8D%E7%A7%B0%E9%81%8D%E5%8E%86/</id>
    <published>2023-10-09T02:53:41.120Z</published>
    <updated>2023-10-09T03:11:50.608Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：内核遍历模块名称</p></blockquote><span id="more"></span><h2 id="0x01、查看LDR"><a href="#0x01、查看LDR" class="headerlink" title="0x01、查看LDR"></a>0x01、查看LDR</h2><p>Windows 内核模块信息是以结构体 <code>_LDR_DATA_TABLE_ENTRY</code> 形式存在于系统。 <code>_LDR_DATA_TABLE_ENTRY</code> 的基地址在 PEB当中，以下为是一个示例查看 <code>_LDR_DATA_TABLE_ENTRY</code> 结构体的示例：</p><blockquote><p>环境：windows双机调试，调试环境 win10. 调试，目标 notepad.exe</p></blockquote><ol><li><p>获取进程id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0: kd&gt; !process 0 0 notepad.exe</span><br><span class="line">PROCESS ffffc6835560a080</span><br><span class="line">    SessionId: 1  Cid: 167c    Peb: 88dcc01000  ParentCid: 1ad8</span><br><span class="line">    DirBase: 6590e000  ObjectTable: ffffdd03a141b380  HandleCount: 520.</span><br><span class="line">    Image: notepad.exe</span><br></pre></td></tr></table></figure></li><li><p>获取LDR</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">0: kd&gt; .process /p ffffc6835560a080; !peb 88dcc01000</span><br><span class="line">Implicit process is now ffffc683`5560a080</span><br><span class="line">.cache forcedecodeuser done</span><br><span class="line">PEB at 00000088dcc01000</span><br><span class="line">    InheritedAddressSpace:    No</span><br><span class="line">    ReadImageFileExecOptions: No</span><br><span class="line">    BeingDebugged:            No</span><br><span class="line">    ImageBaseAddress:         00007ff613310000</span><br><span class="line">    NtGlobalFlag:             0</span><br><span class="line">    NtGlobalFlag2:            0</span><br><span class="line">    Ldr                       00007ffb244fc4c0</span><br><span class="line">    Ldr.Initialized:          Yes</span><br><span class="line">    Ldr.InInitializationOrderModuleList: 000001acec0f24f0 . 000001acf1b23db0</span><br><span class="line">    Ldr.InLoadOrderModuleList:           000001acec0f2660 . 000001acf1b23d90</span><br><span class="line">    Ldr.InMemoryOrderModuleList:         000001acec0f2670 . 000001acf1b23da0</span><br><span class="line">                    Base TimeStamp                     Module</span><br><span class="line">            7ff613310000 52b5327b Dec 21 14:17:31 2013 C:\Windows\system32\notepad.exe</span><br><span class="line">            7ffb24390000 feef31d3 Jul 15 16:12:03 2105 C:\Windows\SYSTEM32\ntdll.dll</span><br><span class="line">            7ffb23b40000 23c0ab5e Jan 03 19:15:42 1989 C:\Windows\System32\KERNEL32.DLL</span><br><span class="line">            7ffb21ae0000 6b4de7c9 Jan 18 18:22:01 2027 C:\Windows\System32\KERNELBASE.dll</span><br><span class="line">            7ffb233f0000 7086f0b5 Oct 28 22:20:37 2029 C:\Windows\System32\GDI32.dll</span><br><span class="line">            7ffb21de0000 0dcd0213 May 04 04:26:59 1977 C:\Windows\System32\win32u.dll</span><br><span class="line">            7ffb21f00000 d31e9fa0 Mar 29 16:45:20 2082 C:\Windows\System32\gdi32full.dll</span><br><span class="line">            7ffb21e10000 39255ccf May 19 23:25:03 2000 C:\Windows\System32\msvcp_win.dll</span><br><span class="line">            7ffb22180000 2bd748bf Apr 23 09:39:11 1993 C:\Windows\System32\ucrtbase.dll</span><br><span class="line">            7ffb22850000 12e47419 Jan 17 20:56:57 1980 C:\Windows\System32\USER32.dll</span><br><span class="line">            7ffb23090000 ab88b7a1 Mar 12 22:37:21 2061 C:\Windows\System32\combase.dll</span><br><span class="line">            7ffb236b0000 ed79d6e2 Apr 02 14:04:18 2096 C:\Windows\System32\RPCRT4.dll</span><br><span class="line">            7ffb238c0000 29534f79 Dec 21 22:28:09 1991 C:\Windows\System32\shcore.dll</span><br><span class="line">            7ffb235f0000 564f9f39 Nov 21 06:31:21 2015 C:\Windows\System32\msvcrt.dll</span><br><span class="line">            7ffb20490000 db2b08ef Jul 09 13:23:59 2086 C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.1110_none_60b5254171f9507e\COMCTL32.dll</span><br><span class="line">            7ffb23050000 68ff10be Oct 27 14:27:10 2025 C:\Windows\System32\IMM32.DLL</span><br><span class="line">                5e050000 627c7a26 May 12 11:08:22 2022 C:\Program Files (x86)\360\360Safe\safemon\SafeWrapper.dll</span><br><span class="line">            7ffb223f0000 c9418262 Dec 30 08:27:14 2076 C:\Windows\System32\ADVAPI32.dll</span><br><span class="line">            7ffb224a0000 9003cbde Jul 26 05:45:02 2046 C:\Windows\System32\sechost.dll</span><br><span class="line">            7ffb217a0000 618b690d Nov 10 14:39:09 2021 C:\Program Files (x86)\360\360Safe\safemon\capid64.dll</span><br><span class="line">            7ffb237e0000 19bb5737 Sep 06 22:52:39 1983 C:\Windows\System32\SHLWAPI.dll</span><br><span class="line">            7ffb21760000 63e49296 Feb 09 14:28:38 2023 C:\Program Files (x86)\360\360EDRSensor\safemon\360EFP64.dll</span><br><span class="line">            7ffb21740000 f0713fcd Oct 30 14:42:21 2097 C:\Windows\SYSTEM32\kernel.appcore.dll</span><br><span class="line">            7ffb222b0000 856685b0 Dec 03 03:17:04 2040 C:\Windows\System32\bcryptPrimitives.dll</span><br><span class="line">            7ffb1e4f0000 16108836 Sep 24 20:23:18 1981 C:\Windows\system32\uxtheme.dll</span><br><span class="line">            7ffb23970000 a7c9263e Mar 16 02:13:18 2059 C:\Windows\System32\clbcatq.dll</span><br><span class="line">            7ffb18890000 0b3246d4 Dec 15 10:58:28 1975 C:\Windows\System32\MrmCoreR.dll</span><br><span class="line">            7ffb23c00000 480c18d7 Apr 21 12:32:23 2008 C:\Windows\System32\SHELL32.dll</span><br><span class="line">            7ffb1eac0000 7521c788 Apr 10 02:27:20 2032 C:\Windows\SYSTEM32\windows.storage.dll</span><br><span class="line">            7ffb20ec0000 db45726f Jul 29 14:13:03 2086 C:\Windows\system32\Wldp.dll</span><br><span class="line">            7ffb23a20000 0e8d3a56 Sep 26 23:42:14 1977 C:\Windows\System32\MSCTF.dll</span><br><span class="line">            7ffb225d0000 d42edff1 Oct 22 04:56:17 2082 C:\Windows\System32\OLEAUT32.dll</span><br><span class="line">            7ffb14380000 63a36c45 Dec 22 04:27:49 2022 C:\Windows\system32\TextShaping.dll</span><br><span class="line">            7ffafdbb0000 97acfd33 Aug 21 20:10:27 2050 C:\Windows\System32\efswrt.dll</span><br><span class="line">            7ffb0fb70000 0d302819 Jan 05 05:03:21 1977 C:\Windows\System32\MPR.dll</span><br><span class="line">            7ffb1d420000 1b27f2ab Jun 09 12:20:59 1984 C:\Windows\SYSTEM32\wintypes.dll</span><br><span class="line">            7ffb1b3f0000 60d2769c Jun 23 07:47:40 2021 C:\Windows\System32\twinapi.appcore.dll</span><br><span class="line">            7ffb20e30000 24cdd509 Jul 26 23:13:13 1989 C:\Windows\System32\oleacc.dll</span><br><span class="line">            7ffb18640000 f0c41b7e Jan 01 11:05:34 2098 C:\Windows\SYSTEM32\textinputframework.dll</span><br><span class="line">            7ffb1db70000 ce358de3 Aug 19 04:30:27 2079 C:\Windows\System32\CoreUIComponents.dll</span><br><span class="line">            7ffb1ded0000 d76cf31a Jul 12 19:59:22 2084 C:\Windows\System32\CoreMessaging.dll</span><br><span class="line">            7ffb22780000 aff3315b Jul 18 10:18:03 2063 C:\Windows\System32\WS2_32.dll</span><br><span class="line">            7ffb215c0000 3d60ad04 Aug 19 16:32:04 2002 C:\Windows\SYSTEM32\ntmarta.dll</span><br><span class="line">            7ffb22ec0000 2f888521 Apr 10 09:08:49 1995 C:\Windows\System32\ole32.dll</span><br><span class="line">            7ffb226a0000 20677495 Mar 25 14:09:25 1987 C:\Windows\System32\comdlg32.dll</span><br><span class="line">            7ffb1d320000 332d6f47 Mar 18 00:20:23 1997 C:\Windows\system32\PROPSYS.dll</span><br><span class="line">            7ffaf0910000 55510662 May 12 03:43:30 2015 C:\Windows\System32\DUI70.dll</span><br><span class="line">            7ffaf0870000 3edb1f69 Jun 02 17:56:57 2003 C:\Windows\System32\DUser.dll</span><br><span class="line">            7ffb1e7d0000 7ecc0a11 May 30 20:58:57 2037 C:\Windows\System32\dwmapi.dll</span><br><span class="line">            7ffb05360000 b95c5d4e Jul 18 19:55:58 2068 C:\Windows\system32\explorerframe.dll</span><br><span class="line">            7ffb1b110000 1fcf100d Nov 29 23:55:57 1986 C:\Windows\system32\WindowsCodecs.dll</span><br><span class="line">            7ffb22280000 9723b943 May 09 17:20:03 2050 C:\Windows\System32\bcrypt.dll</span><br><span class="line">            7ffb219a0000 62b75706 Jun 26 02:42:14 2022 C:\Windows\system32\profapi.dll</span><br><span class="line">            7ffb052f0000 3aad9df3 Mar 13 12:11:31 2001 C:\Windows\System32\thumbcache.dll</span><br><span class="line">            7ffb1be70000 223f725e Mar 17 14:29:50 1988 C:\Windows\SYSTEM32\policymanager.dll</span><br><span class="line">            7ffb202e0000 f390ead1 Jun 29 04:13:05 2099 C:\Windows\system32\msvcp110_win.dll</span><br><span class="line">            7ffb055b0000 49f7aa8e Apr 29 09:17:02 2009 C:\Windows\system32\dataexchange.dll</span><br><span class="line">            7ffb1c650000 e193dcb4 Dec 05 03:44:52 2089 C:\Windows\system32\d3d11.dll</span><br><span class="line">            7ffb1d580000 05174257 Sep 15 21:06:31 1972 C:\Windows\system32\dcomp.dll</span><br><span class="line">            7ffb1f390000 e3f3eb09 Mar 11 09:04:09 2091 C:\Windows\system32\dxgi.dll</span><br><span class="line">            7ffaf0820000 ca7e2859 Aug 27 12:51:37 2077 C:\Windows\System32\Windows.UI.FileExplorer.dll</span><br><span class="line">            7ffb052c0000 be357357 Feb 15 05:12:55 2071 C:\Windows\system32\edputil.dll</span><br><span class="line">            7ffb21eb0000 1ede815d May 31 12:43:09 1986 C:\Windows\System32\CFGMGR32.dll</span><br><span class="line">            7ffb13cd0000 f30ed2fb Mar 22 11:56:43 2099 C:\Windows\System32\Windows.FileExplorer.Common.dll</span><br><span class="line">            7ffb17050000 724543b6 Oct 02 11:25:42 2030 C:\Windows\System32\iertutil.dll</span><br><span class="line">            7ffb1e3c0000 c42be918 Apr 18 01:34:16 2074 C:\Windows\SYSTEM32\atlthunk.dll</span><br><span class="line">            7ffb16670000 da4754f3 Jan 17 20:11:31 2086 C:\Windows\System32\StructuredQuery.dll</span><br><span class="line">            7ffb0d2f0000 c8e913db Oct 24 06:36:11 2076 C:\Windows\System32\Windows.StateRepositoryPS.dll</span><br><span class="line">            7ffb01680000 61e9c87f Jan 21 04:39:27 2022 C:\Windows\system32\Windows.Storage.Search.dll</span><br><span class="line">            7ffb1e3d0000 3ffe0471 Jan 09 09:31:29 2004 C:\Windows\system32\LINKINFO.dll</span><br><span class="line">            7ffb21950000 441329cb Mar 12 03:49:31 2006 C:\Windows\system32\SspiCli.dll</span><br><span class="line">            7ffae9d40000 e3a65137 Jan 11 12:23:19 2091 C:\Program Files\Common Files\microsoft shared\ink\tiptsf.dll</span><br><span class="line">            7ffb23840000 a2ae2189 Jun 27 16:40:41 2056 C:\Windows\System32\coml2.dll</span><br><span class="line">            7ffb07d90000 3f50139a Aug 30 11:01:46 2003 C:\Windows\System32\twinapi.dll</span><br><span class="line">            7ffb1e3e0000 9d68abf2 Sep 08 02:31:14 2053 C:\Windows\system32\apphelp.dll</span><br><span class="line">            7ffb22a50000 7680a595 Jan 01 05:48:05 2033 C:\Windows\System32\SETUPAPI.dll</span><br><span class="line">            7ffb21890000 14531102 Oct 21 22:56:02 1980 C:\Windows\SYSTEM32\VERSION.dll</span><br><span class="line">            7ffb055f0000 6a605d4a Jul 22 14:03:54 2026 C:\Windows\system32\cldapi.dll</span><br><span class="line">            7ffb21600000 2ea9f33d Oct 23 13:23:09 1994 C:\Windows\system32\FLTLIB.DLL</span><br><span class="line">            7ffb13620000 cfe5ad8c Jul 11 23:04:44 2080 C:\Users\holdy\AppData\Local\Microsoft\OneDrive\23.189.0910.0001\FileSyncShell64.dll</span><br><span class="line">            7ffb22020000 884d1633 Jun 19 09:15:31 2042 C:\Windows\System32\CRYPT32.dll</span><br><span class="line">            7ffb0c940000 42b0d806 Jun 16 09:38:14 2005 C:\Windows\SYSTEM32\WININET.dll</span><br><span class="line">            7ffb1fe00000 7aec0e44 May 09 10:28:20 2035 C:\Windows\SYSTEM32\Secur32.dll</span><br><span class="line">            7ffb1d7a0000 5e1a2a61 Jan 12 04:04:49 2020 C:\Windows\SYSTEM32\WTSAPI32.dll</span><br><span class="line">            7ffb21920000 ccba460f Nov 04 11:54:55 2078 C:\Windows\SYSTEM32\USERENV.dll</span><br><span class="line">            7ffb20d30000 28e89a43 Oct 01 23:54:43 1991 C:\Windows\system32\CRYPTBASE.DLL</span><br><span class="line">            7ffb18e60000 75e918f4 Sep 08 06:55:48 2032 C:\Windows\System32\EhStorShell.dll</span><br><span class="line">            7ffb13b40000 a373b917 Nov 24 13:43:51 2056 C:\Windows\SYSTEM32\ntshrui.dll</span><br><span class="line">            7ffb140f0000 8c31e680 Jul 14 11:41:52 2044 C:\Windows\System32\cscui.dll</span><br><span class="line">            7ffb16cd0000 5430eec3 Oct 05 15:09:55 2014 C:\Windows\system32\srvcli.dll</span><br><span class="line">            7ffb0bc50000 31063a34 Jan 24 21:55:00 1996 C:\Windows\system32\cscapi.dll</span><br><span class="line">            7ffb18ea0000 b8ca2d77 Mar 29 22:40:55 2068 C:\Windows\system32\WINMM.dll</span><br><span class="line">            7ffb1d7c0000 13731e9b May 05 02:06:19 1980 C:\Windows\system32\mssprxy.dll</span><br><span class="line">            7ffb16d00000 7499a51d Dec 28 20:12:13 2031 C:\Windows\System32\urlmon.dll</span><br><span class="line">            7ffb20d90000 fcf57d1b Jun 27 02:06:19 2104 C:\Windows\System32\netutils.dll</span><br><span class="line">            7ffb1e380000 499386c1 Feb 12 10:17:37 2009 C:\Windows\system32\NetworkExplorer.dll</span><br><span class="line">    SubSystemData:     00007ffb1b5cf1d0</span><br><span class="line">    ProcessHeap:       000001acec0f0000</span><br><span class="line">    ProcessParameters: 000001acec0f1c90</span><br><span class="line">    CurrentDirectory:  &#x27;C:\Users\holdy\&#x27;</span><br><span class="line">    WindowTitle:  &#x27;C:\Windows\system32\notepad.exe&#x27;</span><br><span class="line">    ImageFile:    &#x27;C:\Windows\system32\notepad.exe&#x27;</span><br><span class="line">    CommandLine:  &#x27;&quot;C:\Windows\system32\notepad.exe&quot; &#x27;</span><br><span class="line">    DllPath:      &#x27;&lt; Name not readable &gt;&#x27;</span><br><span class="line">    Environment:  000001acec0f0fe0</span><br><span class="line">        =::=::\</span><br><span class="line">        ALLUSERSPROFILE=C:\ProgramData</span><br><span class="line">        APPDATA=C:\Users\holdy\AppData\Roaming</span><br><span class="line">        CLASSPATH=C:\Program Files\Java\jdk-17\lib</span><br><span class="line">        CommonProgramFiles=C:\Program Files\Common Files</span><br><span class="line">        CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files</span><br><span class="line">        CommonProgramW6432=C:\Program Files\Common Files</span><br><span class="line">        COMPUTERNAME=DESKTOP-SM6JRAO</span><br><span class="line">        ComSpec=C:\Windows\system32\cmd.exe</span><br><span class="line">        DriverData=C:\Windows\System32\Drivers\DriverData</span><br><span class="line">        HOMEDRIVE=C:</span><br><span class="line">        HOMEPATH=\Users\holdy</span><br><span class="line">        JAVA_HOME=C:\Program Files\Java\jdk-17</span><br><span class="line">        LOCALAPPDATA=C:\Users\holdy\AppData\Local</span><br><span class="line">        LOGONSERVER=\\DESKTOP-SM6JRAO</span><br><span class="line">        NUMBER_OF_PROCESSORS=2</span><br><span class="line">        OneDrive=C:\Users\holdy\OneDrive</span><br><span class="line">        OneDriveConsumer=C:\Users\holdy\OneDrive</span><br><span class="line">        OS=Windows_NT</span><br><span class="line">        Path=%JAVA_HOME%\bin;C:\Program Files\Java\jdk-17\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\holdy\AppData\Local\Microsoft\WindowsApps;</span><br><span class="line">        PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC</span><br><span class="line">        PROCESSOR_ARCHITECTURE=AMD64</span><br><span class="line">        PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 140 Stepping 1, GenuineIntel</span><br><span class="line">        PROCESSOR_LEVEL=6</span><br><span class="line">        PROCESSOR_REVISION=8c01</span><br><span class="line">        ProgramData=C:\ProgramData</span><br><span class="line">        ProgramFiles=C:\Program Files</span><br><span class="line">        ProgramFiles(x86)=C:\Program Files (x86)</span><br><span class="line">        ProgramW6432=C:\Program Files</span><br><span class="line">        PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules</span><br><span class="line">        PUBLIC=C:\Users\Public</span><br><span class="line">        SESSIONNAME=Console</span><br><span class="line">        SystemDrive=C:</span><br><span class="line">        SystemRoot=C:\Windows</span><br><span class="line">        TEMP=C:\Users\holdy\AppData\Local\Temp</span><br><span class="line">        TMP=C:\Users\holdy\AppData\Local\Temp</span><br><span class="line">        USERDOMAIN=DESKTOP-SM6JRAO</span><br><span class="line">        USERDOMAIN_ROAMINGPROFILE=DESKTOP-SM6JRAO</span><br><span class="line">        USERNAME=holdy</span><br><span class="line">        USERPROFILE=C:\Users\holdy</span><br><span class="line">        windir=C:\Windows</span><br></pre></td></tr></table></figure></li><li><p>查看LDR</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">0: kd&gt; dt _LDR_DATA_TABLE_ENTRY 00007ffb244fc4c0</span><br><span class="line">ntdll!_LDR_DATA_TABLE_ENTRY</span><br><span class="line">   +0x000 InLoadOrderLinks : _LIST_ENTRY [ 0x00000001`00000058 - 0x00000000`00000000 ]</span><br><span class="line">   +0x010 InMemoryOrderLinks : _LIST_ENTRY [ 0x000001ac`ec0f2660 - 0x000001ac`f1b23d90 ]</span><br><span class="line">   +0x020 InInitializationOrderLinks : _LIST_ENTRY [ 0x000001ac`ec0f2670 - 0x000001ac`f1b23da0 ]</span><br><span class="line">   +0x030 DllBase          : 0x000001ac`ec0f24f0 Void</span><br><span class="line">   +0x038 EntryPoint       : 0x000001ac`f1b23db0 Void</span><br><span class="line">   +0x040 SizeOfImage      : 0</span><br><span class="line">   +0x048 FullDllName      : _UNICODE_STRING &quot;&quot;</span><br><span class="line">   +0x058 BaseDllName      : _UNICODE_STRING &quot;&quot;</span><br><span class="line">   +0x068 FlagGroup        : [4]  &quot;&quot;</span><br><span class="line">   +0x068 Flags            : 0</span><br><span class="line">   +0x068 PackagedBinary   : 0y0</span><br><span class="line">   +0x068 MarkedForRemoval : 0y0</span><br><span class="line">   +0x068 ImageDll         : 0y0</span><br><span class="line">   +0x068 LoadNotificationsSent : 0y0</span><br><span class="line">   +0x068 TelemetryEntryProcessed : 0y0</span><br><span class="line">   +0x068 ProcessStaticImport : 0y0</span><br><span class="line">   +0x068 InLegacyLists    : 0y0</span><br><span class="line">   +0x068 InIndexes        : 0y0</span><br><span class="line">   +0x068 ShimDll          : 0y0</span><br><span class="line">   +0x068 InExceptionTable : 0y0</span><br><span class="line">   +0x068 ReservedFlags1   : 0y00</span><br><span class="line">   +0x068 LoadInProgress   : 0y0</span><br><span class="line">   +0x068 LoadConfigProcessed : 0y0</span><br><span class="line">   +0x068 EntryProcessed   : 0y0</span><br><span class="line">   +0x068 ProtectDelayLoad : 0y0</span><br><span class="line">   +0x068 ReservedFlags3   : 0y00</span><br><span class="line">   +0x068 DontCallForThreads : 0y0</span><br><span class="line">   +0x068 ProcessAttachCalled : 0y0</span><br><span class="line">   +0x068 ProcessAttachFailed : 0y0</span><br><span class="line">   +0x068 CorDeferredValidate : 0y0</span><br><span class="line">   +0x068 CorImage         : 0y0</span><br><span class="line">   +0x068 DontRelocate     : 0y0</span><br><span class="line">   +0x068 CorILOnly        : 0y0</span><br><span class="line">   +0x068 ChpeImage        : 0y0</span><br><span class="line">   +0x068 ReservedFlags5   : 0y00</span><br><span class="line">   +0x068 Redirected       : 0y0</span><br><span class="line">   +0x068 ReservedFlags6   : 0y00</span><br><span class="line">   +0x068 CompatDatabaseProcessed : 0y0</span><br><span class="line">   +0x06c ObsoleteLoadCount : 0</span><br><span class="line">   +0x06e TlsIndex         : 0</span><br><span class="line">   +0x070 HashLinks        : _LIST_ENTRY [ 0x00000000`00000000 - 0x00000000`00000000 ]</span><br><span class="line">   +0x080 TimeDateStamp    : 0x16510000</span><br><span class="line">   +0x088 EntryPointActivationContext : 0x00000000`00020000 _ACTIVATION_CONTEXT</span><br><span class="line">   +0x090 Lock             : 0x61db9c30`00000000 Void</span><br><span class="line">   +0x098 DdagNode         : 0x00770073`0002815d _LDR_DDAG_NODE</span><br><span class="line">   +0x0a0 NodeModuleLink   : _LIST_ENTRY [ 0x00690072`00650076 - 0x00340036`00790066 ]</span><br><span class="line">   +0x0b0 LoadContext      : 0x006c006c`0064002e _LDRP_LOAD_CONTEXT</span><br><span class="line">   +0x0b8 ParentDllBase    : (null) </span><br><span class="line">   +0x0c0 SwitchBackContext : (null) </span><br><span class="line">   +0x0c8 BaseAddressIndexNode : _RTL_BALANCED_NODE</span><br><span class="line">   +0x0e0 MappingInfoIndexNode : _RTL_BALANCED_NODE</span><br><span class="line">   +0x0f8 OriginalBase     : 0x61db9c30`00000001</span><br><span class="line">   +0x100 LoadTime         : _LARGE_INTEGER 0x00770073`0002815d</span><br><span class="line">   +0x108 BaseNameHashValue : 0x650076</span><br><span class="line">   +0x10c LoadReason       : 0x690072 (No matching name)</span><br><span class="line">   +0x110 ImplicitPathOptions : 0x790066</span><br><span class="line">   +0x114 ReferenceCount   : 0x340036</span><br><span class="line">   +0x118 DependentLoadFlags : 0x64002e</span><br><span class="line">   +0x11c SigningLevel     : 0x6c &#x27;l&#x27;</span><br></pre></td></tr></table></figure></li></ol><h2 id="0x02、通过驱动程序读取-LDR"><a href="#0x02、通过驱动程序读取-LDR" class="headerlink" title="0x02、通过驱动程序读取 LDR"></a>0x02、通过驱动程序读取 LDR</h2><p>上述我们已经知道了 <code>_LDR_DATA_TABLE_ENTRY</code> 的结构体，下一步就可以根据其结构体在驱动程序中读取内核模块了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_LDR_DATA_TABLE_ENTRY</span></span><br><span class="line">&#123;</span><br><span class="line">    LIST_ENTRY InLoadOrderLinks;</span><br><span class="line">    LIST_ENTRY InMemoryOrderLinks;</span><br><span class="line">    LIST_ENTRY InInitializationOrderLinks;</span><br><span class="line">    PVOID      DllBase;</span><br><span class="line">    PVOID      EntryPoint;</span><br><span class="line">    UINT64    SizeOfImage;</span><br><span class="line">    UNICODE_STRING FullDllName;</span><br><span class="line">    UNICODE_STRING BaseDllName;</span><br><span class="line">&#125;LDR_DATA_TABLE_ENTRY, * PLDR_DATA_TABLE_ENTRY;</span><br></pre></td></tr></table></figure><p>在驱动进程中，<code>NTSTATUS DriverEntry(PDRIVER_OBJECT DriverObject, UNICODE_STRING RegistryPath)</code> 的 <code>DriverObject</code> 保存了当前驱动的 LDR_DATA_TABLE_ENTRY 地址。</p><p>基于这一点，完整的程序代码如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;wdm.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_LDR_DATA_TABLE_ENTRY</span></span><br><span class="line">&#123;</span><br><span class="line">    LIST_ENTRY InLoadOrderLinks;</span><br><span class="line">    LIST_ENTRY InMemoryOrderLinks;</span><br><span class="line">    LIST_ENTRY InInitializationOrderLinks;</span><br><span class="line">    PVOID      DllBase;</span><br><span class="line">    PVOID      EntryPoint;</span><br><span class="line">    UINT64    SizeOfImage;</span><br><span class="line">    UNICODE_STRING FullDllName;</span><br><span class="line">    UNICODE_STRING BaseDllName;</span><br><span class="line">&#125;LDR_DATA_TABLE_ENTRY, * PLDR_DATA_TABLE_ENTRY;</span><br><span class="line"></span><br><span class="line"><span class="function">VOID <span class="title">DriverUnload</span><span class="params">(PDRIVER_OBJECT DriverObject)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">DbgPrint</span>(<span class="string">&quot;DriverUnload&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">NTSTATUS <span class="title">DriverEntry</span><span class="params">(PDRIVER_OBJECT DriverObject, UNICODE_STRING RegistryPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    NTSTATUS status = STATUS_SUCCESS;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">DbgPrint</span>(<span class="string">&quot;DriverEntry&quot;</span>);</span><br><span class="line"></span><br><span class="line">    DriverObject-&gt;DriverUnload = DriverUnload;</span><br><span class="line"></span><br><span class="line">    PLDR_DATA_TABLE_ENTRY pDection = DriverObject-&gt;DriverSection;    <span class="comment">//获取当前驱动的LDR_DATA_TABLE_ENTRY地址</span></span><br><span class="line"></span><br><span class="line">    PLDR_DATA_TABLE_ENTRY pCurrentDection = pDection;    <span class="comment">//记录当前驱动LDR_DATA_TABLE_ENTRY地址</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        pDection = pDection-&gt;InLoadOrderLinks.Flink;   <span class="comment">//先查询下一个</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">DbgPrint</span>(<span class="string">&quot;%ws&quot;</span>, pDection-&gt;BaseDllName.Buffer);    <span class="comment">//输出模块名</span></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (pCurrentDection != pDection);    <span class="comment">//遍历到当前驱动LDR_DATA_TABLE_ENTRY地址时，说明查询结束</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> status;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序输出如下所示：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/%E9%A9%B1%E5%8A%A8%2Fimages%2FWindows%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E5%90%8D%E7%A7%B0%E9%81%8D%E5%8E%86%2Fimage-20231009111116408.png"/></div></div>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：内核遍历模块名称&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="驱动" scheme="http://example.com/categories/OS/Windows/%E9%A9%B1%E5%8A%A8/"/>
    
    <category term="EasyDriver" scheme="http://example.com/categories/OS/Windows/%E9%A9%B1%E5%8A%A8/EasyDriver/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="driver" scheme="http://example.com/tags/driver/"/>
    
  </entry>
  
  <entry>
    <title>驱动开发相关工具</title>
    <link href="http://example.com/OS/Windows/%E9%A9%B1%E5%8A%A8/windows%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/OS/Windows/%E9%A9%B1%E5%8A%A8/windows%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/</id>
    <published>2023-10-09T02:04:44.473Z</published>
    <updated>2023-10-09T02:06:06.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DbgView"><a href="#DbgView" class="headerlink" title="DbgView"></a>DbgView</h2><p>用于查看驱动输出的消息</p><h2 id="InstDrv"><a href="#InstDrv" class="headerlink" title="InstDrv"></a>InstDrv</h2><p>用户加载、启动、停止、卸载驱动</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;DbgView&quot;&gt;&lt;a href=&quot;#DbgView&quot; class=&quot;headerlink&quot; title=&quot;DbgView&quot;&gt;&lt;/a&gt;DbgView&lt;/h2&gt;&lt;p&gt;用于查看驱动输出的消息&lt;/p&gt;
&lt;h2 id=&quot;InstDrv&quot;&gt;&lt;a href=&quot;#InstDrv</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="驱动" scheme="http://example.com/categories/OS/Windows/%E9%A9%B1%E5%8A%A8/"/>
    
    <category term="windows驱动开发教程" scheme="http://example.com/categories/OS/Windows/%E9%A9%B1%E5%8A%A8/windows%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="驱动" scheme="http://example.com/tags/%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio 内置引入文件</title>
    <link href="http://example.com/OS/Windows/Visual%20Studio/%E6%96%87%E4%BB%B6%E5%86%85%E7%BD%AE%E5%BC%95%E5%85%A5/"/>
    <id>http://example.com/OS/Windows/Visual%20Studio/%E6%96%87%E4%BB%B6%E5%86%85%E7%BD%AE%E5%BC%95%E5%85%A5/</id>
    <published>2023-10-08T07:57:39.448Z</published>
    <updated>2023-10-09T07:18:27.424Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：介绍了如何使用 visual studio 引入默认的库文件和头文件</p></blockquote><span id="more"></span><p>在用户目录下有这样一个文件</p><p><code>Microsoft.Cpp.*.user.props</code></p><p>该文件用于定义用户自己需要定义的一些配置。</p><p>查看内容如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;Project DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;</span><br><span class="line">  &lt;ImportGroup Label=&quot;PropertySheets&quot;&gt;</span><br><span class="line">  &lt;/ImportGroup&gt;</span><br><span class="line">  &lt;PropertyGroup Label=&quot;UserMacros&quot; /&gt;</span><br><span class="line">  &lt;PropertyGroup&gt;</span><br><span class="line">    &lt;IncludePath&gt;D:\Documents\A_Source\CWPP\360GPUBNew\dev\include;D:\Documents\A_Source\CWPP\360GPUBNew\dev\include;D:\Documents\A_Source\CWPP\360LPUB\dev\include;D:\Documents\A_Source\CWPP\360LPUB\dev\include\360safe\360NewExamine;D:\Documents\A_Source\CWPP\360LPUB\dev\include\SiteUI;D:\Documents\A_Source\CWPP\360LPUB\opensource\VC-LTL4;$(ProjectDir);$(IncludePath)</span><br><span class="line">&lt;/IncludePath&gt;</span><br><span class="line">    &lt;LibraryPath&gt;D:\Documents\A_Source\CWPP\360GPUBNew\dev\lib_s3;D:\Documents\A_Source\CWPP\360GPUBNew\dev\lib_s3\vc2017;D:\Documents\A_Source\CWPP\360LPUB\dev\lib\360netmon;$(LibraryPath)&lt;/LibraryPath&gt;</span><br><span class="line">  &lt;/PropertyGroup&gt;</span><br><span class="line">  &lt;ItemDefinitionGroup /&gt;</span><br><span class="line">  &lt;ItemGroup /&gt;</span><br><span class="line">&lt;/Project&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>IncludePath：即为需要包含的头文件目录</li><li>LibraryPath：为需要引入库文件的目录</li></ul><p>其他编译版本同理</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：介绍了如何使用 visual studio 引入默认的库文件和头文件&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="Visual Studio" scheme="http://example.com/categories/OS/Windows/Visual-Studio/"/>
    
    
    <category term="visual studio" scheme="http://example.com/tags/visual-studio/"/>
    
  </entry>
  
  <entry>
    <title>windows 工具集</title>
    <link href="http://example.com/OS/Windows/%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    <id>http://example.com/OS/Windows/%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7%E9%9B%86/</id>
    <published>2023-10-07T08:58:29.227Z</published>
    <updated>2023-10-07T09:04:54.012Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看-OLE-x2F-COM-对象"><a href="#查看-OLE-x2F-COM-对象" class="headerlink" title="查看 OLE&#x2F;COM 对象"></a>查看 OLE&#x2F;COM 对象</h3><p>OLE&#x2F;COM Object Viewer</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows/images/%E5%B7%A5%E5%85%B7%E9%9B%86/image-20231007170004588.png"/></div></div><h3 id="PEview-exe"><a href="#PEview-exe" class="headerlink" title="PEview.exe"></a>PEview.exe</h3><p>二进制查看 PE 文件</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows/images/%E5%B7%A5%E5%85%B7%E9%9B%86/image-20231007170128882.png"/></div></div><h3 id="Viewdll-exe"><a href="#Viewdll-exe" class="headerlink" title="Viewdll.exe"></a>Viewdll.exe</h3><p>查看dll导出接口、引用函数</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows/images/%E5%B7%A5%E5%85%B7%E9%9B%86/image-20231007170231128.png"/></div></div><h3 id="exeinfo-exe"><a href="#exeinfo-exe" class="headerlink" title="exeinfo.exe"></a>exeinfo.exe</h3><p>查看exe的详细信息</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows%2Fimages%2F%E5%B7%A5%E5%85%B7%E9%9B%86%2Fimage-20231007170420531.png"/></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;查看-OLE-x2F-COM-对象&quot;&gt;&lt;a href=&quot;#查看-OLE-x2F-COM-对象&quot; class=&quot;headerlink&quot; title=&quot;查看 OLE&amp;#x2F;COM 对象&quot;&gt;&lt;/a&gt;查看 OLE&amp;#x2F;COM 对象&lt;/h3&gt;&lt;p&gt;OLE&amp;#x2F</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="工具" scheme="http://example.com/categories/OS/Windows/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="工具集" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>bcdedit 用法整理</title>
    <link href="http://example.com/OS/Windows/cmd/bcdedit/"/>
    <id>http://example.com/OS/Windows/cmd/bcdedit/</id>
    <published>2023-10-07T02:37:58.326Z</published>
    <updated>2023-10-09T07:19:12.774Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：bdcedit用法整理</p><p><strong>更多命令</strong>：<a href="https://docs.microsoft.com/zh-cn/windows-hardware/drivers/devtest/bcdedit%E2%80%93bootdebug">https://docs.microsoft.com/zh-cn/windows-hardware/drivers/devtest/bcdedit–bootdebug</a></p></blockquote><span id="more"></span><p>[toc]</p><h1 id="禁用数字签名"><a href="#禁用数字签名" class="headerlink" title="禁用数字签名"></a>禁用数字签名</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /set testsigning on</span><br></pre></td></tr></table></figure><h1 id="windows操作提供内核调试"><a href="#windows操作提供内核调试" class="headerlink" title="windows操作提供内核调试"></a>windows操作提供内核调试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /debug on <span class="comment"># 启动</span></span><br><span class="line">bcdedit /debug off <span class="comment"># 禁用</span></span><br></pre></td></tr></table></figure><h1 id="windows操作系统启动项的启动调试"><a href="#windows操作系统启动项的启动调试" class="headerlink" title="windows操作系统启动项的启动调试"></a>windows操作系统启动项的启动调试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /bootdebug on <span class="comment"># 启用</span></span><br><span class="line">bcdedit /bootdebug off <span class="comment"># 禁用</span></span><br></pre></td></tr></table></figure><h1 id="永久禁用数字签名方法"><a href="#永久禁用数字签名方法" class="headerlink" title="永久禁用数字签名方法"></a>永久禁用数字签名方法</h1><ol><li>管理员CMD</li><li>输入 <code>bcdedit.exe /set nointegritychecks on</code>，执行完毕就结束了</li><li>如果要恢复签名，执行 <code>bcdedit.exe /set nointegritychecks off</code>就行</li></ol><h1 id="windbg和虚拟机的远程调试和网络调试设置"><a href="#windbg和虚拟机的远程调试和网络调试设置" class="headerlink" title="windbg和虚拟机的远程调试和网络调试设置"></a>windbg和虚拟机的远程调试和网络调试设置</h1><blockquote><p>参考：<a href="https://blog.csdn.net/m0_37567738/article/details/129062143">windbg和虚拟机下的远程调试和网络调试设置_windbg调试虚拟机_satadriver的博客-CSDN博客</a></p><p>微软官方文档：<a href="https://learn.microsoft.com/zh-cn/windows-hardware/drivers/devtest/bcdedit--dbgsettings?redirectedfrom=MSDN">BCDEdit &#x2F;dbgsettings - Windows drivers | Microsoft Learn</a></p></blockquote><h1 id="WDF双机调试"><a href="#WDF双机调试" class="headerlink" title="WDF双机调试"></a>WDF双机调试</h1><blockquote><p>参考：<a href="https://blog.csdn.net/ljymoonlight/article/details/99709697">WDK1.2. bcdedit调试配置_bcdedit &#x2F;dbgsettings hostip_ljymoonlight的博客-CSDN博客</a></p></blockquote><h2 id="双机调试基本步骤"><a href="#双机调试基本步骤" class="headerlink" title="双机调试基本步骤"></a>双机调试基本步骤</h2><h3 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h3><h4 id="虚拟机设置"><a href="#虚拟机设置" class="headerlink" title="虚拟机设置"></a>虚拟机设置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 打开调试模式</span></span><br><span class="line">bcdedit /debug on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 设置网络方式调试</span></span><br><span class="line"><span class="comment"># hostip：主机IP地址</span></span><br><span class="line"><span class="comment"># port: 主机的端口</span></span><br><span class="line"><span class="comment"># key：(可省略) 登录密码</span></span><br><span class="line">bcdedit /dbgsettings net hostip:192.168.0.102 port:50000 key:1.2.3.4</span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 设置数字签名</span></span><br><span class="line">bcdedit /set testsigning on</span><br></pre></td></tr></table></figure><h4 id="主机windbg连接虚拟机"><a href="#主机windbg连接虚拟机" class="headerlink" title="主机windbg连接虚拟机"></a>主机windbg连接虚拟机</h4><p>如下图所示填入上述得到key或自定义设置的key之后连接即可。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows%2Fimages%2Fbcdedit%2F1.png"/></div></div><h3 id="串口调试"><a href="#串口调试" class="headerlink" title="串口调试"></a>串口调试</h3><ol><li>添加串行调试端口<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows/images/bcdedit/image-20230929210001760.png"/></div></div></li><li>设置管道名，并删除打印机<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows%2Fimages%2Fbcdedit%2Fimage-20230929214828006.png"/></div></div></li><li>查看管道名<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows%2Fimages%2Fbcdedit%2Fimage-20230929230319494.png"/></div></div></li></ol><h4 id="虚拟机设置-1"><a href="#虚拟机设置-1" class="headerlink" title="虚拟机设置"></a>虚拟机设置</h4><ol><li><p>管理员cmd</p></li><li><p>依次输入以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加新的引导项</span></span><br><span class="line">bcdedit /copy &#123;current&#125; /d Debug</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置引导项等待时间</span></span><br><span class="line">bcdedit /timeout 30</span><br></pre></td></tr></table></figure></li><li><p>重启操作系统并再次管理员运行CMD</p></li><li><p>依次输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /dbgsettings SERIAL DEBUGPORT:1 BAUDRATE:115200</span><br><span class="line"></span><br><span class="line">bcdedit /bootdebug on</span><br><span class="line"></span><br><span class="line">bcdedit /debug on</span><br></pre></td></tr></table></figure></li><li><p>运行 ‘msconfig’</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows%2Fimages%2Fbcdedit%2Fimage-20230917204346062.png"/></div></div><ul><li>win+R 输入 msconfig</li><li>查看引导项是否有Debug模式<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows/images/bcdedit/image-20230917204844775.png"/></div></div></li><li>查看高级选项，调试端口和波特率<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows/images/bcdedit/image-20230917205109487.png"/></div></div></li></ul></li><li><p>到此为止，虚拟机设置完毕，启动后操作系统启动时选择 <code>Debug</code></p></li></ol><h4 id="Windbg连接"><a href="#Windbg连接" class="headerlink" title="Windbg连接"></a>Windbg连接</h4><ol><li>连接内核<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/Windows/images/bcdedit/image-20230917205922673.png"/></div></div></li><li>设置管道名</li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：bdcedit用法整理&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更多命令&lt;/strong&gt;：&lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows-hardware/drivers/devtest/bcdedit%E2%80%93bootdebug&quot;&gt;https://docs.microsoft.com/zh-cn/windows-hardware/drivers/devtest/bcdedit–bootdebug&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="cmd" scheme="http://example.com/categories/OS/Windows/cmd/"/>
    
    
  </entry>
  
  <entry>
    <title>Stellar 主题用法</title>
    <link href="http://example.com/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/Stellar%E4%B8%BB%E9%A2%98%E7%94%A8%E6%B3%95/"/>
    <id>http://example.com/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/Stellar%E4%B8%BB%E9%A2%98%E7%94%A8%E6%B3%95/</id>
    <published>2023-10-07T02:37:58.000Z</published>
    <updated>2023-10-07T02:37:58.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述: Stellar 主题的用法整理</p></blockquote><span id="more"></span><h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">references:</span><br><span class="line">  - title: &#x27;心跳之旅—💗—iOS用手机摄像头检测心率(PPG)&#x27;</span><br><span class="line">    url: https://punmy.cn/2016/07/28/15231176397746.html</span><br><span class="line">  - title: &#x27;PPG光电容积脉搏波描记法技术概况&#x27;</span><br><span class="line">    url: https://www.jianshu.com/p/695c131abfa5</span><br><span class="line">  ...</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="projects-yml-配置"><a href="#projects-yml-配置" class="headerlink" title="projects.yml 配置"></a>projects.yml 配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">Stellar</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">主题配置</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;每个人的独立博客 | Designed by xaoxuu&#x27;</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">Hexo</span></span><br><span class="line">  <span class="attr">cover:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">/images/avator.png</span></span><br><span class="line">    <span class="attr">small:</span> <span class="string">112px</span></span><br><span class="line">    <span class="attr">large:</span> <span class="string">240px</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">个人使用过的</span> <span class="string">Hexo</span> <span class="string">主题配置记录</span></span><br><span class="line">  <span class="comment"># repo: xaoxuu/hexo-theme-stellar</span></span><br><span class="line">  <span class="comment"># comment_title: &#x27;评论区仅供交流，有问题请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues) 反馈。&#x27;</span></span><br><span class="line">  <span class="comment"># giscus:</span></span><br><span class="line">  <span class="comment">#   data-repo: xaoxuu/hexo-theme-stellar</span></span><br><span class="line">  <span class="comment">#   data-mapping: number</span></span><br><span class="line">  <span class="comment">#   data-term: 226</span></span><br><span class="line">  <span class="attr">sections:</span></span><br><span class="line">      <span class="string">&#x27;快速开始&#x27;</span><span class="string">:</span> [<span class="number">0</span>, <span class="number">99</span>]</span><br><span class="line">      <span class="string">&#x27;基本使用&#x27;</span><span class="string">:</span> [<span class="number">100</span>, <span class="number">199</span>]</span><br><span class="line">      <span class="string">&#x27;文档系统&#x27;</span><span class="string">:</span> [<span class="number">200</span>, <span class="number">299</span>]</span><br><span class="line">      <span class="string">&#x27;进阶设定&#x27;</span><span class="string">:</span> [<span class="number">900</span>, <span class="number">999</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述: Stellar 主题的用法整理&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="手册" scheme="http://example.com/categories/%E6%89%8B%E5%86%8C/"/>
    
    <category term="个人配置" scheme="http://example.com/categories/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>删除文件夹下所有文件</title>
    <link href="http://example.com/OS/Windows/API/%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/OS/Windows/API/%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6/</id>
    <published>2023-10-07T02:37:57.991Z</published>
    <updated>2023-10-07T02:37:57.991Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述： 调用 Windows API 遍历、删除文件，涉及到的API接口： <code>deletefile</code>、<code>RemoveDirectory</code>、<code>MoveFileExA</code>、</p></blockquote><span id="more"></span><h2 id="MoveFile"><a href="#MoveFile" class="headerlink" title="MoveFile"></a>MoveFile</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winbase.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WinUser.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;strsafe.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ShObjIdl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;shlobj.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;comutil.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;comsuppw.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/entry:mainCRTStartup&quot;</span>) </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置系统重启时删除</span></span><br><span class="line"><span class="type">bool</span> _SetFileRebootDelete(<span class="type">const</span> std::string&amp; file_path) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">MoveFileExA</span>(file_path.<span class="built_in">c_str</span>(), <span class="number">0</span>, MOVEFILE_DELAY_UNTIL_REBOOT)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getFiles</span><span class="params">(std::string path, std::vector&lt;std::string&gt;&amp; files, std::vector&lt;std::string&gt;&amp; names)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//文件句柄，win10用long long，win7用long就可以了</span></span><br><span class="line"><span class="type">long</span> hFile = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//文件信息 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_finddata_t</span> fileinfo;</span><br><span class="line">std::string p;</span><br><span class="line"><span class="keyword">if</span> ((hFile = _findfirst(p.<span class="built_in">assign</span>(path).<span class="built_in">append</span>(<span class="string">&quot;\\*&quot;</span>).<span class="built_in">c_str</span>(), &amp;fileinfo)) != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果是目录,迭代之 //如果不是,加入列表 </span></span><br><span class="line"><span class="keyword">if</span> ((fileinfo.attrib &amp; _A_SUBDIR))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(fileinfo.name, <span class="string">&quot;.&quot;</span>) != <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(fileinfo.name, <span class="string">&quot;..&quot;</span>) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">getFiles</span>(p.<span class="built_in">assign</span>(path).<span class="built_in">append</span>(<span class="string">&quot;\\&quot;</span>).<span class="built_in">append</span>(fileinfo.name), files, names);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">files.<span class="built_in">push_back</span>(p.<span class="built_in">assign</span>(path).<span class="built_in">append</span>(<span class="string">&quot;\\&quot;</span>).<span class="built_in">append</span>(fileinfo.name));</span><br><span class="line">names.<span class="built_in">push_back</span>(fileinfo.name);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (_findnext(hFile, &amp;fileinfo) == <span class="number">0</span>);</span><br><span class="line">_findclose(hFile);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">GetLoactionDir</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD dwLen = <span class="number">0</span>;</span><br><span class="line">CHAR szAppDataDir[MAX_PATH];</span><br><span class="line">dwLen = <span class="built_in">ExpandEnvironmentStringsA</span>(<span class="string">&quot;%programdata%&quot;</span>, szAppDataDir, MAX_PATH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwLen != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">StringCchCatA</span>(szAppDataDir, <span class="built_in">sizeof</span>(szAppDataDir), (<span class="string">&quot;\\TrustAgent\\logs&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> szAppDataDir;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetWithRegex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义文件查找句柄和查找条件  </span></span><br><span class="line">    WIN32_FIND_DATAA findData;</span><br><span class="line">    HANDLE hFind = INVALID_HANDLE_VALUE;</span><br><span class="line">    LPCSTR lpPath = <span class="string">&quot;D:\\Documents\\B_Tools\\&quot;</span>; <span class="comment">// 查找路径，这里以C盘根目录为例  </span></span><br><span class="line">    LPCSTR lpPattern = <span class="string">&quot;*.7z&quot;</span>; <span class="comment">// 查找模式，这里匹配所有文件  </span></span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> buffer_1[MAX_PATH] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">char</span>* lpStr1;</span><br><span class="line">    lpStr1 = buffer_1;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">PathCombineA</span>(lpStr1, lpPath, lpPattern);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用FindFirstFile函数开始查找文件  </span></span><br><span class="line">    hFind = <span class="built_in">FindFirstFileA</span>(lpStr1, &amp;findData);</span><br><span class="line">    <span class="keyword">if</span> (hFind == INVALID_HANDLE_VALUE) &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;FindFirstFile failed with error: &quot;</span> &lt;&lt; <span class="built_in">GetLastError</span>() &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环遍历查找结果并输出文件名  </span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        std::cout &lt;&lt; findData.cFileName &lt;&lt; std::endl;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="built_in">FindNextFileA</span>(hFind, &amp;findData));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭文件查找句柄  </span></span><br><span class="line">    <span class="built_in">FindClose</span>(hFind);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">std::string filepath = <span class="built_in">GetLoactionDir</span>();</span><br><span class="line"></span><br><span class="line">vector&lt;string&gt; files;</span><br><span class="line">vector&lt;string&gt; names;</span><br><span class="line"></span><br><span class="line"><span class="built_in">getFiles</span>(filepath, files, names);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; files.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-----========files:%d========---\n&quot;</span>, i);</span><br><span class="line"><span class="comment">// cout &lt;&lt; &quot;files&quot; &lt;&lt; i &lt;&lt; &#x27;:&#x27; &lt;&lt; files[i] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// wstring wsName;</span></span><br><span class="line"><span class="comment">// wsName = string2wstring(files[i]);</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lnkPath: &quot;</span> &lt;&lt; files[i] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// wstring wsDestPath = getLnkFormPath(wsName);</span></span><br><span class="line"><span class="comment">// cout &lt;&lt; &quot;destPath:&quot;;</span></span><br><span class="line"><span class="comment">// wcout &lt;&lt; wsDestPath;</span></span><br><span class="line"><span class="comment">// cout &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">_SetFileRebootDelete(files[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="deletefile"><a href="#deletefile" class="headerlink" title="deletefile"></a>deletefile</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span>  </span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    LPCWSTR filePath = <span class="string">L&quot;C:\\Path\\To\\File.txt&quot;</span>;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">DeleteFile</span>(filePath))  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="comment">// 文件删除成功  </span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件删除成功！\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="comment">// 文件删除失败  </span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件删除失败！\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RemoveDirectory"><a href="#RemoveDirectory" class="headerlink" title="RemoveDirectory"></a>RemoveDirectory</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span>  </span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    LPCWSTR directoryPath = <span class="string">L&quot;C:\\Path\\To\\Directory&quot;</span>;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">RemoveDirectory</span>(directoryPath))  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="comment">// 目录删除成功  </span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;目录删除成功！\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="comment">// 目录删除失败  </span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;目录删除失败！\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>除了<code>DeleteFile</code>和<code>RemoveDirectory</code>之外，Windows API 还提供了其他一些用于删除文件或目录的函数。以下是其中一些常用的函数：</p><ol><li><code>DeleteVolumeMountPoint</code>: 该函数用于删除一个装载点的所有卷装信息。</li><li><code>RemoveDirectoryEx</code>: 该函数用于删除一个目录及其所有子目录和文件。</li><li><code>RemoveFile</code>: 该函数用于删除一个文件，但不会删除与该文件关联的目录。</li><li><code>MoveFile</code>: 该函数可以将一个文件或目录从一个位置移动到另一个位置，如果目标位置已经存在同名文件或目录，则会自动将其覆盖。</li><li><code>MoveFileEx</code>: 该函数可以将一个文件或目录从一个位置移动到另一个位置，同时可以指定不同的覆盖行为。</li><li><code>SetFileAttributes</code>: 该函数可以设置一个文件或目录的属性，例如只读、隐藏、系统等。</li><li><code>DeleteFileTransacted</code>: 该函数可以删除一个文件，并将其从回收站中清空。</li><li><code>DeleteSubdirectoriesAndFiles</code>: 该函数可以删除一个目录及其所有子目录和文件，并将其从回收站中清空。</li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述： 调用 Windows API 遍历、删除文件，涉及到的API接口： &lt;code&gt;deletefile&lt;/code&gt;、&lt;code&gt;RemoveDirectory&lt;/code&gt;、&lt;code&gt;MoveFileExA&lt;/code&gt;、&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/OS/Windows/API/"/>
    
    
    <category term="API" scheme="http://example.com/tags/API/"/>
    
    <category term="删除文件" scheme="http://example.com/tags/%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Typora 图像配置</title>
    <link href="http://example.com/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/Typora%E5%9B%BE%E5%83%8F%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/Typora%E5%9B%BE%E5%83%8F%E9%85%8D%E7%BD%AE/</id>
    <published>2023-10-07T02:33:49.682Z</published>
    <updated>2023-10-07T07:17:38.699Z</updated>
    
    <content type="html"><![CDATA[<p>图片保存路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../images/$&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>rename-file 插件上传配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;localFolder:3&#125;/&#123;origin&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;图片保存路径：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c</summary>
      
    
    
    
    <category term="手册" scheme="http://example.com/categories/%E6%89%8B%E5%86%8C/"/>
    
    <category term="个人配置" scheme="http://example.com/categories/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows下编译OpenSSl 1.1.1</title>
    <link href="http://example.com/Code/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/libevent/Windows%E4%B8%8B%E7%BC%96%E8%AF%91Openssl/"/>
    <id>http://example.com/Code/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/libevent/Windows%E4%B8%8B%E7%BC%96%E8%AF%91Openssl/</id>
    <published>2023-09-28T02:13:53.558Z</published>
    <updated>2023-10-10T05:42:29.456Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述： windows系统编译OpenSSL 1.1.1版本操作步骤</p></blockquote><span id="more"></span><p>[toc]</p><h2 id="0x01、编译环境说明"><a href="#0x01、编译环境说明" class="headerlink" title="0x01、编译环境说明"></a>0x01、编译环境说明</h2><ul><li>操作系统：win10</li><li>编译器：vs2017</li><li>OpenSSL: 1.1.1W</li></ul><h2 id="0x02、依赖工具说明"><a href="#0x02、依赖工具说明" class="headerlink" title="0x02、依赖工具说明"></a>0x02、依赖工具说明</h2><p>根据官方说明，OpenSSL编译除了Visual Studio 2019以外，为方便编译，需要安装Strawberry Perl和NASM，下载地址分别如下：</p><p>Strawberry Perl：<a href="http://strawberryperl.com/">Strawberry Perl for Windows</a></p><p>NASM：<a href="https://www.nasm.us/">NASM</a>，这是一个汇编器</p><p><strong>特别注意：</strong>Perl安装后会自动添加到环境变量中，而NASM不会，一定要在环境变量Path中添加NASM.exe所在的目录，否则可能会出现意想不到的错误。</p><h2 id="0x03、编译步骤"><a href="#0x03、编译步骤" class="headerlink" title="0x03、编译步骤"></a>0x03、编译步骤</h2><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>从Github中可以直接下载：<a href="https://github.com/openssl/openssl">GitHub - openssl&#x2F;openssl: TLS&#x2F;SSL and crypto library</a></p><p>或者在 OpenSSL 官方去下载 <a href="https://www.openssl.org/source/">OpenSSL</a></p><p>也可以参考官方文档进行编译：<a href="https://github.com/openssl/openssl/blob/master/NOTES-WINDOWS.md">openssl&#x2F;NOTES-WINDOWS.md at master · openssl&#x2F;openssl</a></p><h2 id="0x04、编译"><a href="#0x04、编译" class="headerlink" title="0x04、编译"></a>0x04、编译</h2><ol><li><p>使用管理员权限打开 vs2017 的开发人员命令提示符</p><div class="tag-plugin image"><div class="image-bg"><img src="../images/Windows下编译Openssl/image-20230928102731717.png"/></div></div><p>打开后切换到 openssl 解压目录：</p><img src="https://raw.githubusercontent.com/holdyounger/ScopeBlog/rc_images/Images/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/images/Windows%E4%B8%8B%E7%BC%96%E8%AF%91Openssl/image-20231010133230852.png" alt="openssl解压目录" style="zoom:50%;" /></li><li><p>配置 Perl，参考官方文档配置</p><ul><li><p><code>perl Configure VC-WIN32</code> if you want 32-bit OpenSSL or</p></li><li><p><code>perl Configure VC-WIN64A</code> if you want 64-bit OpenSSL or</p></li><li><p><code>perl Configure VC-WIN64-ARM</code> if you want Windows on Arm (win-arm64) OpenSSL or</p></li><li><p><code>perl Configure VC-WIN64-CLANGASM-ARM</code> if you want Windows on Arm (win-arm64) OpenSSL with assembly support using clang-cl as assembler or</p></li><li><p><code>perl Configure VC-CLANG-WIN64-CLANGASM-ARM</code> if you want Windows on Arm (win-arm64) OpenSSL using clang-cl as both compiler and assembler or</p></li><li><p><code>perl Configure VC-WIN32-HYBRIDCRT</code> if you want 32-bit OpenSSL dependent on the Universal CRT or</p></li><li><p><code>perl Configure VC-WIN64A-HYBRIDCRT</code> if you want 64-bit OpenSSL dependent on the Universal CRT or</p></li><li><p><code>perl Configure</code> to let Configure figure out the platform</p></li></ul><p><strong>特别注意：</strong>–prefix选项指定的安装路径必须是绝对路径，若不指定，则默认会安装在<code>C:\Program Files (x86)\</code>下面，如果你不是用管理员权限执行，则会出现<code>*Permission Denied*</code> 错误，切记。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl Configure VC-WIN32 --prefix=E:\OpenSSL # 将其安装到 E:\OpenSSL 目录</span><br></pre></td></tr></table></figure></li><li><p><code>nmake</code></p></li><li><p><code>nmake test</code></p></li><li><p><code>namke install</code></p></li></ol><h2 id="0x05、使用"><a href="#0x05、使用" class="headerlink" title="0x05、使用"></a>0x05、使用</h2><p>使用时，在工程引入文件和库文件添加 Openssl 安装目录即可。</p><div class="tag-plugin image"><div class="image-bg"><img src="../images/Windows下编译Openssl/image-20231010133526175.png"/></div></div>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述： windows系统编译OpenSSL 1.1.1版本操作步骤&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Code" scheme="http://example.com/categories/Code/"/>
    
    <category term="网络编程" scheme="http://example.com/categories/Code/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    <category term="libevent" scheme="http://example.com/categories/Code/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/libevent/"/>
    
    
  </entry>
  
  <entry>
    <title>Github profile 配置</title>
    <link href="http://example.com/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/Github%20profile/"/>
    <id>http://example.com/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/Github%20profile/</id>
    <published>2023-09-27T00:51:52.095Z</published>
    <updated>2023-09-27T00:52:48.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Metrics"><a href="#Metrics" class="headerlink" title="Metrics"></a>Metrics</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image github-metrics.svg  %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Metrics&quot;&gt;&lt;a href=&quot;#Metrics&quot; class=&quot;headerlink&quot; title=&quot;Metrics&quot;&gt;&lt;/a&gt;Metrics&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="手册" scheme="http://example.com/categories/%E6%89%8B%E5%86%8C/"/>
    
    <category term="个人配置" scheme="http://example.com/categories/%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
</feed>
