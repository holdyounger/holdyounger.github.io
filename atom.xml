<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oone</title>
  
  <subtitle>固执无罪，梦想无价 | Coding For Knowledge</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-02-08T03:30:36.804Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>mingming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【权限与会话】Windows 令牌</title>
    <link href="http://example.com/A_OS/Windows/%E6%9D%83%E9%99%90%E4%B8%8E%E4%BC%9A%E8%AF%9D/%E3%80%90%E6%9D%83%E9%99%90%E4%B8%8E%E4%BC%9A%E8%AF%9D%E3%80%91Windows%20%E4%BB%A4%E7%89%8C/"/>
    <id>http://example.com/A_OS/Windows/%E6%9D%83%E9%99%90%E4%B8%8E%E4%BC%9A%E8%AF%9D/%E3%80%90%E6%9D%83%E9%99%90%E4%B8%8E%E4%BC%9A%E8%AF%9D%E3%80%91Windows%20%E4%BB%A4%E7%89%8C/</id>
    <published>2024-02-06T16:00:00.000Z</published>
    <updated>2024-02-08T03:30:36.804Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Winodws 令牌详解，关于 windows 初始令牌、主令牌，模拟令牌，关联令牌等概念的说明。</p><p>工具推荐：<a href="https://github.com/diversenok/TokenUniverse">diversenok&#x2F;TokenUniverse: An advanced tool for working with access tokens and Windows security policy.</a></p></blockquote><span id="more"></span><h2 id="0x01-初始令牌"><a href="#0x01-初始令牌" class="headerlink" title="0x01 初始令牌"></a>0x01 初始令牌</h2><p>初始令牌也称访问令牌，是描述进程或线程的安全上下文的对象。令牌中的信息包括与进程或线程关联的用户帐户的标识和特权信息。</p><p>当用户登录时，系统通过将<strong>用户密码与安全数据库</strong>（如域认证中的NTDS或本地认证中的SAM文件）中存储的信息进行比较来验证用户密码。</p><p>如果密码经过验证，则系统将生成<strong>访问令牌</strong>。代表该用户执行的每个进程都有此访问令牌的副本。（通常我们在输入密码登陆进入Windows界面时就是一个生成访问令牌的过程）当线程与安全对象进行交互或尝试执行需要特权的系统任务时，系统使用访问令牌来标识用户。</p><p>访问令牌包含以下信息：</p><pre class="mermaid">flowchart LR    A[访问令牌] --> 用户所在组SID    A --> C[用户账户的安全描述符 SID]    A --> D["标识当前登录会话(logon session)的登录SID"]    A --> E["特权（privilege）:用户或用户组拥有的特权列表"]    A --> F["其他数据"]</pre><p>Access Token的组成</p><ol><li>用户账户的安全标识符(SID)</li><li>用户所属的组的SID</li><li>用于标识当前登陆会话的登陆SID</li><li>用户或用户组所拥有的权限列表</li><li>所有者SID</li><li>主要组的SID</li><li>访问控制列表</li><li>访问令牌的来源</li><li>令牌是主要令牌还是模拟令牌</li><li>限制SID的可选列表</li><li>目前的模拟等级</li><li>其他统计的数据</li></ol><h3 id="初始令牌的创建过程"><a href="#初始令牌的创建过程" class="headerlink" title="初始令牌的创建过程"></a>初始令牌的创建过程</h3><p>Windows Access Token 创建过程，可以参考下 《深入解析 Windows 操作系统 第6版》第六章第8节相关描述</p><ol><li><p>登录主要分为两种形式，一种是非交互式的，一种是交互式的</p><ul><li><p>非交互式的，用户在输入用户名和密码后，由 <code>WinLogon</code> 调用 LSASS(Local Security Authority Subsystem Service) 中的相关函数（<code>LasLogonUser</code>）传递登录信息给认证包</p></li><li><p>对于交互式登录，Windows使用两个标准的认证包∶ <code>Kerberos</code> 和 <code>MSV1_0</code></p></li></ul></li><li><p>认证通过后，LSASS 在本地策略中查找该用户有哪些允许的访问，包括交互方式、网络方式、批方式或服务方式，如果当前所请求的登录不符合数据库中允许</p><p>的访问方式，则此次登录被终止。如果当前请求的登录是允许的，则 LSASS 会加入一些额外的安全ID(SID)，然后在策略数据库中查找用户所有SID的已经被授予的权限，并且把这些特权加入到用户的访问令牌中。</p></li><li><p>当 LSASS 已经积累了所有这些必要的信息时，会调用执行体来创建 &#x3D;&#x3D;访问令牌&#x3D;&#x3D;。执行体</p><ul><li>为交互式登录或服务方式登录创建一个主访问令牌</li><li>为网络方式登录创建一个模仿令牌</li></ul><p>创建成功后， LSASS 复制此令牌，创建一个可将此令牌传递给 WinLogon 的句柄，然后关闭自身句柄。</p></li></ol><p>综上就是 Windows 初始令牌的创建过程。</p><blockquote><p>之后，则是通过 WinLogon 中的令牌创建进程、线程。 进程持有一个主令牌，线程则使用的模拟令牌。</p></blockquote><h2 id="0x02-授权令牌和模拟令牌"><a href="#0x02-授权令牌和模拟令牌" class="headerlink" title="0x02 授权令牌和模拟令牌"></a>0x02 授权令牌和模拟令牌</h2><p>访问令牌（Access Token）是Windows操作系统用描述进程或者线程安全上下文的一个对象。</p><p>Windows下有两种类型的Token令牌：授权令牌和模拟令牌。</p><h3 id="授权令牌（Delegation-Token）"><a href="#授权令牌（Delegation-Token）" class="headerlink" title="授权令牌（Delegation Token）"></a>授权令牌（Delegation Token）</h3><p>也叫主令牌，是由 Windows 内核创建并分配给进程的默认访问令牌，每一个进程有一个主令牌，它描述了与当前进程相关的用户帐户的安全上下文。用于交互式登录（如rdp登录访问）。</p><h3 id="模拟令牌（Impersonation-Token）"><a href="#模拟令牌（Impersonation-Token）" class="headerlink" title="模拟令牌（Impersonation Token）"></a>模拟令牌（Impersonation Token）</h3><p>所在进程的主令牌会自动附加到当前的线程上，作为线程的安全上下文。而线程可以运行在另一个非主令牌的访问令牌下执行，而这个令牌被称为模拟令牌。用于非交互式的会话（利用WMI进行远程访问）。</p><hr><p><em>注：两种令牌会在系统重启或者关机后才会全部清除，不然将会一直在内存中存留。也就是说，如果机器不关机或者重启的话，就会存在散落的令牌。在系统注销后，具有授权令牌的用户会变为模拟令牌 Impersonation Token，但依然有效。默认情况下，当前用户只能看到当前用户自己和比自己权限低的所有访问令牌。</em></p><p>每个进程都有一个主要令牌，用于描述与该进程关联的用户帐户的安全上下文。默认情况下，当进程的线程与安全对象进行交互时，系统使用主令牌。<br>此外，线程可以模拟客户端帐户。模拟允许线程使用客户端的安全上下文与安全对象进行交互。模拟客户端的线程同时具有主令牌和模拟令牌。（出现这种情况是因为服务操作是在寄宿进程中执行，在默认的情况下，服务操作是否具有足够的权限访问某个资源（比如文件）取决于执行寄宿进程Windows帐号的权限设置，而与作为客户端的Windows帐号无关。在有多情况下，我们希望服务操作执行在基于客户端的安全上下文中执行，以解决执行服务进行的帐号权限不足的问题。简单来说就是我们希望不同客户端来访问服务时，服务可以模拟客户端的身份去访问服务，而不是用自己的主进程Token身份去访问。）</p><h3 id="为什么使用模拟令牌"><a href="#为什么使用模拟令牌" class="headerlink" title="为什么使用模拟令牌"></a>为什么使用模拟令牌</h3><p>使用模拟令牌有助于实现权限分离。即使进程本身可能拥有较高的权限，但通过模拟令牌，可以以较低权限的用户身份执行一些敏感操作，从而减小潜在的安全风险。</p><p>除权限分离以外，Windows 令牌机制带来了单点登录和访问控制等众多好处。</p><p>管理员登录时，将为用户创建两个单独的访问令牌：标准用户访问令牌和管理员访问令牌。标准用户访问令牌包含与管理员访问令牌相同的特定于用户的信息，但删除了管理员的 Windows 特权和 SID。此外，执行 explorer.exe 也通过标准令牌来显示桌面，而 explorer.exe 是父进程，所有其他用户启动的进程都从中继承其访问令牌。因此，除非用户批准应用程序使用完整的管理访问令牌，否则所有应用程序都会以标准用户身份运行。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Winodws 令牌详解，关于 windows 初始令牌、主令牌，模拟令牌，关联令牌等概念的说明。&lt;/p&gt;
&lt;p&gt;工具推荐：&lt;a href=&quot;https://github.com/diversenok/TokenUniverse&quot;&gt;diversenok&amp;#x2F;TokenUniverse: An advanced tool for working with access tokens and Windows security policy.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="权限与会话" scheme="http://example.com/categories/A-OS/Windows/%E6%9D%83%E9%99%90%E4%B8%8E%E4%BC%9A%E8%AF%9D/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="令牌" scheme="http://example.com/tags/%E4%BB%A4%E7%89%8C/"/>
    
    <category term="token" scheme="http://example.com/tags/token/"/>
    
  </entry>
  
  <entry>
    <title>【COM】异步通知 ExecNotificationQueryAsync 的使用问题</title>
    <link href="http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/</id>
    <published>2024-02-06T08:37:40.593Z</published>
    <updated>2024-02-08T01:27:50.016Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：异步通知 IWbemServices::ExecNotificationQueryAsync 的使用问题。调用 CancelAsyncCall 之后导致程序崩溃。</p><p>代码参考微软官方示例：<a href="https://learn.microsoft.com/zh-cn/windows/win32/wmisdk/example--receiving-event-notifications-through-wmi-">示例：通过 WMI 接收事件通知 - Win32 apps | Microsoft Learn</a></p></blockquote><h2 id="0x01-复现场景"><a href="#0x01-复现场景" class="headerlink" title="0x01 复现场景"></a>0x01 复现场景</h2><ul><li>环境：windows server 2008</li></ul><p>参考微软官方代码实现一个进程，使用 windbg 加载进程，然后等待进程结束，就能看到 windbg 报错 0xC0000005。</p><h2 id="0x02-dmp分析"><a href="#0x02-dmp分析" class="headerlink" title="0x02 dmp分析"></a>0x02 dmp分析</h2><ol><li><p>报错详情</p><p>主要问题还是访问了空指针导致的，并且是 ecx。是类成员函数调用时出现异常。this 指针为空。</p><img src="/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image-20240206174513878.png" class="" title="image-20240206174513878"></li><li><p>堆栈</p><p>确定是 RPC 调用。下一步查询下 RPC 调用方。</p><p>ole32!GetChannelCallMgr 函数原型：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HRESULT <span class="title">GetChannelCallMgr</span><span class="params">(RPCOLEMESSAGE *pMsg, IUnknown * pStub,</span></span></span><br><span class="line"><span class="params"><span class="function">                          IUnknown *pServer, CRpcChannelBuffer::CServerCallMgr **ppStubBuffer)</span></span></span><br></pre></td></tr></table></figure><p>直接看第一个参数 <code>pMsg</code> 。</p><img src="/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image-20240206174442131.png" class="" title="image-20240206174442131"></li><li><p>查看下调用方</p><p>成员变量 <a href="#reserverd1 变量说明"><code>reserverd1</code></a> 保存了RPC相关信息。 先 <code>dds</code> 再 <code>dt</code> 查看其内容。</p><img src="/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image-20240206174615846.png" class="" title="image-20240206174615846"><img src="/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image-20240206174706711.png" class="" title="image-20240206174706711"><p><code>CAsyncCall</code> 的成员可以查看 <a href="https://github.com/selfrender/Windows-Server-2003/blob/5c6fe3db626b63a384230a1aa6b92ac416b0765f/com/ole32/com/dcomrem/call.hxx#L345">Windows-Server-2003&#x2F;com&#x2F;ole32&#x2F;com&#x2F;dcomrem&#x2F;call.hxx at 5c6fe3db626b63a384230a1aa6b92ac416b0765f · selfrender&#x2F;Windows-Server-2003</a> 中相关源码。</p><p>成员变量 <code>_hRPC</code> 来自于其继承的父类 <code>CMessageCall</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">293</span>   <span class="type">handle_t</span>            _hRpc;      <span class="comment">// Call handle (not binding handle).</span></span><br></pre></td></tr></table></figure><p><code>_hRpc</code> 记录了调用方的句柄。查看 <code>0x0479ba28</code> 内存，在其附近找到了调用方的 PID 和 TID。如下图所示：</p><img src="/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image-20240206174737821.png" class="" title="image-20240206174737821"></li><li><p>看下 PID 对应的进程，如下图所示：</p><p>unsecapp 也就是我们注册的异步通知的通知方。</p><img src="/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image-20240206173846581.png" class="" title="image-20240206173846581"></li></ol><h2 id="0x03-问题分析"><a href="#0x03-问题分析" class="headerlink" title="0x03 问题分析"></a>0x03 问题分析</h2><p>基本分析完 dmp 文件之后，可以确定是我们注册的异步通知在程序结束时被调用了，导致 unsecapp 通知过来之后，调用了空指针。</p><p>为什么会出现这种问题，可以看下 unsecapp 的堆栈，上边已经看到了具体的pid和tid，1b34.1b48, 这就直接看线程 1b38 的堆栈就可以了。</p><p>堆栈如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">   <span class="number">0</span>  Id: <span class="number">1b</span>34<span class="number">.1b</span>38 Suspend: <span class="number">1</span> Teb: <span class="number">7f</span>fdf000 Unfrozen</span><br><span class="line"> # ChildEBP RetAddr      Args to Child              </span><br><span class="line"><span class="number">00</span> <span class="number">0018e8</span>b0 <span class="number">773354</span>ac     <span class="number">76</span>d6a8b7 <span class="number">00000002</span> <span class="number">0018e904</span> ntdll!<span class="built_in">KiFastSystemCallRet</span> (FPO: [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>])</span><br><span class="line"><span class="number">01</span> <span class="number">0018e8</span>b4 <span class="number">76</span>d6a8b7     <span class="number">00000002</span> <span class="number">0018e904</span> <span class="number">00000001</span> ntdll!NtWaitForMultipleObjects+<span class="number">0xc</span> (FPO: [<span class="number">5</span>,<span class="number">0</span>,<span class="number">0</span>])</span><br><span class="line"><span class="number">02</span> <span class="number">0018e950</span> <span class="number">77420f</span>8d     <span class="number">0018e904</span> <span class="number">0018e978</span> <span class="number">00000000</span> kernel32!WaitForMultipleObjectsEx+<span class="number">0x11d</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">03</span> <span class="number">0018e9</span>a4 <span class="number">76832507</span>     <span class="number">0000002</span>c <span class="number">0018e9</span>ec ffffffff USER32!RealMsgWaitForMultipleObjectsEx+<span class="number">0x13c</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">04</span> <span class="number">0018e9</span>cc <span class="number">768325b</span>c     <span class="number">0018e9</span>ec ffffffff <span class="number">0018e9</span>fc ole32!CCliModalLoop::BlockFn+<span class="number">0x97</span> (FPO: [Non-Fpo]) (CONV: thiscall) [d:\longhorn\com\ole32\com\dcomrem\callctrl.cxx @ <span class="number">1162</span>] </span><br><span class="line"><span class="number">05</span> <span class="number">0018e9</span>f4 <span class="number">76938f</span>62     ffffffff <span class="number">002</span>c27a0 <span class="number">0018</span>eb00 ole32!ModalLoop+<span class="number">0x5b</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\chancont.cxx @ <span class="number">211</span>] </span><br><span class="line"><span class="number">06</span> <span class="number">0018</span>ea10 <span class="number">76939</span>ce1     <span class="number">00000000</span> <span class="number">0018</span>eb14 <span class="number">00000000</span> ole32!ThreadSendReceive+<span class="number">0x12c</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">4831</span>] </span><br><span class="line"><span class="number">07</span> <span class="number">0018</span>ea38 <span class="number">76939b</span>4d     <span class="number">0018</span>eb00 <span class="number">002</span>cf4d8 <span class="number">0018</span>eb5c ole32!CRpcChannelBuffer::SwitchAptAndDispatchCall+<span class="number">0x194</span> (FPO: [Non-Fpo]) (CONV: thiscall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">4386</span>] </span><br><span class="line"><span class="number">08</span> <span class="number">0018</span>eb18 <span class="number">76833f</span>94     <span class="number">002</span>cf4d8 <span class="number">0018</span>ec40 <span class="number">0018</span>ec24 ole32!CRpcChannelBuffer::SendReceive2+<span class="number">0xef</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">4009</span>] </span><br><span class="line"><span class="number">09</span> <span class="number">0018</span>eb34 <span class="number">76833f</span>46     <span class="number">0018</span>ec40 <span class="number">0018</span>ec24 <span class="number">002</span>cf4d8 ole32!CCliModalLoop::SendReceive+<span class="number">0x1e</span> (FPO: [Non-Fpo]) (CONV: thiscall) [d:\longhorn\com\ole32\com\dcomrem\callctrl.cxx @ <span class="number">849</span>] </span><br><span class="line"><span class="number">0</span>a <span class="number">0018</span>ebac <span class="number">76853811</span>     <span class="number">002</span>cf4d8 <span class="number">0018</span>ec40 <span class="number">0018</span>ec24 ole32!CAptRpcChnl::SendReceive+<span class="number">0x73</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\callctrl.cxx @ <span class="number">578</span>] </span><br><span class="line"><span class="number">0b</span> <span class="number">0018</span>ec00 <span class="number">7712074</span>c     <span class="number">002</span>cf4d8 <span class="number">0018</span>ec40 <span class="number">0018</span>ec24 ole32!CCtxComChnl::SendReceive+<span class="number">0x1c5</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\ctxchnl.cxx @ <span class="number">734</span>] </span><br><span class="line"><span class="number">0</span>c <span class="number">0018</span>ec18 <span class="number">771207</span>ad     <span class="number">002</span>a37bc <span class="number">0018</span>ecdc <span class="number">771211b</span>0 RPCRT4!NdrProxySendReceive+<span class="number">0x43</span></span><br><span class="line"><span class="number">0</span>d <span class="number">0018</span>ec24 <span class="number">771211b</span>0     <span class="number">45542f</span>97 <span class="number">0018f</span>0d8 <span class="number">070001f</span>3 RPCRT4!NdrpProxySendReceive+<span class="number">0xc</span> (FPO: [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>])</span><br><span class="line"><span class="number">0</span>e <span class="number">0018f</span>09c <span class="number">77120822</span>     <span class="number">70b</span>62ba8 <span class="number">70b</span>621fc <span class="number">0018f</span>0d8 RPCRT4!NdrClientCall2+<span class="number">0x5e9</span></span><br><span class="line"><span class="number">0f</span> <span class="number">0018f</span>0c0 <span class="number">770</span>aeb83     <span class="number">0018f</span>0d8 <span class="number">00000004</span> <span class="number">0018f</span>0f0 RPCRT4!ObjectStublessClient+<span class="number">0x6f</span></span><br><span class="line"><span class="number">10</span> <span class="number">0018f</span>0d0 <span class="number">6f</span>c1a87e     <span class="number">002</span>a37bc <span class="number">00000000</span> <span class="number">80041032</span> RPCRT4!ObjectStubless+<span class="number">0xf</span></span><br><span class="line"><span class="number">11</span> <span class="number">0018f</span>0f0 <span class="number">004b</span>2ec2     <span class="number">00</span>eea0fc <span class="number">00000000</span> <span class="number">80041032</span> fastprox!CSinkProxyBuffer::XSinkFacelet::SetStatus+<span class="number">0x2e</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">12</span> <span class="number">0018f</span>128 <span class="number">770b</span>3419     <span class="number">00262914</span> <span class="number">00000000</span> <span class="number">80041032</span> unsecapp!CStub::SetStatus+<span class="number">0x7b</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">13</span> <span class="number">0018f</span>150 <span class="number">77121</span>d35     <span class="number">004b</span>2e47 <span class="number">0018f</span>350 <span class="number">00000005</span> RPCRT4!Invoke+<span class="number">0x2a</span></span><br><span class="line"><span class="number">14</span> <span class="number">0018f</span>180 <span class="number">771220</span>a1     <span class="number">00000000</span> <span class="number">002</span>aeb9c <span class="number">002</span>df118 RPCRT4!NdrStubCall2+<span class="number">0x28a</span> (FPO: [SEH])</span><br><span class="line"><span class="number">15</span> <span class="number">0018f</span>1c8 <span class="number">770b</span>6e5f     <span class="number">76866918</span> <span class="number">70b</span>62ba8 <span class="number">00000000</span> RPCRT4!NdrStubCall2+<span class="number">0x4ab</span> (FPO: [SEH])</span><br><span class="line"><span class="number">16</span> <span class="number">0018f</span>1cc <span class="number">76866918</span>     <span class="number">70b</span>62ba8 <span class="number">00000000</span> <span class="number">00000000</span> RPCRT4!NdrpClientUnMarshal+<span class="number">0x464</span> (FPO: [SEH])</span><br><span class="line"><span class="number">17</span> <span class="number">0018f</span>574 <span class="number">77122465</span>     <span class="number">002</span>d1e78 <span class="number">002</span>cf658 <span class="number">002</span>c31b8 ole32!NdrOleAllocate</span><br><span class="line"><span class="number">18</span> <span class="number">0018f</span>5c4 <span class="number">6f</span>c1a8b7     <span class="number">002</span>d1e78 <span class="number">002</span>c31b8 <span class="number">002</span>cf658 RPCRT4!CStdStubBuffer_Invoke+<span class="number">0xa0</span> (FPO: [SEH])</span><br><span class="line"><span class="number">19</span> <span class="number">0018f</span>5d8 <span class="number">7693</span>a8c5     <span class="number">00</span>eea174 <span class="number">002</span>c31b8 <span class="number">002</span>cf658 fastprox!CSinkStubBuffer::XSinkStublet::Invoke+<span class="number">0x36</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">1</span>a <span class="number">0018f</span>620 <span class="number">7693</span>aa59     <span class="number">002</span>c31b8 <span class="number">002b</span>d800 <span class="number">002b</span>5eb0 ole32!SyncStubInvoke+<span class="number">0x3c</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">1161</span>] </span><br><span class="line"><span class="number">1b</span> <span class="number">0018f</span>66c <span class="number">768661</span>d6     <span class="number">002</span>c31b8 <span class="number">002</span>cfd60 <span class="number">00</span>eea174 ole32!StubInvoke+<span class="number">0xb9</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">1372</span>] </span><br><span class="line"><span class="number">1</span>c <span class="number">0018f</span>748 <span class="number">768660e7</span>     <span class="number">002</span>cf658 <span class="number">00000000</span> <span class="number">00</span>eea174 ole32!CCtxComChnl::ContextInvoke+<span class="number">0xfa</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\ctxchnl.cxx @ <span class="number">1255</span>] </span><br><span class="line"><span class="number">1</span>d <span class="number">0018f</span>764 <span class="number">76866</span>df5     <span class="number">002</span>c31b8 <span class="number">00000001</span> <span class="number">00</span>eea174 ole32!MTAInvoke+<span class="number">0x1a</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\callctrl.cxx @ <span class="number">2020</span>] </span><br><span class="line"><span class="number">1</span>e <span class="number">0018f</span>790 <span class="number">7693</span>a981     <span class="number">002</span>c31b8 <span class="number">00000001</span> <span class="number">00</span>eea174 ole32!STAInvoke+<span class="number">0x46</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\callctrl.cxx @ <span class="number">1839</span>] </span><br><span class="line"><span class="number">1f</span> <span class="number">0018f</span>7c4 <span class="number">7693</span>a79b     d0908070 <span class="number">002</span>cf658 <span class="number">00</span>eea174 ole32!AppInvoke+<span class="number">0xaa</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">1060</span>] </span><br><span class="line"><span class="number">20</span> <span class="number">0018f</span>8a0 <span class="number">7693</span>ae2d     <span class="number">002</span>c3160 <span class="number">002</span>abff0 <span class="number">00000400</span> ole32!ComInvokeWithLockAndIPID+<span class="number">0x32c</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">1675</span>] </span><br><span class="line"><span class="number">21</span> <span class="number">0018f</span>8c8 <span class="number">76866b</span>cd     <span class="number">002</span>c3160 <span class="number">00000400</span> <span class="number">0029</span>cc10 ole32!ComInvoke+<span class="number">0xc5</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\channelb.cxx @ <span class="number">1445</span>] </span><br><span class="line"><span class="number">22</span> <span class="number">0018f</span>8dc <span class="number">76866b</span>8c     <span class="number">002</span>c3160 <span class="number">0018f</span>99c <span class="number">00000400</span> ole32!ThreadDispatch+<span class="number">0x23</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\chancont.cxx @ <span class="number">298</span>] </span><br><span class="line"><span class="number">23</span> <span class="number">0018f</span>920 <span class="number">7741f</span>d72     <span class="number">00</span>c600f6 <span class="number">00000400</span> <span class="number">0000b</span>abe ole32!ThreadWndProc+<span class="number">0x167</span> (FPO: [Non-Fpo]) (CONV: stdcall) [d:\longhorn\com\ole32\com\dcomrem\chancont.cxx @ <span class="number">654</span>] </span><br><span class="line"><span class="number">24</span> <span class="number">0018f</span>94c <span class="number">7741f</span>e4a     <span class="number">76866</span>aef <span class="number">00</span>c600f6 <span class="number">00000400</span> USER32!InternalCallWinProc+<span class="number">0x23</span></span><br><span class="line"><span class="number">25</span> <span class="number">0018f</span>9c4 <span class="number">7742018</span>d     <span class="number">00000000</span> <span class="number">76866</span>aef <span class="number">00</span>c600f6 USER32!UserCallWinProcCheckWow+<span class="number">0x14b</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">26</span> <span class="number">0018f</span>a28 <span class="number">7742022b</span>     <span class="number">76866</span>aef <span class="number">00000000</span> <span class="number">0018f</span>a68 USER32!DispatchMessageWorker+<span class="number">0x322</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">27</span> <span class="number">0018f</span>a38 <span class="number">004b</span>4fd7     <span class="number">0018f</span>a4c <span class="number">71b</span>6d20c <span class="number">004b</span>9118 USER32!DispatchMessageW+<span class="number">0xf</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">28</span> <span class="number">0018f</span>a68 <span class="number">004b</span>6749     <span class="number">457</span>c3509 <span class="number">004b</span>954c <span class="number">00000001</span> unsecapp!MessageLoop+<span class="number">0x28</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">29</span> <span class="number">0018f</span>a98 <span class="number">004b</span>41a2     <span class="number">00000002</span> <span class="number">00262228</span> <span class="number">002614</span>a0 unsecapp!main+<span class="number">0x38c</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">2</span>a <span class="number">0018f</span>adc <span class="number">76</span>d6d411     <span class="number">7f</span>fd7000 <span class="number">0018f</span>b28 <span class="number">7731152f</span> unsecapp!_initterm_e+<span class="number">0x163</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">2b</span> <span class="number">0018f</span>ae8 <span class="number">7731152f</span>     <span class="number">7f</span>fd7000 <span class="number">772f</span>5944 <span class="number">00000000</span> kernel32!BaseThreadInitThunk+<span class="number">0xe</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">2</span>c <span class="number">0018f</span>b28 <span class="number">77311502</span>     <span class="number">004b</span>42dc <span class="number">7f</span>fd7000 ffffffff ntdll!__RtlUserThreadStart+<span class="number">0x23</span> (FPO: [Non-Fpo])</span><br><span class="line"><span class="number">2</span>d <span class="number">0018f</span>b40 <span class="number">00000000</span>     <span class="number">004b</span>42dc <span class="number">7f</span>fd7000 <span class="number">00000000</span> ntdll!_RtlUserThreadStart+<span class="number">0x1b</span> (FPO: [Non-Fpo])</span><br></pre></td></tr></table></figure><p> 可以看到消息都是通过 <code>DispatchMessageW</code> 发送出去的。在后续rpc通知的时候，客户端可能已经调用了 <code>CancelAsyncCall</code>。当rpc执行的时候，就会出现崩溃问题。</p><h2 id="0x04-解决方法"><a href="#0x04-解决方法" class="headerlink" title="0x04 解决方法"></a>0x04 解决方法</h2><p>在 <code>CancelAsyncCall</code> 方法之后让当前线程阻塞一点时间，等待上次 unsecapp rpc调用结束，再调用 release 释放 <code>IWbemServices</code> 等相关对象。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p><a id="reserverd1 变量说明">reserverd1 变量说明</a>:</p><p>还是这个项目 <a href="https://github.com/selfrender/Windows-Server-2003/">selfrender&#x2F;Windows-Server-2003: This is the leaked source code of Windows Server 2003</a></p><p>先看一下 CMessageCall 作为 CAsyncCall 的父类是有哪些成员的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-----------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Class:      CMessageCall</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Purpose:    This class adds a message to the call info.  The</span></span><br><span class="line"><span class="comment">//              proxie&#x27;s message is copied so the call can be</span></span><br><span class="line"><span class="comment">//              canceled without stray pointer references.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMessageCall</span> : <span class="keyword">public</span> ICancelMethodCalls, <span class="keyword">public</span> IMessageParam</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// Constructor and destructor</span></span><br><span class="line">    <span class="built_in">CMessageCall</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">CMessageCall</span>();</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">UninitCallObject</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// called before a call starts and after a call completes.</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> HRESULT <span class="title">InitCallObject</span><span class="params">(CALLCATEGORY callcat,</span></span></span><br><span class="line"><span class="params"><span class="function">                           RPCOLEMESSAGE     *message,</span></span></span><br><span class="line"><span class="params"><span class="function">                           DWORD              flags,</span></span></span><br><span class="line"><span class="params"><span class="function">                           REFIPID            ipidServer,</span></span></span><br><span class="line"><span class="params"><span class="function">                           DWORD              destctx,</span></span></span><br><span class="line"><span class="params"><span class="function">                           COMVERSION         version,</span></span></span><br><span class="line"><span class="params"><span class="function">                           CChannelHandle    *handle)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IUnknown methods</span></span><br><span class="line">    <span class="built_in">STDMETHOD</span>(QueryInterface)(REFIID riid, LPVOID *ppv)   = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">STDMETHOD_</span>(ULONG,AddRef)(<span class="type">void</span>)                        = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">STDMETHOD_</span>(ULONG,Release)(<span class="type">void</span>)                       = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ICancelMethodCalls methods</span></span><br><span class="line">    <span class="built_in">STDMETHOD</span>(Cancel)(ULONG ulSeconds)                    = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">STDMETHOD</span>(TestCancel)(<span class="type">void</span>)                           = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Virtual methods needed by every call type for cancel support</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span>    <span class="title">CallCompleted</span>   <span class="params">( HRESULT hrRet )</span>     </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span>    <span class="title">CallFinished</span>    <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> HRESULT <span class="title">CanDispatch</span>     <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> HRESULT <span class="title">WOWMsgArrived</span>   <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> HRESULT <span class="title">GetState</span>        <span class="params">( DWORD *pdwState )</span>   </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL    <span class="title">IsCallDispatched</span><span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL    <span class="title">IsCallCompleted</span> <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL    <span class="title">IsCallCanceled</span>  <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL    <span class="title">IsCancelIssued</span>  <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL    <span class="title">HasWOWMsgArrived</span><span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL    <span class="title">IsClientWaiting</span> <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span>    <span class="title">AckCancel</span>       <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> HRESULT <span class="title">Cancel</span>          <span class="params">(BOOL fModalLoop,</span></span></span><br><span class="line"><span class="params"><span class="function">                                     ULONG ulTimeout)</span>     </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> HRESULT <span class="title">AdvCancel</span>       <span class="params">()</span>                    </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span>    <span class="title">Abort</span><span class="params">()</span>         </span>&#123; <span class="built_in">Win4Assert</span>(!<span class="string">&quot;Abort Called&quot;</span>); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Query methods</span></span><br><span class="line">    <span class="function">BOOL <span class="title">ClientAsync</span><span class="params">()</span>     </span>&#123; <span class="keyword">return</span> _iFlags &amp; CALLFLAG_CLIENTASYNC; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">ServerAsync</span><span class="params">()</span>     </span>&#123; <span class="keyword">return</span> _iFlags &amp; CALLFLAG_SERVERASYNC; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">CancelEnabled</span><span class="params">()</span>   </span>&#123; <span class="keyword">return</span> _iFlags &amp; CALLFLAG_CANCELENABLED; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">IsClientSide</span><span class="params">()</span>    </span>&#123; <span class="keyword">return</span> !(_iFlags &amp; server_cs); &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">FakeAsync</span><span class="params">()</span>       </span>&#123; <span class="keyword">return</span> _iFlags &amp; fake_async_cs; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">FreeThreaded</span><span class="params">()</span>    </span>&#123; <span class="keyword">return</span> _iFlags &amp; freethreaded_cs; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Lock</span><span class="params">()</span>            </span>&#123; _iFlags |= locked_cs; &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> DBG == 1</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetNAToMTAFlag</span><span class="params">()</span>  </span>&#123;_iFlags |= leave_natomta_cs;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">ResetNAToMTAFlag</span><span class="params">()</span></span>&#123;_iFlags &amp;= ~leave_natomta_cs;&#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">IsNAToMTAFlagSet</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> _iFlags &amp; leave_natomta_cs;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetNAToSTAFlag</span><span class="params">()</span>  </span>&#123;_iFlags |= leave_natosta_cs;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">ResetNAToSTAFlag</span><span class="params">()</span></span>&#123;_iFlags &amp;= ~leave_natosta_cs;&#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">IsNAToSTAFlagSet</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> _iFlags &amp; leave_natosta_cs;&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>    </span></span><br><span class="line">    <span class="function">BOOL <span class="title">Locked</span><span class="params">()</span>          </span>&#123; <span class="keyword">return</span> _iFlags &amp; locked_cs; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">Neutral</span><span class="params">()</span>         </span>&#123; <span class="keyword">return</span> _iFlags &amp; neutral_cs; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">ProcessLocal</span><span class="params">()</span>    </span>&#123; <span class="keyword">return</span> _iFlags &amp; process_local_cs; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">ThreadLocal</span><span class="params">()</span>     </span>&#123; <span class="keyword">return</span> _iFlags &amp; thread_local_cs; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">Proxy</span><span class="params">()</span>           </span>&#123; <span class="keyword">return</span> _iFlags &amp; proxy_cs; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">Server</span><span class="params">()</span>          </span>&#123; <span class="keyword">return</span> _iFlags &amp; server_cs; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get methods</span></span><br><span class="line">    <span class="function">DWORD <span class="title">GetTimeout</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">DWORD <span class="title">GetDestCtx</span><span class="params">()</span>           </span>&#123; <span class="keyword">return</span> _destObj.<span class="built_in">GetDestCtx</span>(); &#125;</span><br><span class="line">    <span class="function">COMVERSION &amp;<span class="title">GetComVersion</span><span class="params">()</span>  </span>&#123; <span class="keyword">return</span> _destObj.<span class="built_in">GetComVersion</span>(); &#125;</span><br><span class="line">    <span class="function">CCtxCall *<span class="title">GetClientCtxCall</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> m_pClientCtxCall; &#125;</span><br><span class="line">    <span class="function">CCtxCall *<span class="title">GetServerCtxCall</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> m_pServerCtxCall; &#125;</span><br><span class="line">    <span class="function">BOOL <span class="title">GetErrorFromPolicy</span><span class="params">()</span>    </span>&#123; <span class="keyword">return</span> (_iFlags &amp; CALLFLAG_ERRORFROMPOLICY); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">HRESULT      <span class="title">SetCallerhWnd</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">HWND         <span class="title">GetCallerhWnd</span><span class="params">()</span>  </span>&#123; <span class="keyword">return</span> _hWndCaller; &#125;</span><br><span class="line">    <span class="function">HANDLE       <span class="title">GetEvent</span><span class="params">()</span>       </span>&#123; <span class="keyword">return</span> _hEvent; &#125;</span><br><span class="line">    <span class="function">CALLCATEGORY <span class="title">GetCallCategory</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> _callcat; &#125;</span><br><span class="line">    <span class="function">HRESULT      <span class="title">GetResult</span><span class="params">()</span>      </span>&#123; <span class="keyword">return</span> _hResult; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span>         <span class="title">SetResult</span><span class="params">(HRESULT hr)</span>  </span>&#123; _hResult = hr; &#125;</span><br><span class="line">    <span class="function">DWORD        <span class="title">GetFault</span><span class="params">()</span>       </span>&#123; <span class="keyword">return</span> _server_fault; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span>         <span class="title">SetFault</span><span class="params">(DWORD fault)</span> </span>&#123; _server_fault = fault; &#125;</span><br><span class="line">    <span class="function">IPID &amp;       <span class="title">GetIPID</span><span class="params">()</span>        </span>&#123; <span class="keyword">return</span> _ipid; &#125;</span><br><span class="line">    <span class="function">HANDLE       <span class="title">GetSxsActCtx</span><span class="params">()</span>   </span>&#123; <span class="keyword">return</span> _hSxsActCtx; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set methods</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetThreadLocal</span><span class="params">(BOOL fThreadLocal)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetClientCtxCall</span><span class="params">(CCtxCall *pCtxCall)</span> </span>&#123; m_pClientCtxCall = pCtxCall; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetServerCtxCall</span><span class="params">(CCtxCall *pCtxCall)</span> </span>&#123; m_pServerCtxCall = pCtxCall; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetClientAsync</span><span class="params">()</span>                     </span>&#123; _iFlags |= CALLFLAG_CLIENTASYNC; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetServerAsync</span><span class="params">()</span>                     </span>&#123; _iFlags |= CALLFLAG_SERVERASYNC; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetCancelEnabled</span><span class="params">()</span>                   </span>&#123; _iFlags |= CALLFLAG_CANCELENABLED; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetErrorFromPolicy</span><span class="params">()</span>                 </span>&#123; _iFlags |= CALLFLAG_ERRORFROMPOLICY; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">ResetErrorFromPolicy</span><span class="params">()</span>               </span>&#123; _iFlags &amp;= ~CALLFLAG_ERRORFROMPOLICY; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetSxsActCtx</span><span class="params">(HANDLE hCtx)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Other methods</span></span><br><span class="line">    <span class="function">HRESULT <span class="title">RslvCancel</span><span class="params">(DWORD &amp;dwSignal, HRESULT hrIn,</span></span></span><br><span class="line"><span class="params"><span class="function">                       BOOL fPostMsg, CCliModalLoop *pCML)</span></span>;    </span><br><span class="line">                       </span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="comment">// Call object fields</span></span><br><span class="line">    CALLCATEGORY        _callcat;   <span class="comment">// call category</span></span><br><span class="line">    DWORD               _iFlags;    <span class="comment">// EChannelState</span></span><br><span class="line">    SCODE               _hResult;   <span class="comment">// HRESULT or exception code</span></span><br><span class="line">    HANDLE              _hEvent;    <span class="comment">// caller wait event</span></span><br><span class="line">    HWND                _hWndCaller;<span class="comment">// caller apartment hWnd (only used InWow)</span></span><br><span class="line">    IPID                _ipid;      <span class="comment">// ipid of interface call is being made on</span></span><br><span class="line">    HANDLE              _hSxsActCtx;<span class="comment">// Activation context active in the caller&#x27;s context</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// Channel fields</span></span><br><span class="line">    DWORD               _server_fault;</span><br><span class="line">    CDestObject         _destObj;</span><br><span class="line">    <span class="type">void</span>               *_pHeader;</span><br><span class="line">    CChannelHandle     *_pHandle;</span><br><span class="line">    <span class="type">handle_t</span>            _hRpc;      <span class="comment">// Call handle (not binding handle).</span></span><br><span class="line">    IUnknown           *_pContext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Structure</span></span><br><span class="line">    RPCOLEMESSAGE        message;</span><br><span class="line">    SChannelHookCallInfo hook;</span><br><span class="line">    DWORD                _dwErrorBufSize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="comment">// Cancel fields</span></span><br><span class="line">    ULONG     m_ulCancelTimeout;   <span class="comment">// Seconds to wait before canceling the call</span></span><br><span class="line">    DWORD     m_dwStartCount;      <span class="comment">// Tick count at the time the call was made</span></span><br><span class="line">    CCtxCall *m_pClientCtxCall;    <span class="comment">// Client side context call object</span></span><br><span class="line">    CCtxCall *m_pServerCtxCall;    <span class="comment">// Server side context call object</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>134行 <code>message</code> 成员的结构体就是我们用来解析 reserved1 成员时使用的结构体。</li></ul><p>可以使用 <code>RPCOLEMESSAGE</code> 的原因就是因为在 <code>CAsyncCall</code> 的另外一个函数中，当 RPC 服务端响应时，reserved1 被 <code>_hRPC</code> 赋值了。而 <code>_hRpc</code> 则是在rpc建立连接时绑定的（调用函数为 <a href="https://learn.microsoft.com/zh-cn/windows/win32/api/rpcdce/nf-rpcdce-rpcbindinginqauthinfoexw">RpcBindingInqAuthInfoExW 函数 (rpcdce.h) - Win32 apps | Microsoft Learn</a>）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">CAsyncCall::ServerReply</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Win4Assert</span>( _hRpc != <span class="literal">NULL</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_hResult != S_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">I_RpcAsyncAbortCall</span>( &amp;_AsyncState, _hResult );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Ignore errors because replies can fail.</span></span><br><span class="line">        message.reserved1  = _hRpc;</span><br><span class="line">        <span class="built_in">I_RpcSend</span>( (RPC_MESSAGE *) &amp;message );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：异步通知 IWbemServices::ExecNotificationQueryAsync 的使用问题。调用 CancelAsyncCall 之后导致程序崩溃。&lt;/p&gt;
&lt;p&gt;代码参考微软官方示例：&lt;a href=&quot;https://lear</summary>
      
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="COM" scheme="http://example.com/categories/A-OS/Windows/COM/"/>
    
    
    <category term="COM" scheme="http://example.com/tags/COM/"/>
    
    <category term="RPC" scheme="http://example.com/tags/RPC/"/>
    
    <category term="调试" scheme="http://example.com/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>【服务】交互式服务</title>
    <link href="http://example.com/A_OS/Windows/%E6%9C%8D%E5%8A%A1/%E3%80%90%E6%9C%8D%E5%8A%A1%E3%80%91%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9C%8D%E5%8A%A1/"/>
    <id>http://example.com/A_OS/Windows/%E6%9C%8D%E5%8A%A1/%E3%80%90%E6%9C%8D%E5%8A%A1%E3%80%91%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9C%8D%E5%8A%A1/</id>
    <published>2024-02-04T16:00:00.000Z</published>
    <updated>2024-02-06T05:25:05.171Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：交互式服务是什么？</p><p>参考链接：</p><ul><li><a href="https://baike.baidu.com/item/%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%A3%80%E6%B5%8B/3358336">交互式服务检测_百度百科</a></li><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/services/interactive-services?redirectedfrom=MSDN">交互式服务 - Win32 apps | Microsoft Learn</a></li></ul></blockquote><span id="more"></span><h2 id="0x01-说明"><a href="#0x01-说明" class="headerlink" title="0x01 说明"></a>0x01 说明</h2><p>交互式服务是windows的一个服务程序。</p><blockquote><p><a href="https://baike.baidu.com/item/%E4%BA%A4%E4%BA%92/6964417?fromModule=lemma_inlink">交互</a>式服务检测是[Microsoft Windows](<a href="https://baike.baidu.com/item/Microsoft">https://baike.baidu.com/item/Microsoft</a> Windows&#x2F;0?fromModule&#x3D;lemma_inlink)对Windows Vista以前的交互式服务在Windows Vista及以后的操作系统中无法正常工作的问题（Session 0隔离）给出的应对方案。然而，此方案并不能较好的解决问题（需切换窗口站），故不建议使用在Windows Vista及以后的系统中使用交互式服务。</p><p>服务描述：启用交互服务需要<a href="https://baike.baidu.com/item/%E7%94%A8%E6%88%B7/3621489?fromModule=lemma_inlink">用户</a><a href="https://baike.baidu.com/item/%E8%BE%93%E5%85%A5/5481954?fromModule=lemma_inlink">输入</a>时进行用户通知，这样，便可以在交互服务创建的对话框出现时访问这些<a href="https://baike.baidu.com/item/%E5%AF%B9%E8%AF%9D%E6%A1%86/2152869?fromModule=lemma_inlink">对话框</a>。如果停止此服务，则对新交互服务对话框的通知将无法正常运行，而且可能无法访问这些交互服务对话框。如果已禁用此服务，则不再有新的交互服务对话框通知，也无法访问这些<a href="https://baike.baidu.com/item/%E5%AF%B9%E8%AF%9D%E6%A1%86/2152869?fromModule=lemma_inlink">对话框</a>。</p></blockquote><style>.johznhlvjzss{zoom:67%;}</style><img src="/A_OS/Windows/%E6%9C%8D%E5%8A%A1/%E3%80%90%E6%9C%8D%E5%8A%A1%E3%80%91%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9C%8D%E5%8A%A1/image-20240205141310464.png" class="johznhlvjzss" alt="image-20240205141310464"><p>通俗简单的说就是，服务一般都是控制台应用程序，有时候可能需要与用户交互，由此设计了一个专门为在没有图形用户界面（GUI）的情况下可以实现交互的服务。而这个服务就是 <code>UIDDetect</code> ，也即 <code>Interactive Services Detection</code>。</p><blockquote><p>❗❗❗ 从 Windows Vista 起，服务无法直接与用户进行交互。因此，不应在新代码中使用标题为“使用交互服务”一节中提到的技术。</p></blockquote><h2 id="使用及注意事项"><a href="#使用及注意事项" class="headerlink" title="使用及注意事项"></a>使用及注意事项</h2><p>参考微软关于交互式服务的描述文章即可。<a href="https://learn.microsoft.com/zh-cn/windows/win32/services/interactive-services?redirectedfrom=MSDN">交互式服务 - Win32 apps | Microsoft Learn</a></p><h3 id="如何关闭"><a href="#如何关闭" class="headerlink" title="如何关闭"></a>如何关闭</h3><p>以下注册表项包含一个值 <strong>NoInteractiveServices</strong>，该值控制SERVICE_INTERACTIVE_PROCESS的效果：</p><p><strong>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Windows</strong></p><ul><li><p><strong>NoInteractiveServices</strong> 值默认为 1，这意味着无论服务是否具有<strong>SERVICE_INTERACTIVE_PROCESS</strong>，都不允许以交互方式运行任何服务。</p></li><li><p>当 <strong>NoInteractiveServices</strong> 设置为 0 时，允许具有 <strong>SERVICE_INTERACTIVE_PROCESS</strong> 的服务以交互方式运行。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：交互式服务是什么？&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://baike.baidu.com/item/%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%A3%80%E6%B5%8B/3358336&quot;&gt;交互式服务检测_百度百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/windows/win32/services/interactive-services?redirectedfrom=MSDN&quot;&gt;交互式服务 - Win32 apps | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="服务" scheme="http://example.com/categories/A-OS/Windows/%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="系统服务" scheme="http://example.com/tags/%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="服务" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>【环境搭建】Exchange Server 2016 CU21</title>
    <link href="http://example.com/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/"/>
    <id>http://example.com/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/</id>
    <published>2024-02-02T05:49:50.778Z</published>
    <updated>2024-02-04T03:23:58.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Exchange Server 2016 CU21安装和配置，安装 Exchange 需要目标服务器必须是 AD 域的成员。</p><p>Windows Server 2016 安装和配置参考 <a href="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/" title="【环境搭建】windows Server 2016 AD域控搭建">【环境搭建】windows Server 2016 AD域控搭建</a></p></blockquote><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://msdn.itellyou.cn/">MSDN, 我告诉你 - 做一个安静的工具站</a> 在MSDN中下载对应的版本</p><p>安装一下依赖的组件：（参考<a href="https://docs.microsoft.com/zh-cn/exchange/plan-and-deploy/prerequisites?view=exchserver-2016%EF%BC%89">https://docs.microsoft.com/zh-cn/exchange/plan-and-deploy/prerequisites?view=exchserver-2016）</a></p><p>1.NET Framework 4.8<br><a href="https://download.visualstudio.microsoft.com/download/pr/014120d7-d689-4305-befd-3cb711108212/0fd66638cde16859462a6243a4629a50/ndp48-x86-x64-allos-enu.exe">https://download.visualstudio.microsoft.com/download/pr/014120d7-d689-4305-befd-3cb711108212/0fd66638cde16859462a6243a4629a50/ndp48-x86-x64-allos-enu.exe</a></p><p>2.安装Visual C++ Redistributable Package for Visual Studio 2012<br><a href="https://www.microsoft.com/en-us/download/details.aspx?id=30679">https://www.microsoft.com/en-us/download/details.aspx?id=30679</a></p><p>3.Visual C++ 2013 Redistributable Package<br><a href="https://support.microsoft.com/zh-cn/topic/update-for-visual-c-2013-redistributable-package-d8ccd6a5-4e26-c290-517b-8da6cfdf4f10">https://support.microsoft.com/zh-cn/topic/update-for-visual-c-2013-redistributable-package-d8ccd6a5-4e26-c290-517b-8da6cfdf4f10</a></p><p>4.通过Power Shell安装Exchange必备的Windows组件</p><p>由于我们安装的 2016 版本，可以直接直接使用有安装向导的 Exchange 邮箱服务器。 参考 <a href="https://learn.microsoft.com/zh-cn/exchange/plan-and-deploy/deploy-new-installations/install-mailbox-role?view=exchserver-2016">使用安装向导安装 Exchange 邮箱服务器 | Microsoft Learn</a></p><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><p>务必安装以下几个模块：</p><ol><li><p>安装 .Net FrameWork 4.8</p><p>下载链接：<a href="https://download.visualstudio.microsoft.com/download/pr/014120d7-d689-4305-befd-3cb711108212/0fd66638cde16859462a6243a4629a50/ndp48-x86-x64-allos-enu.exe">https://download.visualstudio.microsoft.com/download/pr/014120d7-d689-4305-befd-3cb711108212/0fd66638cde16859462a6243a4629a50/ndp48-x86-x64-allos-enu.exe</a></p></li><li><p>安装 KB3206632</p><p>下载链接：<a href="https://catalog.update.microsoft.com/Search.aspx?q=KB3206632">Microsoft Update Catalog</a></p></li><li><p>安装 Unified Communications Managed API 4.0 Runtime</p><p>下载链接：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=34992">Download Unified Communications Managed API 4.0 Runtime from Official Microsoft Download Center</a></p></li><li></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>如有特殊需求，可不使用推荐设置，如无，则使用推荐设置更方便。</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240202145042525.png" class="" title="image-20240202145042525"><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240202161205431.png" class="" title="image-20240202161205431"><h3 id="使用推荐设置"><a href="#使用推荐设置" class="headerlink" title="使用推荐设置"></a>使用推荐设置</h3><p>直接安装即可。不使用推荐设置情况下基本与推荐设置一致。</p><ol><li><p>服务器角色选择</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240202161654405.png" class="" title="image-20240202161654405"></li><li><p>安装空间和位置，默认</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240202161630246.png" class="" title="image-20240202161630246"></li><li><p>Exchange 组织，输入组织名称，可以勾选按照 AD拆分权限应用于 Exchange 组织（如果是在域控服务器上，则不可以勾选）</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240202162003990.png" class="" title="image-20240202162003990"></li><li><p>恶意软件防护设置，选择是否勾选，如果勾选，需要联网下载反恶意软件引擎。</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240202162101339.png" class="" title="image-20240202162101339"></li><li><p>准备情况检查，等待检查完成选择安装即可。</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240204100700331.png" class="" title="image-20240204100700331"></li><li><p>安装结束</p></li></ol><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>默认安装完成后会有体验天数</p><ul><li><p>邮箱管理登录页面：<a href="https://localhost/ecp">https://localhost/ecp</a></p></li><li><p>个人邮箱用户登录页面：<a href="https://localhost/owa">https://localhost/owa</a></p></li></ul><p>当然安装完成后也支持POP3，IMAP服务 详情在服务里面启动就可以进行配置</p><ol><li><p>配置语言和时区</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240204111516440.png" class="" title="image-20240204111516440"></li><li><p>登录个人邮箱</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240204111651306.png" class="" title="image-20240204111651306"></li><li><p>选择是否开启 IMAP4、POP3</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Exchange-2016/image-20240204112137483.png" class="" title="image-20240204112137483"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Exchange Server 2016 CU21安装和配置，安装 Exchange 需要目标服务器必须是 AD 域的成员。&lt;/p&gt;
&lt;p&gt;Windows Server 2016 安装和配置参考 &lt;a href=&quot;/A_OS/Windows/</summary>
      
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="环境搭建" scheme="http://example.com/categories/A-OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="环境搭建" scheme="http://example.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="exchange" scheme="http://example.com/tags/exchange/"/>
    
  </entry>
  
  <entry>
    <title>【环境搭建】windows Server 2016 AD域控搭建</title>
    <link href="http://example.com/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://example.com/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-02-02T01:47:12.077Z</published>
    <updated>2024-02-02T08:07:04.396Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：windows server 2016 虚拟机安装及AD域控搭建</p></blockquote><h2 id="安装windows-server-2016"><a href="#安装windows-server-2016" class="headerlink" title="安装windows server 2016"></a>安装windows server 2016</h2><h3 id="下载安装系统"><a href="#下载安装系统" class="headerlink" title="下载安装系统"></a>下载安装系统</h3><p>在 MSDN 找到 windows server 2016 下载，下载完成后创建 VM 虚拟机，安装 windows server 2016 系统。安装的时候选择带&#x3D;&#x3D;图形界面&#x3D;&#x3D;的。</p><ul><li>MSDN网站： <a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></li></ul><h2 id="配置AD域环境"><a href="#配置AD域环境" class="headerlink" title="配置AD域环境"></a>配置AD域环境</h2><blockquote><p>AD域相关文章：</p><ul><li><a href="/A_OS/Windows/API/%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E5%9F%9F%E5%90%8D/" title="【WINAPI】系统获取系统主机域名">【WINAPI】系统获取系统主机域名</a></li><li><a href="/categories/A-OS/Windows/AD/" title="AD">【AD域】</a></li></ul></blockquote><h3 id="安装-DNS-服务器"><a href="#安装-DNS-服务器" class="headerlink" title="安装 DNS 服务器"></a>安装 DNS 服务器</h3><ol><li><p>修改ip为静态ip</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202115421742.png" class="" title="image-20240202115421742"></li><li><p>添加 DNS 服务器</p><ol><li>开始之前 -&gt; 下一步</li><li>安装类型 -&gt; 下一步</li><li>服务器选择 -&gt; 下一步</li><li>服务器角色</li></ol><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202115211360.png" class="" title="image-20240202115211360"><ol start="5"><li>功能 -&gt; 下一步</li><li>确认 -&gt; 安装</li></ol></li><li><p>等待安装结束</p></li></ol><h3 id="安装-Active-Directory-域服务"><a href="#安装-Active-Directory-域服务" class="headerlink" title="安装 Active Directory 域服务"></a>安装 Active Directory 域服务</h3><ol><li><p>添加角色和功能</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202102306766.png" class="" title="image-20240202102306766"></li><li><p>开始之前 -&gt; 下一步</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202102701145.png" class="" title="image-20240202102701145"></li><li><p>安装类型 -&gt; 下一步</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202102937174.png" class="" title="image-20240202102937174"></li><li><p>服务器选择 -&gt; 下一步</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202103027512.png" class="" title="image-20240202103027512"></li><li><p>服务器角色 -&gt; Active Directory 域服务</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202103149654.png" class="" title="image-20240202103149654"><ol><li>添加角色功能向导 -&gt; 添加功能</li></ol><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202103259839.png" class="" title="image-20240202103259839"></li><li><p>服务器角色 -&gt; 下一步</p></li><li><p>功能 -&gt; 下一步</p></li><li><p>AD DS -&gt; 下一步</p></li><li><p>确认</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202111126038.png" class="" title="image-20240202111126038"></li><li><p>最后等待安装完成即可。</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202112511882.png" class="" title="image-20240202112511882"></li></ol><h3 id="配置-AD-DS"><a href="#配置-AD-DS" class="headerlink" title="配置 AD DS"></a>配置 AD DS</h3><ol><li><p>安装完成后，点击右上角 <kbd>更多</kbd> 开始配置</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202112829371.png" class="" title="image-20240202112829371"></li><li><p>将此服务器提升为域控制器</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202112916222.png" class="" title="image-20240202112916222"></li><li><p>部署配置 -&gt; 添加新林</p><p>如果是公司的首台域控制器，选择“添加新林”，自定义公司的根域名，域名命令规则xxx.com，为什么要用.com结尾呢？一般来说.com注册用户为公司或企业。</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202114002063.png" class="" title="image-20240202114002063"></li><li><p>域控制器选项 -&gt; 密码 -&gt; 下一步</p><p>新林和根域的功能级别，默认Windows Server 2016。</p><p>指定域控制器功能，域名系统（DNS）服务器，全局编录（GC）都是默认安装在此域控服务器上。</p><p>设置目录服务器叫还原模式（DSRM）密码。Directory Services Restore Mode，简称DSRM，又称目录服务恢复模式。是Windows域控制器的服务器安全模式启动选项。DSRM允许管理员用来修复或还原修复或重建活动目录数据库。</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202114646020.png" class="" title="image-20240202114646020"></li><li><p>DNS 选项 -&gt; 下一步</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202120022401.png" class="" title="image-20240202120022401"></li><li><p>其他选项 -&gt; 下一步</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202120102151.png" class="" title="image-20240202120102151"></li><li><p>路径</p><p>AD DS数据库、日志文件和SYSVOL的文件存储的默认位置。</p><p>Ntds.dit：存储活动目录数据库文件，存储域控制器的所有活动目录对象。</p><p>Edb*.log：存储日志文件，默认日志文件Edb.log。</p><p>SYSVOL，它是用来存储域公共文件服务器副本的共享文件夹，例如我们用得最多的组策略设置、脚本等都是存在这个共享目录中的，script脚本文件，Netlogon共享文件，Sysvol共享文件。</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/204750384.png" class="" title="12.png"></li><li><p>查看选项 -&gt; 下一步</p></li><li><p>先决条件检查 -&gt; 安装</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202120300418.png" class="" title="image-20240202120300418"></li><li><p>等待安装结果</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202120559610.png" class="" title="image-20240202120559610"></li><li><p>安装结束，安装完成后需要重启</p></li></ol><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%9F%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20240202121702652.png" class="" title="image-20240202121702652">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：windows server 2016 虚拟机安装及AD域控搭建&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装windows-server-2016&quot;&gt;&lt;a href=&quot;#安装windows-server-2016&quot; class=</summary>
      
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="环境搭建" scheme="http://example.com/categories/A-OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="AD" scheme="http://example.com/tags/AD/"/>
    
    <category term="环境搭建" scheme="http://example.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>【Powershell】获取本地用户和组</title>
    <link href="http://example.com/A_OS/Windows/cmd/%E3%80%90Powershell%E3%80%91%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84/"/>
    <id>http://example.com/A_OS/Windows/cmd/%E3%80%90Powershell%E3%80%91%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84/</id>
    <published>2024-01-23T16:00:00.000Z</published>
    <updated>2024-01-24T02:05:58.119Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：在 Power Shell 中获取本地用户和组，以及组成员</p></blockquote><span id="more"></span><h2 id="获取本地相关的命令"><a href="#获取本地相关的命令" class="headerlink" title="获取本地相关的命令"></a>获取本地相关的命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\holdy&gt; <span class="built_in">get-command</span> <span class="literal">-name</span> *local*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出如下所示：</span></span><br><span class="line"><span class="comment"># CommandType     Name                                               Version    Source</span></span><br><span class="line"><span class="comment"># -----------     ----                                               -------    ------</span></span><br><span class="line"><span class="comment"># Function        Enable-BCLocal                                     1.0.0.0    BranchCache</span></span><br><span class="line"><span class="comment"># Function        Get-DscLocalConfigurationManager                   1.1        PSDesiredStateConfiguration</span></span><br><span class="line"><span class="comment"># Cmdlet          Add-LocalGroupMember                               1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Disable-LocalUser                                  1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Enable-LocalUser                                   1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Get-LocalGroup                                     1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Get-LocalGroupMember                               1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Get-LocalUser                                      1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Get-WinSystemLocale                                2.1.0.0    International</span></span><br><span class="line"><span class="comment"># Cmdlet          Import-LocalizedData                               3.1.0.0    Microsoft.PowerShell.Utility</span></span><br><span class="line"><span class="comment"># Cmdlet          New-LocalGroup                                     1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          New-LocalUser                                      1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Remove-LocalGroup                                  1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Remove-LocalGroupMember                            1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Remove-LocalUser                                   1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Rename-LocalGroup                                  1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Rename-LocalUser                                   1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Set-DscLocalConfigurationManager                   1.1        PSDesiredStateConfiguration</span></span><br><span class="line"><span class="comment"># Cmdlet          Set-LocalGroup                                     1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Set-LocalUser                                      1.0.0.0    Microsoft.PowerShell.LocalAccounts</span></span><br><span class="line"><span class="comment"># Cmdlet          Set-WinSystemLocale                                2.1.0.0    International</span></span><br></pre></td></tr></table></figure><h2 id="获取本地用户"><a href="#获取本地用户" class="headerlink" title="获取本地用户"></a>获取本地用户</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\holdy&gt; <span class="built_in">Get-LocalUser</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Name               Enabled Description</span></span><br><span class="line"><span class="comment"># ----               ------- -----------</span></span><br><span class="line"><span class="comment"># Administrator      False   管理计算机(域)的内置帐户</span></span><br><span class="line"><span class="comment"># DefaultAccount     False   系统管理的用户帐户。</span></span><br><span class="line"><span class="comment"># defaultuser100001  True</span></span><br><span class="line"><span class="comment"># Guest              False   供来宾访问计算机或访问域的内置帐户</span></span><br><span class="line"><span class="comment"># holdy              True</span></span><br><span class="line"><span class="comment"># localtest          True</span></span><br><span class="line"><span class="comment"># localtestEmpty     True</span></span><br><span class="line"><span class="comment"># localtestEmpty1    True</span></span><br><span class="line"><span class="comment"># WDAGUtilityAccount False   系统为 Windows Defender 应用程序防护方案管理和使用的用户帐户。</span></span><br></pre></td></tr></table></figure><h2 id="获取本地管理员组"><a href="#获取本地管理员组" class="headerlink" title="获取本地管理员组"></a>获取本地管理员组</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\holdy&gt; <span class="built_in">Get-LocalGroup</span> Administrators</span><br><span class="line"></span><br><span class="line"><span class="comment"># Name           Description</span></span><br><span class="line"><span class="comment"># ----           -----------</span></span><br><span class="line"><span class="comment"># Administrators 管理员对计算机/域有不受限制的完全访问权</span></span><br></pre></td></tr></table></figure><h2 id="获取本地管理员组成员"><a href="#获取本地管理员组成员" class="headerlink" title="获取本地管理员组成员"></a>获取本地管理员组成员</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\holdy&gt; <span class="built_in">Get-LocalGroupMember</span> Administrators</span><br><span class="line"></span><br><span class="line"><span class="comment"># ObjectClass Name                          PrincipalSource</span></span><br><span class="line"><span class="comment"># ----------- ----                          ---------------</span></span><br><span class="line"><span class="comment"># 用户        MONTARIUS-WIN11\Administrator Local</span></span><br><span class="line"><span class="comment"># 用户        MONTARIUS-WIN11\holdy         MicrosoftAccount</span></span><br></pre></td></tr></table></figure><h2 id="获取本地用户组"><a href="#获取本地用户组" class="headerlink" title="获取本地用户组"></a>获取本地用户组</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\holdy&gt; <span class="built_in">Get-LocalGroup</span> users</span><br><span class="line"></span><br><span class="line"><span class="comment"># Name  Description</span></span><br><span class="line"><span class="comment"># ----  -----------</span></span><br><span class="line"><span class="comment"># Users 防止用户进行有意或无意的系统范围的更改，但是可以运行大部分应用程序</span></span><br></pre></td></tr></table></figure><h2 id="获取本地用户组成员"><a href="#获取本地用户组成员" class="headerlink" title="获取本地用户组成员"></a>获取本地用户组成员</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\holdy&gt; <span class="built_in">Get-LocalGroupMember</span> users</span><br><span class="line"></span><br><span class="line"><span class="comment"># ObjectClass Name                             PrincipalSource</span></span><br><span class="line"><span class="comment"># ----------- ----                             ---------------</span></span><br><span class="line"><span class="comment"># 用户        MONTARIUS-WIN11\holdy            MicrosoftAccount</span></span><br><span class="line"><span class="comment"># 用户        MONTARIUS-WIN11\localtest        Local</span></span><br><span class="line"><span class="comment"># 用户        MONTARIUS-WIN11\localtestEmpty   Local</span></span><br><span class="line"><span class="comment"># 用户        MONTARIUS-WIN11\localtestEmpty1  Local</span></span><br><span class="line"><span class="comment"># 组          NT AUTHORITY\Authenticated Users Unknown</span></span><br><span class="line"><span class="comment"># 组          NT AUTHORITY\INTERACTIVE         Unknown</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：在 Power Shell 中获取本地用户和组，以及组成员&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="cmd" scheme="http://example.com/categories/A-OS/Windows/cmd/"/>
    
    
    <category term="powershell" scheme="http://example.com/tags/powershell/"/>
    
    <category term="用户" scheme="http://example.com/tags/%E7%94%A8%E6%88%B7/"/>
    
  </entry>
  
  <entry>
    <title>【COM】WQL使用及其测试工具</title>
    <link href="http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91WQL/"/>
    <id>http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91WQL/</id>
    <published>2024-01-23T06:08:51.926Z</published>
    <updated>2024-02-06T07:47:33.827Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：windows wmi的使用</p></blockquote><span id="more"></span><blockquote><p>相关链接： </p><ul><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/wmisdk/wmi-c---application-examples">WMI C++ 应用程序示例 - Win32 apps | Microsoft Learn</a></li><li><a href="https://github.com/holdyounger/WMI-RecvEventNotify">holdyounger&#x2F;WMI-RecvEventNotify: wmi的通知查询</a></li><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/wmisdk/using-wmi">使用 WMI - Win32 apps | Microsoft Learn</a></li></ul></blockquote><h2 id="0x01-工具"><a href="#0x01-工具" class="headerlink" title="0x01 工具"></a>0x01 工具</h2><p>使用 Windows 自带的 WbemTest 即可。</p><h2 id="WQL的使用"><a href="#WQL的使用" class="headerlink" title="WQL的使用"></a>WQL的使用</h2>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：windows wmi的使用&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="COM" scheme="http://example.com/categories/A-OS/Windows/COM/"/>
    
    
    <category term="WQL" scheme="http://example.com/tags/WQL/"/>
    
    <category term="WMI" scheme="http://example.com/tags/WMI/"/>
    
    <category term="COM" scheme="http://example.com/tags/COM/"/>
    
  </entry>
  
  <entry>
    <title>【API】获取当前登录用户</title>
    <link href="http://example.com/A_OS/Windows/API/%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7/"/>
    <id>http://example.com/A_OS/Windows/API/%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7/</id>
    <published>2024-01-23T06:08:51.916Z</published>
    <updated>2024-02-02T07:38:03.678Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：调用 winsta.dll 导出接口获取系统当前登录的用户</p></blockquote><span id="more"></span><h2 id="相关枚举"><a href="#相关枚举" class="headerlink" title="相关枚举"></a>相关枚举</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span>  <span class="keyword">enum</span> <span class="title class_">_WINSTATIONINFOCLASS</span></span><br><span class="line">&#123;</span><br><span class="line">WinStationCreateData,</span><br><span class="line">WinStationConfiguration,</span><br><span class="line">WinStationPdParams,</span><br><span class="line">WinStationWd,</span><br><span class="line">WinStationPd,</span><br><span class="line">WinStationPrinter,</span><br><span class="line">WinStationClient,</span><br><span class="line">WinStationModules,</span><br><span class="line">WinStationInformation,</span><br><span class="line">WinStationTrace,</span><br><span class="line">WinStationBeep,</span><br><span class="line">WinStationEncryptionOff,</span><br><span class="line">WinStationEncryptionPerm,</span><br><span class="line">WinStationNtSecurity,</span><br><span class="line">WinStationUserToken,</span><br><span class="line">WinStationUnused1,</span><br><span class="line">WinStationVideoData,</span><br><span class="line">WinStationInitialProgram,</span><br><span class="line">WinStationCd,</span><br><span class="line">WinStationSystemTrace,</span><br><span class="line">WinStationVirtualData,</span><br><span class="line">WinStationClientData,</span><br><span class="line">WinStationSecureDesktopEnter,</span><br><span class="line">WinStationSecureDesktopExit,</span><br><span class="line">WinStationLoadBalanceSessionTarget,</span><br><span class="line">WinStationLoadIndicator,</span><br><span class="line">WinStationShadowInfo,</span><br><span class="line">WinStationDigProductId,</span><br><span class="line">WinStationLockedState,</span><br><span class="line">WinStationRemoteAddress,</span><br><span class="line">WinStationIdleTime,</span><br><span class="line">WinStationLastReconnectType,</span><br><span class="line">WinStationDisallowAutoReconnect,</span><br><span class="line">WinStationUnused2,</span><br><span class="line">WinStationUnused3,</span><br><span class="line">WinStationUnused4,</span><br><span class="line">WinStationUnused5,</span><br><span class="line">WinStationReconnectedFromId,</span><br><span class="line">WinStationEffectsPolicy,</span><br><span class="line">WinStationType,</span><br><span class="line">WinStationInformationEx</span><br><span class="line">&#125; WINSTATIONINFOCLASS;</span><br></pre></td></tr></table></figure><h2 id="相关结构体"><a href="#相关结构体" class="headerlink" title="相关结构体"></a>相关结构体</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_SESSIONIDW</span> &#123;</span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">ULONG SessionId;</span><br><span class="line">ULONG LogonId;</span><br><span class="line">&#125; _SessionId_LogonId_union;</span><br><span class="line">WINSTATIONNAME WinStationName;</span><br><span class="line">WINSTATIONSTATECLASS State;</span><br><span class="line">&#125; SESSIONIDW,</span><br><span class="line">*PSESSIONIDW;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_WINSTATIONINFORMATIONW</span> &#123;</span><br><span class="line">WINSTATIONSTATECLASS ConnectState;</span><br><span class="line">WINSTATIONNAME WinStationName;</span><br><span class="line">ULONG LogonId;</span><br><span class="line">LARGE_INTEGER ConnectTime;</span><br><span class="line">LARGE_INTEGER DisconnectTime;</span><br><span class="line">LARGE_INTEGER LastInputTime;</span><br><span class="line">LARGE_INTEGER LogonTime;</span><br><span class="line">PROTOCOLSTATUS Status;</span><br><span class="line">WCHAR Domain[DOMAIN_LENGTH + <span class="number">1</span>];</span><br><span class="line">WCHAR UserName[USERNAME_LENGTH + <span class="number">1</span>];</span><br><span class="line">LARGE_INTEGER CurrentTime;</span><br><span class="line">&#125; WINSTATIONINFORMATIONW,</span><br><span class="line">*PWINSTATIONINFORMATIONW;</span><br></pre></td></tr></table></figure><h2 id="导出函数定义"><a href="#导出函数定义" class="headerlink" title="导出函数定义"></a>导出函数定义</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span><span class="params">(WINAPI *pfn_WinStationEnumerateW)</span><span class="params">(_In_opt_ HANDLE hServer, _Out_ PSESSIONIDW *SessionIds, _Out_ PULONG Count)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span><span class="params">(WINAPI *pfn_WinStationQueryInformationW)</span><span class="params">(_In_opt_ HANDLE hServer, _In_ ULONG SessionId,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ WINSTATIONINFOCLASS WinStationInformationClass,</span></span></span><br><span class="line"><span class="params"><span class="function">_Out_writes_bytes_(WinStationInformationLength) PVOID pWinStationInformation, _In_ ULONG WinStationInformationLength,</span></span></span><br><span class="line"><span class="params"><span class="function">_Out_ PULONG pReturnLength)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span><span class="params">(WINAPI *pfn_WinStationFreeMemory)</span><span class="params">(_In_ PVOID Buffer)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="获取登录用户"><a href="#获取登录用户" class="headerlink" title="获取登录用户"></a>获取登录用户</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">GetAllLoginUser</span><span class="params">(vector&lt;CString&gt;&amp; vecUser)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL bRet = FALSE;</span><br><span class="line"><span class="type">static</span> pfn_WinStationEnumerateW            pWinStationEnumerateW = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">static</span> pfn_WinStationFreeMemory            pWinStationFreeMemory = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">static</span> pfn_WinStationQueryInformationW     pWinStationQueryInformationW = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">static</span> HMODULE hDll = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pWinStationEnumerateW == <span class="literal">NULL</span> || pWinStationFreeMemory == <span class="literal">NULL</span> || pWinStationQueryInformationW == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (hDll == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> QHGetCurrentModuleHandleForCheckSign</span></span><br><span class="line">hDll = <span class="built_in">LoadLibrary_api_s</span>(<span class="string">L&quot;winsta.dll&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">hDll = <span class="built_in">LoadLibrary</span>(<span class="string">L&quot;winsta.dll&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// LoadLibrary_api_s</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hDll)</span><br><span class="line">&#123;</span><br><span class="line">pWinStationEnumerateW = (pfn_WinStationEnumerateW)<span class="built_in">GetProcAddress</span>(hDll, <span class="string">&quot;WinStationEnumerateW&quot;</span>);</span><br><span class="line">pWinStationFreeMemory = (pfn_WinStationFreeMemory)<span class="built_in">GetProcAddress</span>(hDll, <span class="string">&quot;WinStationFreeMemory&quot;</span>);</span><br><span class="line">pWinStationQueryInformationW = (pfn_WinStationQueryInformationW)<span class="built_in">GetProcAddress</span>(hDll, <span class="string">&quot;WinStationQueryInformationW&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pWinStationEnumerateW == <span class="literal">NULL</span> || pWinStationFreeMemory == <span class="literal">NULL</span> || pWinStationQueryInformationW == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PSESSIONIDW pTerm = <span class="literal">NULL</span>;</span><br><span class="line">ULONG       uTermCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">DWORD dwSessionID = -1;</span></span><br><span class="line"><span class="comment">BOOL bRet = ProcessIdToSessionId(GetCurrentProcessId(), &amp;dwSessionID);</span></span><br><span class="line"><span class="comment">if (bRet == FALSE)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">DWORD dwSize = <span class="built_in">sizeof</span>(SESSIONIDW);</span><br><span class="line">bRet = <span class="built_in">pWinStationEnumerateW</span>(<span class="literal">NULL</span>, &amp;pTerm, &amp;uTermCount);</span><br><span class="line"><span class="keyword">if</span> (bRet == FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (ULONG i = <span class="number">0</span>; i &lt; uTermCount; ++i)</span><br><span class="line">&#123;</span><br><span class="line">WINSTATIONINFORMATIONW pStationInfo;</span><br><span class="line">ULONG uInfoLen = <span class="built_in">sizeof</span>(WINSTATIONINFORMATIONW);</span><br><span class="line">ULONG uRetLen = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (FALSE == <span class="built_in">pWinStationQueryInformationW</span>(<span class="literal">NULL</span>, pTerm-&gt;_SessionId_LogonId_union.SessionId, WinStationInformation, &amp;pStationInfo, uInfoLen, &amp;uRetLen))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pStationInfo.UserName[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">bRet = TRUE;</span><br><span class="line">vecUser.<span class="built_in">push_back</span>(pStationInfo.UserName);</span><br><span class="line"><span class="comment">//wprintf(L&quot;domain : %s, user : %s \n&quot;, pStationInfo.Domain, pStationInfo.UserName);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pTerm++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">while</span> (FALSE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pTerm)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">pWinStationFreeMemory</span>(pTerm);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：调用 winsta.dll 导出接口获取系统当前登录的用户&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/A-OS/Windows/API/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="API" scheme="http://example.com/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>【API】GetModuleHandle</title>
    <link href="http://example.com/A_OS/Windows/API/GetModuleHandle/"/>
    <id>http://example.com/A_OS/Windows/API/GetModuleHandle/</id>
    <published>2024-01-23T06:08:51.910Z</published>
    <updated>2024-02-06T08:34:17.365Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>GetModuleHandle 函数用法</p></blockquote><span id="more"></span><h2 id="定义函数原型"><a href="#定义函数原型" class="headerlink" title="定义函数原型"></a>定义函数原型</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span><span class="params">(WINAPI *LPFN_GLPI)</span><span class="params">(PSYSTEM_LOGICAL_PROCESSOR_INFORMATION, PDWORD)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="获取函数"><a href="#获取函数" class="headerlink" title="获取函数"></a>获取函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">LPFN_GLPI glpi;</span><br><span class="line">glpi = (LPFN_GLPI)<span class="built_in">GetProcAddress</span>(</span><br><span class="line"><span class="built_in">GetModuleHandle</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;kernel32&quot;</span>)),</span><br><span class="line"><span class="string">&quot;GetLogicalProcessorInformation&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == glpi)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DbgTrace</span>(<span class="string">L&quot;[%s]GetLogicalProcessorInformation is not supported.\n&quot;</span>, __FUNCTIONW__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">DbgTrace</span>(<span class="string">L&quot;[%s]GetLogicalProcessorInformation is supported.\n&quot;</span>, __FUNCTIONW__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;GetModuleHandle 函数用法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/A-OS/Windows/API/"/>
    
    
  </entry>
  
  <entry>
    <title>【API】CreateProcess 使用及调用流程</title>
    <link href="http://example.com/A_OS/Windows/API/CreateProcess/"/>
    <id>http://example.com/A_OS/Windows/API/CreateProcess/</id>
    <published>2024-01-23T06:08:51.905Z</published>
    <updated>2024-02-06T08:34:48.635Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：CreateProcess 的使用及调用流程</p></blockquote><span id="more"></span><p>CreateProcess 的系统调用流程参考：</p><p><a href="https://captmeelo.com//redteam/maldev/2022/05/10/ntcreateuserprocess.html">Making NtCreateUserProcess Work - Hack.Learn.Share</a></p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="函数原型"><a href="#函数原型" class="headerlink" title="函数原型"></a>函数原型</h3><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><h2 id="调用流程"><a href="#调用流程" class="headerlink" title="调用流程"></a>调用流程</h2>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：CreateProcess 的使用及调用流程&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/A-OS/Windows/API/"/>
    
    
  </entry>
  
  <entry>
    <title>【API】 CreateRemoteThread 的简单使用</title>
    <link href="http://example.com/A_OS/Windows/API/CreateRemoteThread/%E3%80%90API%E3%80%91CreateRemoteThread%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/A_OS/Windows/API/CreateRemoteThread/%E3%80%90API%E3%80%91CreateRemoteThread%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</id>
    <published>2024-01-23T06:08:51.900Z</published>
    <updated>2024-02-06T08:34:56.744Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：<code>CreateRemoteThread</code> 的简单使用 Demo</p></blockquote><span id="more"></span><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>打开一个 GUI 进程，并在进程中调用 <code>MessageBox</code> 弹出消息框。</p><blockquote><p>关键说明：由于注入只能传递一个参数，因此不能直接在目标进程中调用 <code>MessageBox</code>. 因此至少需要创建一个只有一个入参的函数来传递 <code>MessageBox</code> 的相关调用。</p></blockquote><p>步骤说明：</p><ol><li>根据传递的进程名获取进程 <code>PID</code></li><li>根据 <code>PID</code> 打开目标进程</li><li>申请内存写入调用函数的地址</li><li>申请内存写入调用函数的参数</li><li>创建远程线程调用写入的函数</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span>  </span></span><br><span class="line"><span class="comment">//线程参数结构体定义  </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_RemoteParam</span> &#123;</span><br><span class="line"><span class="type">char</span> szMsg[<span class="number">12</span>];    <span class="comment">//MessageBox函数中显示的字符提示  </span></span><br><span class="line">DWORD dwMessageBox;<span class="comment">//MessageBox函数的入口地址  </span></span><br><span class="line">&#125; RemoteParam, * PRemoteParam;</span><br><span class="line"><span class="comment">//定义MessageBox类型的函数指针  </span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span><span class="params">(__stdcall* PFN_MESSAGEBOX)</span><span class="params">(HWND, LPCTSTR, LPCTSTR, DWORD)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//线程函数定义  </span></span><br><span class="line"><span class="function">DWORD __stdcall <span class="title">threadProc</span><span class="params">(LPVOID lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RemoteParam* pRP = (RemoteParam*)lParam;</span><br><span class="line">PFN_MESSAGEBOX pfnMessageBox;</span><br><span class="line">pfnMessageBox = (PFN_MESSAGEBOX)pRP-&gt;dwMessageBox;</span><br><span class="line"><span class="built_in">pfnMessageBox</span>(<span class="literal">NULL</span>, pRP-&gt;szMsg, pRP-&gt;szMsg, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//提升进程访问权限  </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">enableDebugPriv</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hToken;</span><br><span class="line">LUID sedebugnameValue;</span><br><span class="line">TOKEN_PRIVILEGES tkp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">OpenProcessToken</span>(<span class="built_in">GetCurrentProcess</span>(),</span><br><span class="line">TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">LookupPrivilegeValue</span>(<span class="literal">NULL</span>, SE_DEBUG_NAME, &amp;sedebugnameValue)) &#123;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hToken);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">tkp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">tkp.Privileges[<span class="number">0</span>].Luid = sedebugnameValue;</span><br><span class="line">tkp.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">AdjustTokenPrivileges</span>(hToken, FALSE, &amp;tkp, <span class="built_in">sizeof</span>(tkp), <span class="literal">NULL</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hToken);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据进程名称得到进程ID,如果有多个运行实例的话，返回第一个枚举到的进程的ID  </span></span><br><span class="line"><span class="function">DWORD <span class="title">processNameToId</span><span class="params">(LPCTSTR lpszProcessName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hSnapshot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line">PROCESSENTRY32 pe;</span><br><span class="line">pe.dwSize = <span class="built_in">sizeof</span>(PROCESSENTRY32);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Process32First</span>(hSnapshot, &amp;pe)) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>,</span><br><span class="line"><span class="string">&quot;The frist entry of the process list has not been copyied to the buffer&quot;</span>,</span><br><span class="line"><span class="string">&quot;Notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">Process32Next</span>(hSnapshot, &amp;pe)) &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(lpszProcessName, pe.szExeFile)) &#123;</span><br><span class="line"><span class="keyword">return</span> pe.th32ProcessID;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义线程体的大小  </span></span><br><span class="line"><span class="type">const</span> DWORD dwThreadSize = <span class="number">4096</span>;</span><br><span class="line">DWORD dwWriteBytes;</span><br><span class="line"><span class="comment">//提升进程访问权限  </span></span><br><span class="line"><span class="built_in">enableDebugPriv</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* szExeName = (<span class="type">char</span>*)<span class="string">&quot;calc.exe&quot;</span>;</span><br><span class="line"></span><br><span class="line">DWORD dwProcessId = <span class="built_in">processNameToId</span>(szExeName);</span><br><span class="line"><span class="keyword">if</span> (dwProcessId == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;The target process have not been found !&quot;</span>,</span><br><span class="line"><span class="string">&quot;Notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//根据进程ID得到进程句柄  </span></span><br><span class="line">HANDLE hTargetProcess = <span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, FALSE, dwProcessId);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!hTargetProcess) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;Open target process failed !&quot;</span>,</span><br><span class="line"><span class="string">&quot;Notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在宿主进程中为线程体开辟一块存储区域  </span></span><br><span class="line"><span class="comment">//在这里需要注意MEM_COMMIT | MEM_RESERVE内存非配类型以及PAGE_EXECUTE_READWRITE内存保护类型  </span></span><br><span class="line"><span class="comment">//其具体含义请参考MSDN中关于VirtualAllocEx函数的说明。  </span></span><br><span class="line"><span class="type">void</span>* pRemoteThread = <span class="built_in">VirtualAllocEx</span>(hTargetProcess, <span class="number">0</span>,</span><br><span class="line">dwThreadSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="keyword">if</span> (!pRemoteThread) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;Alloc memory in target process failed !&quot;</span>,</span><br><span class="line"><span class="string">&quot;notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将线程体拷贝到宿主进程中  </span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">WriteProcessMemory</span>(hTargetProcess,</span><br><span class="line">pRemoteThread, &amp;threadProc, dwThreadSize, <span class="number">0</span>)) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;Write data to target process failed !&quot;</span>,</span><br><span class="line"><span class="string">&quot;Notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义线程参数结构体变量  </span></span><br><span class="line">RemoteParam remoteData;</span><br><span class="line"><span class="built_in">ZeroMemory</span>(&amp;remoteData, <span class="built_in">sizeof</span>(RemoteParam));</span><br><span class="line"></span><br><span class="line"><span class="comment">//填充结构体变量中的成员  </span></span><br><span class="line">HINSTANCE hUser32 = <span class="built_in">LoadLibrary</span>(<span class="string">&quot;User32.dll&quot;</span>);</span><br><span class="line">remoteData.dwMessageBox = (DWORD)<span class="built_in">GetProcAddress</span>(hUser32, <span class="string">&quot;MessageBoxA&quot;</span>);</span><br><span class="line"><span class="built_in">strcat_s</span>(remoteData.szMsg, <span class="string">&quot;Hello＼0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//为线程参数在宿主进程中开辟存储区域  </span></span><br><span class="line">RemoteParam* pRemoteParam = (RemoteParam*)<span class="built_in">VirtualAllocEx</span>(</span><br><span class="line">hTargetProcess, <span class="number">0</span>, <span class="built_in">sizeof</span>(RemoteParam), MEM_COMMIT, PAGE_READWRITE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!pRemoteParam) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;Alloc memory failed !&quot;</span>,</span><br><span class="line"><span class="string">&quot;Notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线程参数拷贝到宿主进程地址空间中  </span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">WriteProcessMemory</span>(hTargetProcess,</span><br><span class="line">pRemoteParam, &amp;remoteData, <span class="built_in">sizeof</span>(remoteData), <span class="number">0</span>)) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;Write data to target process failed !&quot;</span>,</span><br><span class="line"><span class="string">&quot;Notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在宿主进程中创建线程  </span></span><br><span class="line">HANDLE hRemoteThread = <span class="built_in">CreateRemoteThread</span>(</span><br><span class="line">hTargetProcess, <span class="literal">NULL</span>, <span class="number">0</span>, (<span class="built_in">DWORD</span>(__stdcall*)(<span class="type">void</span>*))pRemoteThread,</span><br><span class="line">pRemoteParam, <span class="number">0</span>, &amp;dwWriteBytes);</span><br><span class="line"><span class="keyword">if</span> (!hRemoteThread) &#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;Create remote thread failed !&quot;</span>, <span class="string">&quot;Notice&quot;</span>, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hRemoteThread);</span><br><span class="line"><span class="built_in">FreeLibrary</span>(hUser32);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：&lt;code&gt;CreateRemoteThread&lt;/code&gt; 的简单使用 Demo&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/A-OS/Windows/API/"/>
    
    <category term="CreateRemoteThread" scheme="http://example.com/categories/A-OS/Windows/API/CreateRemoteThread/"/>
    
    
  </entry>
  
  <entry>
    <title>【AD】AD域</title>
    <link href="http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E5%9F%9F/"/>
    <id>http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E5%9F%9F/</id>
    <published>2024-01-23T06:07:44.305Z</published>
    <updated>2024-02-06T08:36:36.766Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>AD域定义及描述</p></blockquote><span id="more"></span><h1 id="AD域"><a href="#AD域" class="headerlink" title="AD域"></a>AD域</h1><p>AD域（Active Directory Domain）是一种Windows Server的组织单元，用于管理计算机、用户、组织和其他资源。它提供了一种集中式的管理方式，可以让管理员轻松地管理网络中的资源。AD域支持以下功能：</p><ol><li>用户和计算机管理：可以使用AD域来管理网络中的用户和计算机，包括创建、删除、修改用户和计算机的属性等。</li><li>组织管理：可以使用AD域来管理网络中的组织，包括创建、删除、修改组织的属性等。</li><li>权限管理：可以使用AD域来管理网络中的权限，包括授予用户访问资源的权限等。</li><li>网络服务管理：可以使用AD域来管理网络中的服务，包括打印服务、邮件服务等。</li><li>数据备份和恢复：可以使用AD域来备份和恢复网络中的数据，以防止数据丢失。</li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;AD域定义及描述&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="AD" scheme="http://example.com/categories/A-OS/Windows/AD/"/>
    
    
  </entry>
  
  <entry>
    <title>【WINAPI】获取系统当前用户名</title>
    <link href="http://example.com/A_OS/Windows/API/%E3%80%90WINAPI%E3%80%91%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E5%90%8D/"/>
    <id>http://example.com/A_OS/Windows/API/%E3%80%90WINAPI%E3%80%91%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E5%90%8D/</id>
    <published>2024-01-22T16:00:00.000Z</published>
    <updated>2024-02-06T08:36:59.460Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：windows 操作系统获取系统当前登录的用户</p></blockquote><span id="more"></span><h2 id="0x01-API查询结果总结"><a href="#0x01-API查询结果总结" class="headerlink" title="0x01 API查询结果总结"></a>0x01 API查询结果总结</h2><p>以域名为<code>domain</code>，系统当前登录用户名为 <code>test</code> 为例举例说明，设备名为 <code>WIN-FEKV0FJ89UQ</code></p><table><thead><tr><th>API</th><th>用户态进程</th><th>服务进程</th></tr></thead><tbody><tr><td>GetUserName</td><td>test</td><td>SYSTEM</td></tr><tr><td>GetEnvironmentVariable(获取环境变量 %USERNAME%)</td><td>test</td><td>WIN-FEKV0FJ89UQ$</td></tr><tr><td>WTSQuerySessionInformation(不指定sessionid)</td><td>test</td><td>服务进程中会返回空<br /></td></tr><tr><td>WTSQuerySessionInformation(指定sessionid为WTSGetActiveConsoleSessionId())</td><td>test</td><td>test</td></tr><tr><td>GetUserNameExA</td><td>test(返回形式依据传入的参数1)</td><td>domain\WIN-FEKV0FJ89UQ</td></tr></tbody></table><p>总结下来，如果要获取系统当前登录的用户名，那么不管是在用户进程还是服务进程，使用 WTSQuerySessionInformation 指定 Sessionid 的方法比较靠谱。</p><h2 id="0x02-获取用户的API"><a href="#0x02-获取用户的API" class="headerlink" title="0x02 获取用户的API"></a>0x02 获取用户的API</h2><h3 id="GetUserName"><a href="#GetUserName" class="headerlink" title="GetUserName"></a>GetUserName</h3><p><code>GetUserName</code>以其运行的exe为主，用户态进程下获取的系统当前登录的用户名，服务进程中获取的为 <code>system</code> 用户。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">GetLoginUsernameByApi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> username[<span class="number">1024</span>];</span><br><span class="line">DWORD usernameLength = <span class="keyword">sizeof</span> username;</span><br><span class="line"><span class="built_in">GetUserName</span>(username, &amp;usernameLength);</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过环境变量获取"><a href="#通过环境变量获取" class="headerlink" title="通过环境变量获取"></a>通过环境变量获取</h3><p>%USERNAME% 和 <code>GetUserName</code> 本质上一致，不同的是，服务进程中，%USERNAME% 字段保存的是<code>主机名+&amp;</code>，只有用户态进程下才是当前系统登录用户名</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">getLoginUsernameByEnv</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> username[<span class="number">1024</span>];</span><br><span class="line"><span class="built_in">GetEnvironmentVariable</span>(<span class="string">&quot;USERNAME&quot;</span>, username, <span class="keyword">sizeof</span> username);</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WTSQuerySessionInformation-通过会话查询用户名"><a href="#WTSQuerySessionInformation-通过会话查询用户名" class="headerlink" title="WTSQuerySessionInformation 通过会话查询用户名"></a>WTSQuerySessionInformation 通过会话查询用户名</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">getLoginUsernameBySession</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LPWSTR usernameBuffer = <span class="literal">NULL</span>;</span><br><span class="line">DWORD infoSize = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">WTSQuerySessionInformationW</span>(WTS_CURRENT_SERVER_HANDLE, WTS_CURRENT_SESSION, WTS_INFO_CLASS::WTSUserName, &amp;usernameBuffer, &amp;infoSize);</span><br><span class="line"><span class="function">string <span class="title">username</span><span class="params">(usernameBuffer)</span></span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GetUserNameExA"><a href="#GetUserNameExA" class="headerlink" title="GetUserNameExA"></a>GetUserNameExA</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">GetNameEx</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 获取当前登录用户的域信息  </span></span><br><span class="line">    PCHAR cpuName = <span class="keyword">new</span> CHAR[<span class="number">256</span>];</span><br><span class="line">    PCHAR domainName = <span class="keyword">new</span> CHAR[<span class="number">256</span>];</span><br><span class="line">    DWORD domainNameSize = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ZeroMemory</span>(domainName, <span class="number">256</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">GetComputerObjectNameA</span>(NameSamCompatible, <span class="literal">NULL</span>, &amp;domainNameSize);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">GetComputerObjectNameA</span>(NameSamCompatible, cpuName, &amp;domainNameSize)) </span><br><span class="line">    &#123;</span><br><span class="line">        std::wcout &lt;&lt; <span class="string">&quot;当前登录的域机器: &quot;</span> &lt;&lt; cpuName &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;无法获取域信息&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    domainNameSize = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">GetUserNameExA</span>(NameDisplay, <span class="literal">NULL</span>, &amp;domainNameSize);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">GetUserNameExA</span>(NameDisplay, domainName, &amp;domainNameSize))</span><br><span class="line">    &#123;</span><br><span class="line">        std::wcout &lt;&lt; <span class="string">&quot;当前登录的域用户: &quot;</span> &lt;&lt; domainName &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;无法获取域信息&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x03-如何在服务进程中获取系统当前登录的用户"><a href="#0x03-如何在服务进程中获取系统当前登录的用户" class="headerlink" title="0x03 如何在服务进程中获取系统当前登录的用户"></a>0x03 如何在服务进程中获取系统当前登录的用户</h2><p>获取当前控制台会话ID，然后再调用 <code>WTSQuerySessionInformationW</code> 查询用户名。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">GetLocalCurUserName</span><span class="params">(std::wstring&amp; strUserName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL bRet = FALSE;</span><br><span class="line">DWORD sessionId = <span class="built_in">WTSGetActiveConsoleSessionId</span>();</span><br><span class="line">LPWSTR ppBuffer[<span class="number">100</span>];</span><br><span class="line">DWORD bufferSize;</span><br><span class="line">bRet = <span class="built_in">WTSQuerySessionInformationW</span>(WTS_CURRENT_SERVER_HANDLE, sessionId, WTSUserName, ppBuffer, &amp;bufferSize);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; GetLocal1CurUserName --&gt; %s&quot;</span>, *ppBuffer);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bRet == TRUE)</span><br><span class="line">&#123;</span><br><span class="line">strUserName = *ppBuffer;</span><br><span class="line"><span class="built_in">WTSFreeMemory</span>(ppBuffer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x04-其他方式"><a href="#0x04-其他方式" class="headerlink" title="0x04 其他方式"></a>0x04 其他方式</h2><p>上述指定 Sessionid 的方法也可以通过 ProcessIdToSessionId 来获取 Sessionid。思路就是获取进程 <code>Explorer.exe</code> 的进程id，然后通过 PID 获取 Sessionid，最后通过 WTSQuerySessionInformationW 获取到对应的用户名。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">GetPorceeIdByName</span><span class="params">(<span class="type">const</span> std::string&amp; procName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* FindExe = procName.<span class="built_in">c_str</span>();</span><br><span class="line">HANDLE hSnapshot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (INVALID_HANDLE_VALUE == hSnapshot) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">PROCESSENTRY32 pe = &#123; <span class="built_in">sizeof</span>(pe) &#125;;</span><br><span class="line"><span class="keyword">for</span> (BOOL ret = <span class="built_in">Process32First</span>(hSnapshot, &amp;pe); ret; ret = <span class="built_in">Process32Next</span>(hSnapshot, &amp;pe)) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(pe.szExeFile, FindExe) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hSnapshot);</span><br><span class="line"><span class="keyword">return</span> pe.th32ProcessID;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;%-6d %s\n&quot;, pe.th32ProcessID, pe.szExeFile);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hSnapshot);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">GetUserNameByPid</span><span class="params">(DWORD pid, std::wstring&amp; username)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD SessionId;</span><br><span class="line"><span class="built_in">ProcessIdToSessionId</span>(pid, &amp;SessionId);</span><br><span class="line"></span><br><span class="line">LPWSTR usernameBuffer = <span class="literal">NULL</span>;</span><br><span class="line">DWORD infoSize = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (FALSE == <span class="built_in">WTSQuerySessionInformationW</span>(WTS_CURRENT_SERVER_HANDLE, SessionId, WTS_INFO_CLASS::WTSUserName, &amp;usernameBuffer, &amp;infoSize))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">username = usernameBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD dwPid;</span><br><span class="line">wstring wsUserName;</span><br><span class="line"><span class="keyword">if</span> (dwPid = <span class="built_in">GetPorceeIdByName</span>(<span class="string">&quot;explorer.exe&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">GetUserNameByPid</span>(dwPid, wsUserName))</span><br><span class="line">&#123;</span><br><span class="line">std::wcout &lt;&lt; <span class="string">&quot;explorer.exe:&quot;</span> &lt;&lt; wsUserName &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：windows 操作系统获取系统当前登录的用户&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/A-OS/Windows/API/"/>
    
    
    <category term="winapi" scheme="http://example.com/tags/winapi/"/>
    
  </entry>
  
  <entry>
    <title>【AD】获取域用户信息</title>
    <link href="http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF/"/>
    <id>http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E8%8E%B7%E5%8F%96%E5%9F%9F%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF/</id>
    <published>2024-01-20T16:00:00.000Z</published>
    <updated>2024-02-02T07:54:44.022Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：windows 环境下获取域用户信息</p></blockquote><span id="more"></span><h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h2><p>获取域用户信息首先需要一个登录到域环境中的账户，然后调用 IAds 和 IDirectorySearch 的相关接口执行查询和枚举即可。</p><p><a href="%E3%80%90AD%E3%80%91%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7">【AD】用户属性</a></p><p><a href="%E3%80%90AD%E3%80%91%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8">【AD】相关函数调用</a></p><p><a href="%E3%80%90AD%E3%80%91RootDSE">【AD】RootDSE</a></p><p>微软相关文档：</p><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/adsi/iads-property-methods">IADs 属性方法 (Iads.h) - Win32 apps | Microsoft Learn</a></li><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/api/iads/nn-iads-idirectorysearch">IDirectorySearch (iads.h) - Win32 apps | Microsoft Learn</a></li></ol><h2 id="0x02-函数与调用说明"><a href="#0x02-函数与调用说明" class="headerlink" title="0x02 函数与调用说明"></a>0x02 函数与调用说明</h2><ol><li><p>打开默认的 rootDSE 获取 <code>defaultNamingContext</code> 字段名</p><blockquote><p>调用 IAds 的 <code>Get()</code> 方法获取域的信息，字段名及获取的属性参考 <a href="https://learn.microsoft.com/zh-cn/windows/win32/adschema/rootdse">RootDSE (AD 架构) - Win32 apps | Microsoft Learn</a></p></blockquote></li><li><p>如果 <code>defaultNamingContext</code> 获取成功，则打开对应 LDAP (示例：<code>LDAP://defaultNamingContext</code>)，如果打开成功，就获取到了一个 <code>IDirectorySearch</code> 的对象</p></li><li><p>调用 <code>IDirectorySearch::ExecuteSearch</code> 执行查询，然后遍历查询出来的结果即可。</p></li></ol><h3 id="IDirectorySearch-ExecuteSearch-说明"><a href="#IDirectorySearch-ExecuteSearch-说明" class="headerlink" title="IDirectorySearch::ExecuteSearch 说明"></a>IDirectorySearch::ExecuteSearch 说明</h3><p>传入一个 LDAP 格式的搜索筛选器字符串，并传出一个 <code>PADS_SEARCH_HANDLE</code> 的句柄表示查询结果。</p><ul><li><p>LDAP 格式的搜索字符串说明</p><p>类似于 SQL 语句，可以定义要查询的范围。书写格式参考文章：<a href="https://learn.microsoft.com/zh-cn/windows/win32/adsi/search-filter-syntax">搜索筛选器语法 - Win32 apps | Microsoft Learn</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个 LDAP搜索字符串的示例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如下所示表示只查询域内启用的用户</span></span><br><span class="line">LPCWSTR lpwFormat1 = <span class="string">L&quot;(&amp;(objectClass=user)(objectCategory=person)(!(userAccountControl:1.2.840.113556.1.4.803:=2))(!(lockoutTime&gt;=1))(!(badPwdCount&gt;=%ls))(sAMAccountName=%ls))&quot;</span>; <span class="comment">// Only enabled accounts</span></span><br></pre></td></tr></table></figure></li><li><p>PADS_SEARCH_HANDLE 句柄</p><p>查询到结果后，需要调用 <code>IDirectorySearch</code> 的其他方法对结果进行枚举，<code>ConvertColToUAStruct</code> 为自定义封装的查询结果处理函数，参考 <a href="%E3%80%90AD%E3%80%91%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8">【AD】相关函数调用</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 枚举查询结果的大致流程</span></span><br><span class="line"><span class="comment">// Return specified properties</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">ExecuteSearch</span>(wcSearchFilter, (LPWSTR*)pszAttrFilter, <span class="built_in">sizeof</span>(pszAttrFilter) / <span class="built_in">sizeof</span>(LPWSTR), &amp;hSearch);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line"><span class="built_in">BeaconPrintf</span>(CALLBACK_ERROR, <span class="string">&quot;Failed to execute search.\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> CleanUp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line"><span class="comment">// Call IDirectorySearch::GetNextRow() to retrieve the next row of data.</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetFirstRow</span>(hSearch);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (hr != S_ADS_NOMORE_ROWS)</span><br><span class="line">&#123;</span><br><span class="line">UserAccount userAct;</span><br><span class="line"></span><br><span class="line">userAct.strAccountType = <span class="string">L&quot;3&quot;</span>;</span><br><span class="line">userAct.strDomain = pdcInfo-&gt;DomainName;</span><br><span class="line">userAct.strIsDomain = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">userAct.strPwdExpireTime = <span class="string">&quot;never&quot;</span>;</span><br><span class="line">userAct.bAdmin = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Keep track of count.</span></span><br><span class="line">iCount++;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Loop through the array of passed column names.</span></span><br><span class="line"><span class="keyword">while</span> (pContainerToSearch-&gt;<span class="built_in">GetNextColumnName</span>(hSearch, &amp;pszColumn) != S_ADS_NOMORE_COLUMNS)</span><br><span class="line">&#123;</span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetColumn</span>(hSearch, pszColumn, &amp;col);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line"><span class="built_in">ConvertColToUAStruct</span>(col, userAct);</span><br><span class="line"></span><br><span class="line">pContainerToSearch-&gt;<span class="built_in">FreeColumn</span>(&amp;col);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pszColumn != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">FreeADsMem</span>(pszColumn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Users.<span class="built_in">emplace_back</span>(userAct);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Get the next row</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetNextRow</span>(hSearch);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Close the search handle to clean up</span></span><br><span class="line">pContainerToSearch-&gt;<span class="built_in">CloseSearchHandle</span>(hSearch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x03-开源代码和项目"><a href="#0x03-开源代码和项目" class="headerlink" title="0x03 开源代码和项目"></a>0x03 开源代码和项目</h2><h3 id="QueryADUser"><a href="#QueryADUser" class="headerlink" title="QueryADUser"></a>QueryADUser</h3><p><a href="https://github.com/holdyounger/QueryADUser">holdyounger&#x2F;QueryADUser: 查询AD域内用户信息</a></p><p>查询逻辑基本一直，参考了 SprayAD 项目。另外添加了判断 域管理员 的逻辑，只有在域管理员的机器上才获取域内所有用户。</p><p>判断当前机器是否域管理员，参数1为 <code>IDirectorySearch</code>， 需要传入打来的 LDAP 句柄。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">IsDomainAdmin</span><span class="params">(_In_ IDirectorySearch* pContainerToSearch, _In_ LPCWSTR lpwFilterName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL bRet = FALSE;</span><br><span class="line">HRESULT hr = S_OK;</span><br><span class="line">WCHAR wcSearchFilter[BUF_SIZE] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">LPCWSTR pszAttrFilter[] = &#123;</span><br><span class="line"><span class="string">L&quot;isCriticalSystemObject&quot;</span>, <span class="comment">// boolean </span></span><br><span class="line"><span class="string">L&quot;sAMAccountName&quot;</span>, <span class="comment">// boolean </span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">LPCWSTR lpwFormat = <span class="string">L&quot;(&amp;(objectClass=user)(objectCategory=person)((sAMAccountName=%ls)))&quot;</span>; <span class="comment">// Only enabled accounts // (!(userAccountControl:1.2.840.113556.1.4.803:=2))</span></span><br><span class="line"></span><br><span class="line">PUSER_INFO pUserInfo = <span class="literal">NULL</span>;</span><br><span class="line">INT iCount = <span class="number">0</span>;</span><br><span class="line">DWORD x = <span class="number">0L</span>;</span><br><span class="line">LPWSTR pszColumn = <span class="literal">NULL</span>;</span><br><span class="line">IADs* pRoot = <span class="literal">NULL</span>;</span><br><span class="line">IID IADsIID;</span><br><span class="line">ADS_SEARCH_COLUMN col;</span><br><span class="line">DWORD dwAccountsFailed = <span class="number">0</span>;</span><br><span class="line">DWORD dwAccountsSuccess = <span class="number">0</span>;</span><br><span class="line">vector&lt;UserAccount&gt; uAccounts;</span><br><span class="line">_ADsOpenObject ADsOpenObject = (_ADsOpenObject)</span><br><span class="line"><span class="built_in">GetProcAddress</span>(<span class="built_in">GetModuleHandleA</span>(<span class="string">&quot;Activeds.dll&quot;</span>), <span class="string">&quot;ADsOpenObject&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (ADsOpenObject == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> S_FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_FreeADsMem FreeADsMem = (_FreeADsMem)</span><br><span class="line"><span class="built_in">GetProcAddress</span>(<span class="built_in">GetModuleHandleA</span>(<span class="string">&quot;Activeds.dll&quot;</span>), <span class="string">&quot;FreeADsMem&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (FreeADsMem == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> S_FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!pContainerToSearch) &#123;</span><br><span class="line"><span class="keyword">return</span> E_POINTER;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Calculate Program run time.</span></span><br><span class="line">LARGE_INTEGER frequency;</span><br><span class="line">LARGE_INTEGER start;</span><br><span class="line">LARGE_INTEGER end;</span><br><span class="line"><span class="type">double</span> interval;</span><br><span class="line"></span><br><span class="line"><span class="built_in">QueryPerformanceFrequency</span>(&amp;frequency);</span><br><span class="line"><span class="built_in">QueryPerformanceCounter</span>(&amp;start);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Specify subtree search</span></span><br><span class="line">ADS_SEARCHPREF_INFO SearchPrefs;</span><br><span class="line">SearchPrefs.dwSearchPref = ADS_SEARCHPREF_PAGESIZE;</span><br><span class="line">SearchPrefs.vValue.dwType = ADSTYPE_INTEGER;</span><br><span class="line">SearchPrefs.vValue.Integer = <span class="number">1000</span>;</span><br><span class="line">DWORD dwNumPrefs = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handle used for searching</span></span><br><span class="line">ADS_SEARCH_HANDLE hSearch = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set the search preference</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">SetSearchPreference</span>(&amp;SearchPrefs, dwNumPrefs);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line"><span class="built_in">BeaconPrintf</span>(CALLBACK_ERROR, <span class="string">&quot;Failed to set search preference.\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> CleanUp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add the filter.</span></span><br><span class="line"><span class="keyword">if</span> (lpwFilterName == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="comment">//lpwFilter = L&quot;*&quot;;</span></span><br><span class="line"><span class="built_in">BeaconPrintf</span>(CALLBACK_ERROR, <span class="string">&quot;Empty username!\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> hr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">swprintf_s</span>(wcSearchFilter, BUF_SIZE, lpwFormat, lpwFilterName);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pUserInfo = (PUSER_INFO)<span class="built_in">HeapAlloc</span>(<span class="built_in">GetProcessHeap</span>(), HEAP_ZERO_MEMORY, <span class="built_in">sizeof</span>(USER_INFO));</span><br><span class="line"><span class="keyword">if</span> (pUserInfo == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">BeaconPrintf</span>(CALLBACK_ERROR, <span class="string">&quot;Failed to allocate UserInfo memory.\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> CleanUp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Return specified properties</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">ExecuteSearch</span>(wcSearchFilter, (LPWSTR*)pszAttrFilter, <span class="built_in">sizeof</span>(pszAttrFilter) / <span class="built_in">sizeof</span>(LPWSTR), &amp;hSearch);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line"><span class="built_in">BeaconPrintf</span>(CALLBACK_ERROR, <span class="string">&quot;Failed to execute search.\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> CleanUp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line"><span class="comment">// Call IDirectorySearch::GetNextRow() to retrieve the next row of data.</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetFirstRow</span>(hSearch);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (hr != S_ADS_NOMORE_ROWS)</span><br><span class="line">&#123;</span><br><span class="line">UserAccount uAccount;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Keep track of count.</span></span><br><span class="line">iCount++;</span><br><span class="line"></span><br><span class="line">uAccount.bAdmin = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Loop through the array of passed column names.</span></span><br><span class="line"><span class="keyword">while</span> (pContainerToSearch-&gt;<span class="built_in">GetNextColumnName</span>(hSearch, &amp;pszColumn) != S_ADS_NOMORE_COLUMNS)</span><br><span class="line">&#123;</span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetColumn</span>(hSearch, pszColumn, &amp;col);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ConvertColToUAStruct</span>(col, uAccount);</span><br><span class="line"></span><br><span class="line">pContainerToSearch-&gt;<span class="built_in">FreeColumn</span>(&amp;col);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pszColumn != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">FreeADsMem</span>(pszColumn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">uAccounts.<span class="built_in">emplace_back</span>(uAccount);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get the next row</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetNextRow</span>(hSearch);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Close the search handle to clean up</span></span><br><span class="line">pContainerToSearch-&gt;<span class="built_in">CloseSearchHandle</span>(hSearch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (uAccounts.<span class="built_in">size</span>() == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (uAccounts[<span class="number">0</span>].bAdmin == <span class="number">1</span> &amp;&amp; uAccounts[<span class="number">0</span>].UserName.<span class="built_in">CompareNoCase</span>(<span class="string">&quot;Administrator&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">bRet = TRUE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr) &amp;&amp; <span class="number">0</span> == iCount) &#123;</span><br><span class="line">hr = S_FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwAccountsSuccess == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">BeaconPrintToStreamW</span>(<span class="string">L&quot;[-] Failed =&gt; %ls\\%ls (Skip!)\n&quot;</span>, pdcInfo-&gt;DomainName, lpwFilterName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CleanUp:</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pUserInfo != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">HeapFree</span>(<span class="built_in">GetProcessHeap</span>(), <span class="number">0</span>, pUserInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><p>获取当前登录用户名</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">GetCurUserName</span><span class="params">(CString &amp;strUserName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL bRet = FALSE;</span><br><span class="line"><span class="type">char</span> username[BUF_SIZE];</span><br><span class="line">DWORD usernameSize = <span class="built_in">sizeof</span>(username);</span><br><span class="line"><span class="keyword">if</span> (FALSE == <span class="built_in">GetUserName</span>(username, &amp;usernameSize)) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">goto</span> End;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">strUserName = username;</span><br><span class="line">bRet = TRUE;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;gethostname result: %S \n&quot;</span>, username);</span><br><span class="line">End:</span><br><span class="line"><span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">IsDomainAdmin</span>(pContainerToSearch, <span class="built_in">CStringW</span>(<span class="string">&quot;Administrator&quot;</span>)))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CString DomainUserName;</span><br><span class="line"><span class="comment">// 获取用户名</span></span><br><span class="line"><span class="keyword">if</span> (FALSE == <span class="built_in">GetCurUserName</span>(DomainUserName))</span><br><span class="line">&#123;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsDomainAdmin</span>(pContainerToSearch, <span class="built_in">CStringW</span>(userName)))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="QueryADObject-cpp"><a href="#QueryADObject-cpp" class="headerlink" title="QueryADObject.cpp"></a>QueryADObject.cpp</h3><p>来源：<a href="https://github.com/3gstudent/Homework-of-C-Language/blob/e21cb129e15fd2186bd8ec1310bcc23c38ab209b/QueryADObject.cpp#L24">Homework-of-C-Language&#x2F;QueryADObject.cpp at e21cb129e15fd2186bd8ec1310bcc23c38ab209b · 3gstudent&#x2F;Homework-of-C-Language</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Reference:</span></span><br><span class="line"><span class="comment">//https://github.com/microsoft/Windows-classic-samples/tree/master/Samples/Win7Samples/netds/adsi/activedir/QueryUsers/vc</span></span><br><span class="line"><span class="comment">//https://github.com/outflanknl/Recon-AD</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;objbase.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;activeds.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sddl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;ADSIid.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;ActiveDS.Lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Ole32.Lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Advapi32.Lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;oleaut32.Lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">IS_BUFFER_ENOUGH</span><span class="params">(UINT maxAlloc, LPWSTR pszTarget, LPCWSTR pszSource, <span class="type">int</span> toCopy = <span class="number">-1</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (toCopy == <span class="number">-1</span>) &#123;</span><br><span class="line">toCopy = <span class="built_in">wcslen</span>(pszSource);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> maxAlloc - (<span class="built_in">wcslen</span>(pszTarget) + toCopy + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">HRESULT <span class="title">Search</span><span class="params">(IDirectorySearch *pContainerToSearch,<span class="comment">// IDirectorySearch pointer to Partitions container.</span></span></span></span><br><span class="line"><span class="params"><span class="function">LPOLESTR szFilter,<span class="comment">// Filter for finding specific crossrefs. NULL returns all attributeSchema objects.</span></span></span></span><br><span class="line"><span class="params"><span class="function">LPOLESTR *pszPropertiesToReturn,<span class="comment">// Properties to return for crossRef objects found. NULL returns all set properties.</span></span></span></span><br><span class="line"><span class="params"><span class="function">BOOL bIsVerbose<span class="comment">//TRUE means display all properties for the found objects are displayed.</span></span></span></span><br><span class="line"><span class="params"><span class="function"><span class="comment">//FALSE means only the RDN</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!pContainerToSearch)</span><br><span class="line"><span class="keyword">return</span> E_POINTER;</span><br><span class="line"></span><br><span class="line">LPOLESTR pszNonVerboseList[] = &#123; <span class="string">L&quot;name&quot;</span>,<span class="string">L&quot;distinguishedName&quot;</span> &#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> ulNonVbPropsCount = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;%s\n&quot;</span>, szFilter);</span><br><span class="line"><span class="comment">// Specify subtree search</span></span><br><span class="line">ADS_SEARCHPREF_INFO SearchPrefs;</span><br><span class="line">SearchPrefs.dwSearchPref = ADS_SEARCHPREF_SEARCH_SCOPE;</span><br><span class="line">SearchPrefs.vValue.dwType = ADSTYPE_INTEGER;</span><br><span class="line">SearchPrefs.vValue.Integer = ADS_SCOPE_SUBTREE;</span><br><span class="line">DWORD dwNumPrefs = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// COL for iterations</span></span><br><span class="line">LPOLESTR pszColumn = <span class="literal">NULL</span>;</span><br><span class="line">ADS_SEARCH_COLUMN col;</span><br><span class="line">HRESULT hr;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Interface Pointers</span></span><br><span class="line">IADs *pObj = <span class="literal">NULL</span>;</span><br><span class="line">IADs *pIADs = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handle used for searching</span></span><br><span class="line">ADS_SEARCH_HANDLE hSearch = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set the search preference</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">SetSearchPreference</span>(&amp;SearchPrefs, dwNumPrefs);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> hr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LPOLESTR pszBool = <span class="literal">NULL</span>;</span><br><span class="line">DWORD dwBool;</span><br><span class="line">PSID pObjectSID = <span class="literal">NULL</span>;</span><br><span class="line">LPOLESTR szSID = <span class="literal">NULL</span>;</span><br><span class="line">LPOLESTR szDSGUID = <span class="keyword">new</span> WCHAR[<span class="number">39</span>];</span><br><span class="line">LPGUID pObjectGUID = <span class="literal">NULL</span>;</span><br><span class="line">FILETIME filetime;</span><br><span class="line">SYSTEMTIME systemtime;</span><br><span class="line">DATE date;</span><br><span class="line">VARIANT varDate;</span><br><span class="line">LARGE_INTEGER liValue;</span><br><span class="line">LPOLESTR *pszPropertyList = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> iCount = <span class="number">0</span>;</span><br><span class="line">DWORD x = <span class="number">0L</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!bIsVerbose)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Return non-verbose list properties only</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">ExecuteSearch</span>(szFilter,</span><br><span class="line">pszNonVerboseList,</span><br><span class="line">ulNonVbPropsCount,</span><br><span class="line">&amp;hSearch</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!pszPropertiesToReturn)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Return all properties.</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">ExecuteSearch</span>(szFilter,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="number">-1L</span>,</span><br><span class="line">&amp;hSearch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Specified subset.</span></span><br><span class="line">pszPropertyList = pszPropertiesToReturn;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Return specified properties</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">ExecuteSearch</span>(szFilter,</span><br><span class="line">pszPropertyList,</span><br><span class="line"><span class="built_in">sizeof</span>(pszPropertyList) / <span class="built_in">sizeof</span>(LPOLESTR),</span><br><span class="line">&amp;hSearch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Call IDirectorySearch::GetNextRow() to retrieve the next row of data</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetFirstRow</span>(hSearch);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (hr != S_ADS_NOMORE_ROWS)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Keep track of count.</span></span><br><span class="line">iCount++;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;--------------------------------------------------------------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Loop through the array of passed column names, print the data for each column</span></span><br><span class="line"><span class="keyword">while</span> (pContainerToSearch-&gt;<span class="built_in">GetNextColumnName</span>(hSearch, &amp;pszColumn) != S_ADS_NOMORE_COLUMNS)</span><br><span class="line">&#123;</span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetColumn</span>(hSearch, pszColumn, &amp;col);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Print the data for the column and free the column</span></span><br><span class="line"><span class="comment">// Get the data for this column</span></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[+] %s:\n&quot;</span>, col.pszAttrName);</span><br><span class="line"><span class="keyword">switch</span> (col.dwADsType)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_DN_STRING:</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">wcscmp</span>(<span class="string">L&quot;member&quot;</span>, col.pszAttrName) == <span class="number">0</span>) &#123;</span><br><span class="line">IADsNameTranslate *pNto;</span><br><span class="line">BSTR bstr;</span><br><span class="line"></span><br><span class="line">hr = <span class="built_in">CoCreateInstance</span>(CLSID_NameTranslate,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">CLSCTX_INPROC_SERVER,</span><br><span class="line">IID_IADsNameTranslate,</span><br><span class="line">(<span class="type">void</span>**)&amp;pNto);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line">hr = pNto-&gt;<span class="built_in">Set</span>(ADS_NAME_TYPE_1779, col.pADsValues[x].DNString);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line">hr = pNto-&gt;<span class="built_in">Get</span>(ADS_NAME_TYPE_NT4, &amp;bstr);</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, bstr);</span><br><span class="line"><span class="built_in">SysFreeString</span>(bstr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pNto-&gt;<span class="built_in">Release</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, col.pADsValues[x].DNString);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_CASE_EXACT_STRING:</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_CASE_IGNORE_STRING:</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_PRINTABLE_STRING:</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_NUMERIC_STRING:</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_TYPEDNAME:</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_FAXNUMBER:</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_PATH:</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_OBJECT_CLASS:</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, col.pADsValues[x].CaseIgnoreString);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_BOOLEAN:</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line">dwBool = col.pADsValues[x].Boolean;</span><br><span class="line">pszBool = dwBool ? <span class="string">L&quot;TRUE&quot;</span> : <span class="string">L&quot;FALSE&quot;</span>;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, pszBool);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_INTEGER:</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %d\r\n&quot;</span>, col.pADsValues[x].Integer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_OCTET_STRING:</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;objectSID&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line">pObjectSID = (PSID)(col.pADsValues[x].OctetString.lpValue);</span><br><span class="line"><span class="comment">// Convert SID to string.</span></span><br><span class="line"><span class="built_in">ConvertSidToStringSid</span>(pObjectSID, &amp;szSID);</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, szSID);</span><br><span class="line"><span class="built_in">LocalFree</span>(szSID);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((_wcsicmp(col.pszAttrName, <span class="string">L&quot;objectGUID&quot;</span>) == <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Cast to LPGUID</span></span><br><span class="line">pObjectGUID = (LPGUID)(col.pADsValues[x].OctetString.lpValue);</span><br><span class="line"><span class="comment">// Convert GUID to string.</span></span><br><span class="line">::<span class="built_in">StringFromGUID2</span>(*pObjectGUID, szDSGUID, <span class="number">39</span>);</span><br><span class="line"><span class="comment">// Print the GUID</span></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, szDSGUID);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    Value of type Octet String. No Conversion.\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_UTC_TIME:</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line">systemtime = col.pADsValues[x].UTCTime;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SystemTimeToVariantTime</span>(&amp;systemtime,</span><br><span class="line">&amp;date) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Pack in variant.vt</span></span><br><span class="line">varDate.vt = VT_DATE;</span><br><span class="line">varDate.date = date;</span><br><span class="line"><span class="built_in">VariantChangeType</span>(&amp;varDate, &amp;varDate, VARIANT_NOVALUEPROP, VT_BSTR);</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, varDate.bstrVal);</span><br><span class="line"><span class="built_in">VariantClear</span>(&amp;varDate);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] Could not convert UTC-Time.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_LARGE_INTEGER:</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line">liValue = col.pADsValues[x].LargeInteger;</span><br><span class="line">filetime.dwLowDateTime = liValue.LowPart;</span><br><span class="line">filetime.dwHighDateTime = liValue.HighPart;</span><br><span class="line"><span class="keyword">if</span> ((filetime.dwHighDateTime == <span class="number">0</span>) &amp;&amp; (filetime.dwLowDateTime == <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    No value set.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Check for properties of type LargeInteger that represent time</span></span><br><span class="line"><span class="comment">// if TRUE, then convert to variant time.</span></span><br><span class="line"><span class="keyword">if</span> ((<span class="number">0</span> == <span class="built_in">wcscmp</span>(<span class="string">L&quot;accountExpires&quot;</span>, col.pszAttrName)) |</span><br><span class="line">(<span class="number">0</span> == <span class="built_in">wcscmp</span>(<span class="string">L&quot;badPasswordTime&quot;</span>, col.pszAttrName)) ||</span><br><span class="line">(<span class="number">0</span> == <span class="built_in">wcscmp</span>(<span class="string">L&quot;lastLogon&quot;</span>, col.pszAttrName)) ||</span><br><span class="line">(<span class="number">0</span> == <span class="built_in">wcscmp</span>(<span class="string">L&quot;lastLogoff&quot;</span>, col.pszAttrName)) ||</span><br><span class="line">(<span class="number">0</span> == <span class="built_in">wcscmp</span>(<span class="string">L&quot;lockoutTime&quot;</span>, col.pszAttrName)) ||</span><br><span class="line">(<span class="number">0</span> == <span class="built_in">wcscmp</span>(<span class="string">L&quot;pwdLastSet&quot;</span>, col.pszAttrName))</span><br><span class="line">)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Handle special case for Never Expires where low part is -1</span></span><br><span class="line"><span class="keyword">if</span> (filetime.dwLowDateTime == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    Never Expires.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FileTimeToLocalFileTime</span>(&amp;filetime, &amp;filetime) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FileTimeToSystemTime</span>(&amp;filetime,</span><br><span class="line">&amp;systemtime) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SystemTimeToVariantTime</span>(&amp;systemtime,</span><br><span class="line">&amp;date) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Pack in variant.vt</span></span><br><span class="line">varDate.vt = VT_DATE;</span><br><span class="line">varDate.date = date;</span><br><span class="line"><span class="built_in">VariantChangeType</span>(&amp;varDate, &amp;varDate, VARIANT_NOVALUEPROP, VT_BSTR);</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    %s\r\n&quot;</span>, varDate.bstrVal);</span><br><span class="line"><span class="built_in">VariantClear</span>(&amp;varDate);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    FileTimeToVariantTime failed\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    FileTimeToSystemTime failed\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    FileTimeToLocalFileTime failed\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Print the LargeInteger.</span></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    high: %d low: %d\r\n&quot;</span>, filetime.dwHighDateTime, filetime.dwLowDateTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ADSTYPE_NT_SECURITY_DESCRIPTOR:</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x&lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;    Security descriptor.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] Unknown type %d.\n&quot;</span>, col.dwADsType);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pContainerToSearch-&gt;<span class="built_in">FreeColumn</span>(&amp;col);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">CoTaskMemFree</span>(pszColumn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get the next row</span></span><br><span class="line">hr = pContainerToSearch-&gt;<span class="built_in">GetNextRow</span>(hSearch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Close the search handle to clean up</span></span><br><span class="line">pContainerToSearch-&gt;<span class="built_in">CloseSearchHandle</span>(hSearch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr) &amp;&amp; <span class="number">0</span> == iCount)</span><br><span class="line">hr = S_FALSE;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;--------------------------------------------------------------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> hr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">wmain</span><span class="params">(<span class="type">int</span> argc, <span class="type">wchar_t</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nThis program queries for objects in the current user&#x27;s domain.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Usage:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws &lt;ADS path&gt; &lt;search string&gt; &lt;outputdata&gt;\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Eg.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws Current \&quot;(&amp;(objectClass=user)(objectCategory=person))\&quot; ShortData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws Current \&quot;(&amp;(objectCategory=computer)(objectClass=computer))\&quot; ShortData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws \&quot;OU=Domain Controllers,DC=test,DC=com\&quot; \&quot;(&amp;(objectCategory=computer)(objectClass=computer))\&quot; ShortData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws Current \&quot;(&amp;(objectCategory=group))\&quot; ShortData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws Current \&quot;(&amp;(objectCategory=organizationalUnit))\&quot; ShortData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws Current \&quot;(&amp;(objectClass=user)(objectCategory=person)(name=testa))\&quot; AllData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws Current \&quot;(&amp;(objectCategory=computer)(objectClass=computer)(name=COMPUTER01))\&quot; AllData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     %ws Current \&quot;(&amp;(objectCategory=group)(name=Domain Admins))\&quot; AllData\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> maxAlloc = MAX_PATH * <span class="number">2</span>;</span><br><span class="line">LPOLESTR pszBuffer = <span class="keyword">new</span> OLECHAR[maxAlloc];</span><br><span class="line"><span class="built_in">wcscpy_s</span>(pszBuffer, maxAlloc, <span class="string">L&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IS_BUFFER_ENOUGH</span>(maxAlloc, pszBuffer, argv[<span class="number">2</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wcscpy_s</span>(pszBuffer, maxAlloc, argv[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;Buffer is too small for the argument&quot;</span>);</span><br><span class="line"><span class="keyword">delete</span>[] pszBuffer;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL bReturnVerbose = FALSE;</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(argv[<span class="number">3</span>], <span class="string">L&quot;AllData&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">bReturnVerbose = TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">HRESULT hr = S_OK;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get rootDSE and the current user&#x27;s domain container DN.</span></span><br><span class="line">IADs *pObject = <span class="literal">NULL</span>;</span><br><span class="line">IDirectorySearch *pContainerToSearch = <span class="literal">NULL</span>;</span><br><span class="line">LPOLESTR szPath = <span class="keyword">new</span> OLECHAR[MAX_PATH];</span><br><span class="line">VARIANT var;</span><br><span class="line">hr = <span class="built_in">ADsOpenObject</span>(<span class="string">L&quot;LDAP://rootDSE&quot;</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">ADS_SECURE_AUTHENTICATION, <span class="comment">// Use Secure Authentication</span></span><br><span class="line">IID_IADs,</span><br><span class="line">(<span class="type">void</span>**)&amp;pObject);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] Could not execute query. Could not bind to LDAP://rootDSE.\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pObject)</span><br><span class="line">pObject-&gt;<span class="built_in">Release</span>();</span><br><span class="line"><span class="keyword">delete</span>[] pszBuffer;</span><br><span class="line"><span class="keyword">delete</span>[] szPath;</span><br><span class="line"><span class="built_in">CoUninitialize</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flush STDOUT</span></span><br><span class="line"><span class="built_in">fflush</span>(stdout);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line">hr = pObject-&gt;<span class="built_in">Get</span>(<span class="string">L&quot;defaultNamingContext&quot;</span>, &amp;var);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wcscpy_s</span>(szPath, MAX_PATH, <span class="string">L&quot;LDAP://&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(argv[<span class="number">1</span>], <span class="string">L&quot;Current&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Build path to the domain container.</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IS_BUFFER_ENOUGH</span>(MAX_PATH, szPath, var.bstrVal) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wcscat_s</span>(szPath, MAX_PATH, var.bstrVal);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] Buffer is too small for the domain DN&quot;</span>);</span><br><span class="line"><span class="keyword">delete</span>[] pszBuffer;</span><br><span class="line"><span class="keyword">delete</span>[] szPath;</span><br><span class="line"><span class="built_in">CoUninitialize</span>();</span><br><span class="line"><span class="comment">// Flush STDOUT</span></span><br><span class="line"><span class="built_in">fflush</span>(stdout);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IS_BUFFER_ENOUGH</span>(MAX_PATH, szPath, argv[<span class="number">1</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wcscat_s</span>(szPath, MAX_PATH, argv[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;%s\n&quot;</span>, szPath);</span><br><span class="line"></span><br><span class="line">hr = <span class="built_in">ADsOpenObject</span>(szPath,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">ADS_SECURE_AUTHENTICATION, <span class="comment">// Use Secure Authentication</span></span><br><span class="line">IID_IDirectorySearch,</span><br><span class="line">(<span class="type">void</span>**)&amp;pContainerToSearch);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line">hr = <span class="built_in">Search</span>(pContainerToSearch, <span class="comment">//IDirectorySearch pointer to Partitions container.</span></span><br><span class="line">pszBuffer,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">bReturnVerbose</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (S_FALSE == hr)</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] No object could be found.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0x8007203e</span> == hr)</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] Could not execute query. An invalid filter was specified.\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] Query failed to run. HRESULT: %x\n&quot;</span>, hr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;[!] Could not execute query. Could not bind to the container.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pContainerToSearch)</span><br><span class="line">pContainerToSearch-&gt;<span class="built_in">Release</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">VariantClear</span>(&amp;var);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pObject)</span><br><span class="line">pObject-&gt;<span class="built_in">Release</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span>[] pszBuffer;</span><br><span class="line"><span class="keyword">delete</span>[] szPath;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uninitialize COM</span></span><br><span class="line"><span class="built_in">CoUninitialize</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flush STDOUT</span></span><br><span class="line"><span class="built_in">fflush</span>(stdout);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：windows 环境下获取域用户信息&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="AD" scheme="http://example.com/categories/A-OS/Windows/AD/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="AD" scheme="http://example.com/tags/AD/"/>
    
    <category term="域" scheme="http://example.com/tags/%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>【AD】用户属性</title>
    <link href="http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7/"/>
    <id>http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7/</id>
    <published>2024-01-19T04:06:36.814Z</published>
    <updated>2024-02-02T07:54:40.701Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：AD 用户属性</p><p>参考链接：</p><ul><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/ad/user-object-attributes">用户对象属性 - Win32 apps | Microsoft Learn</a></li></ul></blockquote><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：AD 用户属性&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/windows/win32/ad/user-object-attributes&quot;&gt;用户对象属性 - Win32 apps | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="AD" scheme="http://example.com/categories/A-OS/Windows/AD/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="AD" scheme="http://example.com/tags/AD/"/>
    
  </entry>
  
  <entry>
    <title>【AD】相关函数调用</title>
    <link href="http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/"/>
    <id>http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</id>
    <published>2024-01-19T03:03:21.586Z</published>
    <updated>2024-02-02T07:54:42.321Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述： AD 调用函数中相关函数的使用整理</p></blockquote><span id="more"></span><h2 id="0x01-时间转换"><a href="#0x01-时间转换" class="headerlink" title="0x01 时间转换"></a>0x01 时间转换</h2><p>相关链接：</p><ol><li><a href="https://learn.microsoft.com/zh-CN/windows/win32/api/timezoneapi/nf-timezoneapi-filetimetosystemtime">FileTimeToSystemTime 函数 (timezoneapi.h) - Win32 apps | Microsoft Learn</a></li><li><a href="https://learn.microsoft.com/zh-cn/troubleshoot/windows-server/identity/convert-datetime-attributes-to-standard-format">如何将 Active Directory 中的日期&#x2F;时间属性转换为标准时间格式 - Windows Server | Microsoft Learn</a></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;lastLogon&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ADS_UTC_TIME tm = col.pADsValues-&gt;UTCTime;</span><br><span class="line">    SYSTEMTIME monTS;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FileTimeToSystemTime</span>(<span class="built_in">reinterpret_cast</span>&lt;PFILETIME&gt;(&amp;tm), &amp;monTS) != FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        CStringA sTime;</span><br><span class="line">        sTime.<span class="built_in">Format</span>(<span class="string">&quot;%04d-%02d-%02d %02d:%02d:%02d&quot;</span>, monTS.wYear, monTS.wMonth, monTS.wDay, monTS.wHour, monTS.wMinute, monTS.wSecond);</span><br><span class="line"></span><br><span class="line">        uAccount.strLastLogon = sTime;</span><br><span class="line">    &#125;</span><br><span class="line">    uAccount.tmLastLogon = col.pADsValues-&gt;Timestamp.WholeSeconds;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x02-封装函数"><a href="#0x02-封装函数" class="headerlink" title="0x02 封装函数"></a>0x02 封装函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_USERACCOUNT</span></span><br><span class="line">&#123;</span><br><span class="line">std::string     UserName;               <span class="comment">// 用户名</span></span><br><span class="line">std::string     strDomain;              <span class="comment">// 所在域</span></span><br><span class="line">std::string     strGroup;               <span class="comment">// 所在组</span></span><br><span class="line">std::string     strSID;                 <span class="comment">// SID</span></span><br><span class="line">std::string     strHomePath;            <span class="comment">// home </span></span><br><span class="line"><span class="type">bool</span>        bDisabled;              <span class="comment">// 是否禁用</span></span><br><span class="line"><span class="type">bool</span>        bAdmin;                 <span class="comment">// 是否管理员</span></span><br><span class="line"><span class="type">__time64_t</span>  tmLastLogon;            <span class="comment">// 最后登录时间</span></span><br><span class="line">std::stringstrLastLogon;            <span class="comment">// 最后登录时间</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>    dwPwStatus;             <span class="comment">// 密码状态， 已设置 1， 空密码 2， 已锁定 3 域用户：1 需要密码 2 无需密码</span></span><br><span class="line">std::string    strPwdChangeTime;       <span class="comment">// 密码修改时间</span></span><br><span class="line">std::string    strPwdExpireTime;       <span class="comment">// 密码过期时间</span></span><br><span class="line">std::string    strAccountType;          <span class="comment">// 1 本地账户，2全局账户 3 域用户</span></span><br><span class="line">std::string    strIsDomain;             <span class="comment">// 1 是，2不是</span></span><br><span class="line">&#125;UserAccount;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">ConvertColToUAStruct</span><span class="params">(<span class="type">const</span> ADS_SEARCH_COLUMN&amp; col, UserAccount&amp; uAccount)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (col.dwADsType == ADSTYPE_CASE_IGNORE_STRING)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; col.dwNumValues; x++) &#123;</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;sAMAccountName&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">uAccount.UserName = col.pADsValues-&gt;CaseIgnoreString;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (col.dwADsType == ADSTYPE_INTEGER)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;userAccountControl&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">uAccount.bDisabled = ((col.pADsValues-&gt;Integer &amp; ADS_UF_ACCOUNTDISABLE) == ADS_UF_ACCOUNTDISABLE) ? TRUE : FALSE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((ADS_UF_PASSWD_NOTREQD &amp; col.pADsValues-&gt;Integer) == ADS_UF_PASSWD_NOTREQD)</span><br><span class="line">&#123;</span><br><span class="line">uAccount.dwPwStatus = PASSWORD_TYPE_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((ADS_UF_LOCKOUT &amp; col.pADsValues-&gt;Integer) == ADS_UF_LOCKOUT)</span><br><span class="line">&#123;</span><br><span class="line">uAccount.dwPwStatus = PASSWORD_TYPE_LOCK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">uAccount.dwPwStatus = PASSWORD_TYPE_REQ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;ms-DS-User-Account-Control-Computed&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">uAccount.bDisabled = ((col.pADsValues-&gt;Integer &amp; ADS_UF_ACCOUNTDISABLE) == ADS_UF_ACCOUNTDISABLE) ? TRUE : FALSE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((ADS_UF_LOCKOUT &amp; col.pADsValues-&gt;Integer) == ADS_UF_LOCKOUT)</span><br><span class="line">&#123;</span><br><span class="line">uAccount.dwPwStatus = PASSWORD_TYPE_LOCK;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;maxPwdAge&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">CStringW strTime;</span><br><span class="line">DWORD Days = col.pADsValues-&gt;LargeInteger.QuadPart / <span class="number">1000</span> / <span class="number">1000</span> / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>;</span><br><span class="line">strTime.<span class="built_in">Format</span>(<span class="string">L&quot;%d day(s)&quot;</span>, Days);</span><br><span class="line">uAccount.strPwdExpireTime = strTime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;lastLogonTimestamp&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ADS_LARGE_INTEGER strValue = col.pADsValues-&gt;LargeInteger;</span><br><span class="line">uAccount.tmLastLogon = strValue.QuadPart;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (col.dwADsType == ADSTYPE_LARGE_INTEGER)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;lastLogon&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ADS_UTC_TIME tm = col.pADsValues-&gt;UTCTime;</span><br><span class="line">SYSTEMTIME monTS;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FileTimeToSystemTime</span>(<span class="built_in">reinterpret_cast</span>&lt;PFILETIME&gt;(&amp;tm), &amp;monTS) != FALSE)</span><br><span class="line">&#123;</span><br><span class="line">CStringA sTime;</span><br><span class="line">sTime.<span class="built_in">Format</span>(<span class="string">&quot;%04d-%02d-%02d %02d:%02d:%02d&quot;</span>, monTS.wYear, monTS.wMonth, monTS.wDay, monTS.wHour, monTS.wMinute, monTS.wSecond);</span><br><span class="line"></span><br><span class="line">uAccount.strLastLogon = sTime;</span><br><span class="line">&#125;</span><br><span class="line">uAccount.tmLastLogon = col.pADsValues-&gt;Timestamp.WholeSeconds;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;pwdLastSet&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ADS_UTC_TIME tm = col.pADsValues-&gt;UTCTime;</span><br><span class="line">SYSTEMTIME monTS;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FileTimeToSystemTime</span>(<span class="built_in">reinterpret_cast</span>&lt;PFILETIME&gt;(&amp;tm), &amp;monTS) != FALSE)</span><br><span class="line">&#123;</span><br><span class="line">CStringA sTime;</span><br><span class="line">sTime.<span class="built_in">Format</span>(<span class="string">&quot;%04d-%02d-%02d %02d:%02d:%02d&quot;</span>, monTS.wYear, monTS.wMonth, monTS.wDay, monTS.wHour, monTS.wMinute, monTS.wSecond);</span><br><span class="line"></span><br><span class="line">uAccount.strPwdChangeTime = sTime;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (col.dwADsType == ADSTYPE_OCTET_STRING)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; col.dwNumValues; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;objectSid&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">PSID pObjectSID = <span class="literal">NULL</span>;</span><br><span class="line">LPWSTR lpSID = <span class="literal">NULL</span>;</span><br><span class="line">pObjectSID = (PSID)(col.pADsValues[x].OctetString.lpValue);</span><br><span class="line"><span class="comment">// Convert SID to string.</span></span><br><span class="line"><span class="built_in">ConvertSidToStringSidW</span>(pObjectSID, &amp;lpSID);</span><br><span class="line">uAccount.strSID = lpSID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (lpSID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">LocalFree</span>(lpSID);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (col.dwADsType == ADSTYPE_BOOLEAN)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; col.dwNumValues; x++) &#123;</span><br><span class="line"><span class="keyword">if</span> (_wcsicmp(col.pszAttrName, <span class="string">L&quot;isCriticalSystemObject&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">uAccount.bAdmin = col.pADsValues-&gt;Boolean;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述： AD 调用函数中相关函数的使用整理&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="AD" scheme="http://example.com/categories/A-OS/Windows/AD/"/>
    
    
  </entry>
  
  <entry>
    <title>【AD】RootDSE</title>
    <link href="http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91RootDSE/"/>
    <id>http://example.com/A_OS/Windows/AD/%E3%80%90AD%E3%80%91RootDSE/</id>
    <published>2024-01-19T02:40:59.588Z</published>
    <updated>2024-02-02T07:54:38.953Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：RootDSE 属性描述及使用</p><p>参考链接：</p><ul><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/adschema/rootdse">RootDSE (AD 架构) - Win32 apps | Microsoft Learn</a></li></ul></blockquote><span id="more"></span><h2 id="0x01-roorDSE"><a href="#0x01-roorDSE" class="headerlink" title="0x01 roorDSE"></a>0x01 roorDSE</h2><p>rootDSE 是每个目录服务器上的已知可靠位置，用于获取域、架构和配置容器的可分辨名称，以及有关服务器及其目录数据树内容的其他数据。 这些属性很少在特定服务器上发生更改。 应用程序可以在启动时读取这些属性，并在整个会话中使用它们。</p><p>总之，应用程序应使用无服务器绑定绑定到当前域上的目录，使用 rootDSE 获取命名空间的可分辨名称，并使用该可分辨名称绑定到命名空间中的对象。</p><p>在 LDAP 3.0 中，rootDSE 定义为目录服务器上的目录数据树的根。 rootDSE 不属于任何命名空间。 rootDSE 的用途是提供有关目录服务器的数据。 下面是用于绑定到 rootDSE 的绑定字符串。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LDAP:<span class="comment">//&lt;servername&gt;/rootDSE</span></span><br></pre></td></tr></table></figure><p>servername &lt;&gt; 是服务器的 DNS 名称。 servername &lt;&gt; 是可选的，如以下格式所示。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LDAP:<span class="comment">//rootDSE</span></span><br></pre></td></tr></table></figure><h2 id="0x02-rootDSE的使用"><a href="#0x02-rootDSE的使用" class="headerlink" title="0x02 rootDSE的使用"></a>0x02 rootDSE的使用</h2><p>参考代码：<a href="https://github.com/outflanknl/C2-Tool-Collection/blob/e371a38c717edaf1650923575ab33bee0dd3e0ee/BOF/SprayAD/SOURCE/SprayAD.c">C2-Tool-Collection&#x2F;BOF&#x2F;SprayAD&#x2F;SOURCE&#x2F;SprayAD.c at e371a38c717edaf1650923575ab33bee0dd3e0ee · outflanknl&#x2F;C2-Tool-Collection</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hr = <span class="built_in">ADsOpenObject</span>(<span class="string">L&quot;LDAP://rootDSE&quot;</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">ADS_USE_SEALING | ADS_USE_SIGNING | ADS_SECURE_AUTHENTICATION, <span class="comment">// Use Kerberos encryption</span></span><br><span class="line">IADsIID,</span><br><span class="line">(<span class="type">void</span>**)&amp;pRoot);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line"><span class="built_in">Debug_ErrorStr</span>(<span class="string">L&quot;Failed to get rootDSE.\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> CleanUp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：RootDSE 属性描述及使用&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/windows/win32/adschema/rootdse&quot;&gt;RootDSE (AD 架构) - Win32 apps | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="AD" scheme="http://example.com/categories/A-OS/Windows/AD/"/>
    
    
  </entry>
  
  <entry>
    <title>【Linux防火墙】iptables</title>
    <link href="http://example.com/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/"/>
    <id>http://example.com/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/</id>
    <published>2024-01-16T06:22:10.861Z</published>
    <updated>2024-01-21T01:55:17.283Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：随着网络的逐渐普及，人们对其的需求越来越强，各种服务，平台应运而生，而平台与服务在公网的暴露也增加了受攻击的风险，而 Linux 中的最重要的守护神 iptables 的地位也显得越来越重要。本实验将带大家初识 iptables。当然学习本实验之前有一定的网络基础知识能够帮助理解。</p><p>实验涉及的知识点</p><ul><li>iptables 的发展</li><li>iptables 的结构</li><li>iptables 的使用</li></ul></blockquote><span id="more"></span><h2 id="0x01-iptables-的发展"><a href="#0x01-iptables-的发展" class="headerlink" title="0x01 iptables 的发展"></a>0x01 iptables 的发展</h2><p>上个实验中我们了解到，防火墙也就是工作在主机或者网络边缘，对进出的报文按事先设定的规则进行检查，并对匹配的数据包做出处理的一组硬件或者是软件，设置软硬件的结合体。</p><p>而在 Linux 的中的防火墙当然也就是那么一组软件对数据包的处理，Linux 中的防火墙主要是进行一些包的过滤，而这套防火墙也不是一开始便如此的强大，是这样的一个发展过程：</p><ul><li>Linux内核2.0： ipfwadm</li><li>Linux内核2.2： ipchains</li><li>Linux内核2.4： iptables</li></ul><p>而为什么随着内核版本的升级，我们的使用的防火墙也在不断地变化，首先 ipchains 相较于 ipfwadm 有这样一些优势：</p><ul><li>Qos（Quality of service）的支持</li><li>ipchains 是树形结构的链，而 ipfwadm 是线性的结构，树形结构能够做到在自己拥有链的情况下再去接受其他跳转过来的链</li><li>ipchains 比 ipfwadm 在配置上更加的灵活</li><li>ipchains 可以明确地过滤任何的 ip 协议，不仅仅是 TCP、UDP、ICMP</li></ul><p>　</p><p>而 iptables 之所以能够替代 ipchains 是因为它具有以下一些优势：</p><ul><li>可以追踪有状态的 IPV4 的协议与应用</li><li>可以追踪有状态的 IPV6 的协议</li><li>能够做到 NAT 的 一对多与多对多</li><li>内建的 PORTFW 功能</li></ul><p>若想了解很多的信息可以在<a href="http://tldp.docs.sk/howto/linux-ip-masquerade/kernel-2.4.x-requirements.html">这里</a>看到</p><p>iptables 就是目前工作于较新版（内核版本高过2.4的） Linux 内核中的强大的数据包过滤的软件，它主要是由两部分组成</p><ul><li>iptalbes：主要工作于用户空间，为用户提供了一个编辑规则的接口。</li><li>netfilter：主要工作于内核空间，是内核的一部分，由一些过滤表组成。</li></ul><p>netfilter 工作于系统的内核空间，最底层的工作，所以真正令过滤规则生效的并不是 iptables 而是 netfilter，而 iptables 工作在 netfilter之上，是一个让用户编写规则的工具。</p><p>netfilter&#x2F;iptables 是 Rusty Russell 在1998年就开始写的一个项目，netfilter 是 Linux 内核中的一个框架，因 Linux 拥有高模块化的内核，所以 Linux 很多功能都以模块形式存在，而模块化的设计最大的优点在于“弹性”，我们可以通过Linux的模块管理工具，随心所欲地将模块载入内存与移除内存，因此 Netfilter 也是以模块的形式存在于 Linux 中。，采用极度模块化的设计，使其的拥有更好的扩充性以及很强的灵活性，提供一种特定的方式实现定制的模块，允许各种网络相关的操作。iptables 这个应用层的程序便是调用它的接口实现规则的修改。</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/1.png" class="" title="3-2-1"> （此图来源于：[维基百科](https://en.wikipedia.org/wiki/Netfilter))<h2 id="0x02-iptables-的结构"><a href="#0x02-iptables-的结构" class="headerlink" title="0x02 iptables 的结构"></a>0x02 iptables 的结构</h2><p>Netfilter 所设置的规则是存放在内存中的，而 iptables 通过 Netfilter 放出的内核接口 ip_tables 来对存放在内存中的 Netfilter 配置表进行修改。这个配置表主要由 tables、chains、target 组成。</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/2.png" class="" title="3-3-1"> 此图片来源于http://byrev.space/free/wp-content/uploads/sites/3/iptables-linux.png<p>其中表主要有这四张：</p><ul><li>filter表</li><li>NAT表</li><li>mangle表</li><li>raw表</li></ul><p>每个表中可以用的 chains 不全相同，当然 iptables 支持新建 chains，而 chains 是 Netfilter 框架中制定的对数据包的 Hook Point，Hook Point 是一个数据包通过网卡流经系统内核相应的位置时会对数据包的流向做出一定的修改，在系统上存在5个 Hook Point 的挂载点</p><ul><li>PREROUTING</li><li>INPUT</li><li>OUTPUT</li><li>FORWARD</li><li>POSTROUTING</li></ul><p>target 中大部分是通用的，当然有部分是特定使用的，这里只列举常用的几种规则，更多的规则大家可以使用 man 来查看</p><ul><li>ACCEPT：一旦包满足了指定的匹配条件，就会通过，并且不会再去匹配当前链中的其他规则或同一个表内的其他规则，但它还要通过其他表中的链</li><li>DROP：一旦包满足了指定的匹配条件，将会把该包丢弃，也就是说包的生命到此结束，不会再向前走一步，效果就是包被阻塞了。不会返回任何的消息</li><li>REJECT和DROP基本一样，一旦包满足了指定的匹配条件，将会把该包丢弃，但是它除了阻塞包之外，还向发送者返回错误信息。</li><li>SNAT：一旦包满足了指定的匹配条件，源网络地址转换</li><li>DNAT：一旦包满足了指定的匹配条件，目的网络地址转换</li><li>MASQUERADE和SNAT的作用相同，区别在于它不需要指定–to-source</li><li>REDIRECT：一旦包满足了指定的匹配条件，转发数据包一另一个端口</li><li>RETURN：一旦包满足了指定的匹配条件，使数据包返回上一层</li><li>MIRROR：颠倒IP头部中的源目地址，然后再转发包</li></ul><h2 id="0x03-filter表的认识"><a href="#0x03-filter表的认识" class="headerlink" title="0x03 filter表的认识"></a>0x03 filter表的认识</h2><p>其中 filter 表的主要作用就是对数据包的过滤，访问控制（相类似的有思科自己开发的 ACL）。该表下有三个规则链：</p><ul><li>INPUT 链：INPUT 针对那些从外进入本地，也就是目的地是本地的包</li><li>FORWARD 链：FORWARD 针对所有不是本地产生的并且目的地不是本地(即本机只是负责转发)的包</li><li>OUTPUT 链：OUTPUT 是用来针对所有本地生成的包</li></ul><p>在内核中使用 iptables_filter 这个模块，在代码中各模块都是相对独立的初始化，此模块的初始化在源码 <code>net/ipv4/netfilter/iptable_filter.c –&gt;iptable_filter_init</code> 中，我们可以在 <code>filter</code> 的初始化函数 <code>iptables_filter_init</code> 中我们可以看到注册 <code>Hook point</code> 的函数接口 <code>nf_register_hooks</code> 中是这样写的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">static struct nf_hook_ops ipt_ops[] __read_mostly = &#123;</span><br><span class="line">    #这是注册的INPUT的链</span><br><span class="line">    &#123;</span><br><span class="line">        .hook        = ipt_local_in_hook,</span><br><span class="line">        .owner        = THIS_MODULE,</span><br><span class="line">        .pf        = NFPROTO_IPV4,</span><br><span class="line">        .hooknum    = NF_INET_LOCAL_IN,</span><br><span class="line">        .priority    = NF_IP_PRI_FILTER,</span><br><span class="line">    &#125;,</span><br><span class="line">    #这是注册的FORWARD的链</span><br><span class="line">    &#123;</span><br><span class="line">        .hook        = ipt_hook,</span><br><span class="line">        .owner        = THIS_MODULE,</span><br><span class="line">        .pf        = NFPROTO_IPV4,</span><br><span class="line">        .hooknum    = NF_INET_FORWARD,</span><br><span class="line">        .priority    = NF_IP_PRI_FILTER,</span><br><span class="line">    &#125;,</span><br><span class="line">    #这里注册的是OUTPUT的链</span><br><span class="line">    &#123;</span><br><span class="line">        .hook        = ipt_local_out_hook,</span><br><span class="line">        .owner        = THIS_MODULE,</span><br><span class="line">        .pf        = NFPROTO_IPV4,</span><br><span class="line">        .hooknum    = NF_INET_LOCAL_OUT,</span><br><span class="line">        .priority    = NF_IP_PRI_FILTER,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>并且最终的调用的代码中也都调用到了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/* Returns one of the generic firewall policies, like NF_ACCEPT. */</span><br><span class="line">unsigned int</span><br><span class="line">ipt_do_table(struct sk_buff *skb,</span><br><span class="line">         unsigned int hook,</span><br><span class="line">         const struct net_device *in,</span><br><span class="line">         const struct net_device *out,</span><br><span class="line">         struct xt_table *table)</span><br></pre></td></tr></table></figure><p>由此我们了解到在 <code>filter</code> 初始化的时候便是只注册了三个 <code>Hook point</code>，当然我们可以修改源码做自己定制化的 <code>filter</code>，这里便不再过多地深入了，有兴趣的同学可以去 <a href="http://www.netfilter.org/">netfilter 的官网</a>下载源码研究研究</p><h2 id="0x04-NAT表的认识"><a href="#0x04-NAT表的认识" class="headerlink" title="0x04 NAT表的认识"></a>0x04 NAT表的认识</h2><p>其中 <code>NAT</code>（Network Address Translation） 表主要用于修改数据包的报头的 <code>IP</code> 地址、端口号等信息。可以实现数据包伪装、平衡负载、端口转发和透明代理。该表包含三个链：</p><blockquote><p><strong>NAT</strong> 是一种把内部网络的 ip 地址转换为合法的公网 ip 地址，当私有网主机和公共网主机通信的IP包经过NAT网关时，将 IP 包中的源IP或目的 IP 在私有 IP 和 NAT 的公共 IP 之间进行转换。能够有效的解决公网地址不足的问题，在一定程度上起到安全的作用</p></blockquote><ul><li><code>PREROUTING</code> 链：作用是在包刚刚到达本机时，路由之前改变它的目的地址</li><li><code>OUTPUT</code> 链：改变本地产生的包的目的地址</li><li><code>POSTROUTING</code> 链：在包就要离开防火墙之前改变其源地址</li></ul><p>我们可以通过这样一张图来了解到 Header 中的信息什么样的，NAT 具体修改的内容</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/3.png" class="" title="3-3.2"><p>NAT 分为三种类型</p><ul><li>静态 NAT（static NAT）：ip 地址在转换时是一种一对一的关系</li><li>动态 NAT（dynamic NAT 或者叫 pooled NAT）： ip 地址在转换时是一种多对多的关系</li><li>NPAT（Network Address Port Translation）：网络地址端口转换在 ip 地址的层面上来说是属于一种多对一的关系</li></ul><blockquote><p><strong>NPAT</strong>是把内部地址映射到外部网络的一个IP地址的不同端口上，，但是这里虽然是将多个内网 ip 地址转换为一个公网地址，但是这里的地址是公网地址+端口号的形式，而不是简单的一个公网地址。</p></blockquote><p>在 iptables 中我们比较常用 NPAT 的形式，而 NPAT 又细分为以下的两种：</p><ul><li>源 NAT（SNAT，Source NAT）修改数据包的源地址。源NAT改变数据流的第一个数据包的来源地址，数据包伪装就是一具SNAT的例子。</li><li>目的 NAT（DNAT，Destination NAT）修改数据包的目的地址。它是改变第一个数据包的目的地地址，如平衡负载、端口转发和透明代理就是属于 DNAT。</li></ul><p>若是要做 SNAT 的数据包需要添加到 POSTROUTING 链中。要做 DNAT 的数据包需要添加到 PREROUTING 链中。直接从本地出站的信息包的规则被添加到 OUTPUT 链中。</p><p>因为 SNAT 是修改的源地址，然后通过发送出去，给其他的网络设备解读，所以必须在发送出去之前进行 SNAT。所以数据包是送往 POSTROUTING 链，并且匹配了规则，则执行 DNAT 或 REDIRECT 目标。便可在路由之后修改源地址了。</p><p>因为 DNAT 是修改的目的地址，然后通过路由转发出去，为了使数据包得到正确路由，必须在路由之前进行 DNAT。所以数据包是送往 PREROUTING 链，并且匹配了规则，则执行 DNAT 或 REDIRECT 目标。便可在路由之前修改目的地址了。</p><blockquote><p><strong>路由</strong>是内核检查数据包的报头信息</p></blockquote><p>但是 NAT 也不是完美的，它也是有缺陷的，如我们在使用 VPN 的时候便是对数据的加密，而若是数据包的信息被修改过，该包将被丢弃，所以需要 NAT 穿透技术，感兴趣的可以更深入的研究。</p><h2 id="0x05-mangle表的认识"><a href="#0x05-mangle表的认识" class="headerlink" title="0x05 mangle表的认识"></a>0x05 mangle表的认识</h2><p>其中 mangle 表主要用于修改数据包的 TOS（Type Of Service，服务类型，根据不同的服务质量。来选择经过路由的路径）、TTL（Time To Live，生存周期，每经过一个路由器将减1，mangle 可以修改此值设定TTL要被增加的值，这个选项可以使我们的防火墙更加隐蔽，而不被 trace-routes 发现等等）以及为数据包设置 Mark 标记（特殊标记，用来做高级路由，以使不同的包能使用不同的队列要求，等等），Qos(Quality Of Service，服务质量)调整以及策略路由等应用，由于 TOS，Qos 类似的方式需要相应的路由设备支持，所以应用并不广泛。这里不做过多的讲解，这个表中包含五个规则链：PREROUTING，POSTROUTING，INPUT，OUTPUT，FORWARD。</p><h2 id="0x06-raw-表的认识"><a href="#0x06-raw-表的认识" class="headerlink" title="0x06 raw 表的认识"></a>0x06 raw 表的认识</h2><p>raw 表是自1.2.9以后版本的 iptables 新增的表，主要用于决定数据包是否被状态跟踪机制处理。在匹配数据包时，raw 表的规则要优先于其他表。包含两条规则链：OUTPUT、PREROUTING</p><h2 id="0x07-数据包的状态"><a href="#0x07-数据包的状态" class="headerlink" title="0x07 数据包的状态"></a>0x07 数据包的状态</h2><p>iptables中数据包被跟踪连接有4种不同状态：</p><ul><li>NEW：该包想要开始一个连接（重新连接或将连接重定向）</li><li>RELATED：该包是属于某个已经建立的连接所建立的新连接。例如：–icmp-type 0 ( ping 应答) 就是–icmp-type 8 (ping 请求)所RELATED出来的。</li><li>ESTABLISHED ：只要发送并接到应答，一个数据连接从NEW变为 ESTABLISHED ,而且该状态会继续匹配这个连接的后续数据包。</li><li>INVALID：数据包不能被识别属于哪个连接或没有任何状态比如内存溢出，收到不知属于哪个连接的 ICMP 错误信息，一般应该 DROP 这个状态的任何数据。</li></ul><p>我们对每一张表以及每一个链都有了一个大体上的认识，我们可以通过这样一张表了解到我们的数据包在我们的内核中是怎样的一个前进的过程，到底要经过多少次审核，多少个关卡</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/4.png" class="" title="3-3.5"><p>从这张图中我们可以了解到每个数据包的进与出都会经历这样的一个流程</p><ol><li>当有数据包进入网卡时，数据包首先到 <code>PREROUTING</code> 链中，若是有表对应的表匹配，首先应该是到 <code>raw</code> 中，然后到 <code>mangle</code> 中最后到 <code>NAT</code> 的 <code>PREROUTING</code> 链中，上文我们也提过<code>PREROUTING</code> 链中我们有机会在到内核的路由模块之前修改数据包的目的 <code>IP</code> ，然后内核的”路由模块”根据数据包目的 IP 以及内核中的路由表判断往哪里转发(注意，这个时候数据包的目的地址有可能已经被我们修改过了)</li><li>若是该数据包的目的地址就是本机的地址，也就是该数据包就是发送给本地的，那么就会进入 <code>INPUT</code> 链，而进入 <code>INPUT</code> 链首先到 <code>mangle</code> 表中看看，然后到 <code>filter</code> 表中看看。通过之后便会发给本地的相应的程序</li><li>本地相应的程序若是做出响应，产生新的数据包往外发送，数据包将进入到 <code>OUTPUT</code> 链，而在 <code>OUTPUT</code> 链中与 <code>INPUT</code> 链匹配表的顺序相同，依旧是首先查看 <code>raw</code> 表，然后查看 <code>mangle</code> 表，查看 <code>NAT</code>表 ，最后查看 <code>filter</code> 表，若是该数据包还能继续前进将会被发送到 <code>POSTROUTING</code> 链中。</li><li>若是之前该数据包的目的地址并不是本机，只是把这里当中转站的话，就会将该数据包发给 <code>FORWARD</code> 链，在 <code>FORWARD</code> 链中，依旧先查看 <code>mangle</code> 表，然后查看 <code>filter</code> 表，若是该包还能进去前进则将进入 <code>POSTROUTING</code> 链中</li><li>在 <code>POSTROUTING</code> 链中首先查看 <code>mangle</code> 表，然后查看 <code>NAT</code> 表，因为他们可以在最后发送出去之前修改数据包中的源地址。</li><li>通过这些的层层把关，最后数据包便可以从网卡发送出去了</li></ol><p>从数据包在内核中的走向我们可以得出以下几点，也是我们需要着重注意的几点：</p><ul><li><code>iptables</code> 中匹配规则的表示有顺序的，我们可以得出优先级的顺序是 <code>raw 表&gt; mangle 表&gt; NAT 表&gt; filter 表</code></li><li><code>iptables</code> 中的表里面的链的规则也是有匹配顺序的，优先级的顺序是 <code>PREROUTING &gt; INPUT FORWARD OUTPUT POSTROUTING</code></li></ul><p>我们在使用 <code>iptables</code> 的时候特别应该注意我们的规则顺序，在一个表中的规则是从上到下的读取，而一经查看到匹配的规则，便不会继续往下读取匹配，所以我们时常会遇到我们写了规则之后似乎并没有生效的情况便是这样。</p><h2 id="0x08-iptables-的使用"><a href="#0x08-iptables-的使用" class="headerlink" title="0x08 iptables 的使用"></a>0x08 iptables 的使用</h2><p>说得再多，我们得不到实际的效果，我们也不会有特别深刻的理解，我们来实际的使用一次</p><p>首先我们可以使用这样的一个命令来查看当前 iptables 中已经写下的规则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -nL</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/5.png" class="" title="3-4-1"><p>从结果中我们可以看到分布在每条链中的已经写入的规则，若我们还想到跟详细的结果可以使用这样的一个命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -nvL --line</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/6.png" class="" title="3-4-2"><ul><li>第一列 <code>num</code> 显示了该规则在该链中的顺序位置</li><li>第二列 <code>pkts</code> 显示了该规则处理的数据包数</li><li>第三列 <code>bytes</code> 显示了该规则处理的字节数，</li><li>第四列 <code>target</code> 显示了该规则所做的行为，</li><li>第五列 <code>port</code> 匹配的端口</li><li>第六列 <code>opt</code> 是 <code>TCP</code> 协议头部中 <code>options</code> 的一部分，并不是重点，我们可以不必关注，有兴趣的也可以通过<a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Protocol_operation">维基百科</a>深入了解</li><li>第七列、第八列 <code>in</code>、<code>out</code> 分别表示对从网卡进入与出去的限制 ip 的匹配条件</li><li>第九列、第十列 <code>source</code>、<code>destination</code> 表示对包中分析得出的数据源地址与数据的目的地址的匹配</li></ul><p>我们还可以通过一种方式来查看已经生效的规则，这种方式查看到的是我们直接插入的规则，而不是像以上两个命令经过分析后的结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables-save</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/7.png" class="" title="3-4-3"><p>当然 iptables-save 有一个参数 <code>-t</code> 可以指定我们要保存的表，到某个文件中去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#在执行该命令之前请先用sudo su 切换到 root 用户</span><br><span class="line">iptables-save -t filter &gt; filter.bak</span><br><span class="line"></span><br><span class="line">cat filter.bak</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/8.png" class="" title="3-4-4"><p>上我们我们提到过，<code>iptables</code> 是一个可调用内核接口来对存放在内存中的 <code>Netfilter</code> 配置表进行修改、编辑的一个工具，既然是修改的内存中的配置表，所以我们并不需要重启防火墙什么的，修改后的规则会立即生效。</p><p>我们再来回顾一下在编写规则时我们需要书写哪些参数：</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/9.png" class="" title="3-4-5"><p>我们可以做这么一个例子，将所有访问我们 <code>80</code> 端口的数据包全部丢掉</p><p>首先我们来验证 <code>80</code> 端口是开发的，可以访问的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#首先本实验环境没有装 apache 服务我们需要安装一下，然后启动服务</span><br><span class="line"></span><br><span class="line">sudo apt-get install apache2</span><br><span class="line">sudo service apache2 start</span><br><span class="line"></span><br><span class="line">netstat -lunpt | grep 80</span><br><span class="line"></span><br><span class="line">#尝试看我们能否访问该页面，若返回值为 200 则为成功访问</span><br><span class="line">curl -I localhost</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/10.png" class="" title="3-4-6"><p>然后我们来添加这么一条规则，并查看他是否写入了规则表当中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -t filter -I INPUT -p tcp --dport 80 -j DROP</span><br><span class="line"></span><br><span class="line">#仅仅只是查看 INPUT 链是否加入了这条规则</span><br><span class="line">sudo iptables -nvL INPUT</span><br><span class="line"></span><br><span class="line">#然后我们再来尝试一次，能否查看到该网页</span><br><span class="line">curl localhost</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/11.png" class="" title="3-4-7"><p>是得不到，但是为什么会一直停留在那里，是因为我们是用的 <code>DROP</code> 将所有来访问该页面的数据包丢掉，不给任何返回，响应，而 ~却很钟情的一直等待着服务端的响应。若我们将 <code>DROP</code> 行为改成 <code>REJECT</code> 的话，就会有返回信息说这个端口无法访问。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#删除我们之前添加的规则，这里没有添加 -t 的参数</span><br><span class="line">#是因为不指明该参数，系统默认为修改 filter 表</span><br><span class="line">sudo iptables -D INPUT -p tcp --dport 80 -j DROP</span><br><span class="line"></span><br><span class="line">#添加拒绝的规则</span><br><span class="line">sudo iptables -I INPUT -p tcp --dport 80 -j REJECT</span><br><span class="line"></span><br><span class="line">#再次验证</span><br><span class="line">curl localhost</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/12.png" class="" title="3-4-6"><p>通过上面的例子大家可以看到 <code>iptables</code> 已经修改便会立即生效，在修改规则的时候我们会用到各种参数，下面列出一些常用的参数</p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>-t</td><td>制定我们修改或者添加的规则是放入那个表，若是没有指定默认为 filter 表</td></tr><tr><td>-A</td><td>表示我们添加的这个规则追加在表的最后面，append</td></tr><tr><td>-I</td><td>表示我们指定位置插入当前的这个规则，insert，指定的位置写在链后面 ，若是没有指定则默认值为1，也就是将该规则添加在指定表的指定链的第一位</td></tr><tr><td>-D</td><td>删除某条规则，delete，后面可以指明具体的规则，如上面的例子，也可以指定位置，位置同样是放在链的后面</td></tr><tr><td>-F</td><td>清除所有的规则，若是后面有跟上链，便只删除该链下的所有规则</td></tr><tr><td>-L</td><td>显示规则链中已有的条目</td></tr><tr><td>-N</td><td>创建新的用户自定义规则链</td></tr><tr><td>-p</td><td>指定要匹配的数据包协议类型,如上文我们使用的tcp</td></tr><tr><td>-s</td><td>指定要匹配的数据包源ip地址</td></tr><tr><td>-i&lt;网络接口&gt;</td><td>指定数据包进入本机的网络接口</td></tr><tr><td>-o&lt;网络接口&gt;</td><td>指定数据包要离开本机所使用的网络接口</td></tr><tr><td>-j&lt;目标&gt;</td><td>指定要跳转的目标；</td></tr></tbody></table><p>如上文中我们删除一条规则的时候使用的是 -D 后面加具体的规则，其实我们还可以这样去删</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查看我们要删除的规则所在的链与位置</span><br><span class="line">sudo iptables -nvL --line</span><br><span class="line"></span><br><span class="line">#删除指定位置的规则</span><br><span class="line">sudo iptables -D INPUT 1</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/iptables/13.png" class="" title="3-4-7">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：随着网络的逐渐普及，人们对其的需求越来越强，各种服务，平台应运而生，而平台与服务在公网的暴露也增加了受攻击的风险，而 Linux 中的最重要的守护神 iptables 的地位也显得越来越重要。本实验将带大家初识 iptables。当然学习本实验之前有一定的网络基础知识能够帮助理解。&lt;/p&gt;
&lt;p&gt;实验涉及的知识点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iptables 的发展&lt;/li&gt;
&lt;li&gt;iptables 的结构&lt;/li&gt;
&lt;li&gt;iptables 的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Linux" scheme="http://example.com/categories/A-OS/Linux/"/>
    
    <category term="Linux防火墙" scheme="http://example.com/categories/A-OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
    
  </entry>
  
  <entry>
    <title>【Linux防火墙】TCP Wrappers</title>
    <link href="http://example.com/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/"/>
    <id>http://example.com/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/</id>
    <published>2024-01-16T06:15:17.596Z</published>
    <updated>2024-01-21T01:55:26.909Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：TCP wrappers 是 Linux 中两大防护措施的其中之一，这层保护通过定义哪些主机允许或不允许连接到网络服务上来实现。TCP Wrappers为多种不同的服务提供访问把关，通过本实验我们将初试TCP wrappers的使用。</p><h4 id="实验涉及的知识点"><a href="#实验涉及的知识点" class="headerlink" title="实验涉及的知识点"></a>实验涉及的知识点</h4><ul><li>Tcp wrappers的认识</li><li>Tcp wrappers的使用</li></ul></blockquote><span id="more"></span><h2 id="0x01-TCP-Wrappers-的认识"><a href="#0x01-TCP-Wrappers-的认识" class="headerlink" title="0x01 TCP Wrappers 的认识"></a>0x01 TCP Wrappers 的认识</h2><p>Tcp Wrapper 是由 Wietse Venema 编写的，其创作出这个程序的主要原因是监视 Eindhoven 大学数学和计算机科学系的Unix工作站上的黑客活动，Wietse Venema一直维护这个程序到1995年；2001年6月1日，在其自己的BSD风格的许可证下发布。</p><p>Tcp Wrapper 是一个基于主机的网络访问控制的程序，用于过滤对类 Unix 系统（如 Linux 或 BSD ）的网络访问。</p><p>当一个系统或者主机在公开网络中充当服务器时,这个系统就可能成为被攻击的目标.对网络服务进行访问控制 是一件很重要的事情。像 Telnet、SSH、FTP、POP 和 SMTP 等很多服务都会用到 TCP Wrapper,它被设计为一个介于外来服务请求和服务回应的中间处理</p><p>它的基本过程是这样的：当服务器或主机接收到一个外来服务请求的时候，先由TCP Wrapper 来对请求进行分析处理，TCP Wrapper 会根据请求所需要的服务和对这个服务所设定的规则来判断请求方是否有权限，如果有，TCP Wrapper 会把这个请求按照配置文件所设定的规则转交给相应的守护进程去处理，同时记录这个请求动作。</p><p>TCP Wrappers虽然能对 TCP 协议的报文做过滤动作，但是并不是所有的 TCP 协议报文 TCP Wrappers 都可以过滤掉。只有该服务链接到TCP Wrappers的函式库才可以使用TCP Wrappers进行报文过滤。</p><p>因为 TCP Wrapper 的功能主要来自于 libwrap.a这个静态库，它是一个服务库。像 xinetd、sshd 和 portmap 等许多服务编译时都依赖于 libwrap.so 这个动态链接库，其他的网路服务甚至你自己编写的服务都可以加上这个编译选项来提供 TCP Wrapper 的功能。</p><p>我们可以使用这样一个命令来确定我们要过滤的服务是否链接到了libwrap 这个函数库中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ldd /path/service_name |grep libwrap</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">例如</span></span><br><span class="line">ldd /usr/sbin/sshd | grep libwrap</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">若是不知道程序的所在位置可以这样</span></span><br><span class="line">ldd $(which sshd) | grep libwrap</span><br></pre></td></tr></table></figure><h2 id="0x02-TCP-Wrappers-的使用"><a href="#0x02-TCP-Wrappers-的使用" class="headerlink" title="0x02 TCP Wrappers 的使用"></a>0x02 TCP Wrappers 的使用</h2><p>要决定一个客户是否被允许连接一项服务,TCP Wrappers会参考以下两个文件：</p><ul><li>&#x2F;etc&#x2F;hosts.allow</li><li>&#x2F;etc&#x2F;hosts.deny</li></ul><p>当一个TCP Wrappers接收到一个客户请求时,它会运行以下几个步骤:</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/13.png" class="" title="2-3-1"> （此图的来源：http://images.slideplayer.com/12/3366547/slides/slide_75.jpg)<ol><li><p>检查 <code>/etc/hosts.allow</code>.TCP会绕服务会循序地解释&#x2F;etc&#x2F;hosts.allow文件并应用第一个为这个服务所指定的规则.如果找到了一个匹配的规则,则允许连接.如果找不到匹配的规则,就会进行下一个步骤。</p></li><li><p>检查 <code>/etc/hosts.deny</code>.TCP会绕的服务会循序地来解释&#x2F;etc&#x2F;hosts.deny文件.如果找到一个匹配的规则,则拒绝这个连接.如果找不到匹配的规则,则允许连接到这个服务。</p></li><li><p>若是没有匹配的规则便进入服务</p><p>在使用 TCP Wrappers 保护网络服务时应该考虑以下几个要点:</p></li></ol><ul><li>hosts.allow 或 hosts.deny 的配置改变会立即生效。</li><li>两个规则文件是有读取顺序的，hosts.allow中的规则会先被读取应用,hosts.deny中的规则后读取,如果访问一项服务在hosts.allow中设置为允许,那么在hosts.deny中同一项服务的拒绝访问设置则不会生效</li><li>规则文件内的读取也是有顺序的，每个文件中的各项规则是由上到下被读取的,第一个匹配的规则生效。因此,规则的排列顺序也很重要。</li></ul><p>我们可以通过下图看到，hosts.allow 的配置文件，默认的文档给予了我们一些例子</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/1.png" class="" title="2-3-2"><p>通过例子我们可以看出这个配置文件是有语法格式的。首先空行或以井号(#)开始的行会被忽略</p><p>每条规则都使用以下基本格式来对网络服务的访问进行控制:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;daemon list&gt;: &lt;client list&gt; [: &lt;option&gt;: &lt;option&gt;: ...]</span><br><span class="line"></span><br><span class="line">#动作可有可无</span><br><span class="line">服务程序列表： 客户机地址立标 [:执行的动作]</span><br></pre></td></tr></table></figure><p>列表中存在多个服务或者主机的时候用 <code>,</code>逗号分隔开。</p><p>例如我们要TCP Wrappers监测 10.3.1.1 这台主机向我们的 ssh 的守护进程发出链接，就拒绝掉，那么我们就把下面这条命令写在 hosts.deny 这个文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshd : 10.3.1.1</span><br></pre></td></tr></table></figure><p>我们来做这么一个实验来证明 Tcp wrappers 是起作用的</p><p>首先我们可以看到本地的 ssh 服务是开启的，并且实验能够正常地使用 ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#我们可以看到 ssh 的守护进程正在运行中</span><br><span class="line">ps -ef | grep sshd</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/2.png" class="" title="2-3-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#尝试连接我们本地的22号端口，也是成功的</span><br><span class="line">telnet localhost 22</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/3.png" class="" title="2-3-4"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#这是最直接的证明方式，直接ssh我们的本地，密码为 shiyanlou</span><br><span class="line">ssh shiyanlou@localhost</span><br><span class="line"></span><br><span class="line">#然后我们可以通过top的第一栏看到，当前存在的用户有两个，说明我们成功登入了</span><br><span class="line">top</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/4.png" class="" title="2-3-5"><p>用了这么多的方式我们证明了，ssh 是没有问题的。然后我们通过这个命令将规则写入 hosts.deny中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hosts.deny </span><br><span class="line"></span><br><span class="line">#这是需要写入的规则</span><br><span class="line">sshd: localhost</span><br></pre></td></tr></table></figure><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/5.png" class="" title="2-3-6"><p>这时候我们再来尝试连接 ssh 服务，就用以上的三种方式，可以看到 sshd 并没有停止服务，还在运行中，但是 telnet、ssh 都没有办法连接上去</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/6.png" class="" title="2-3-7"><p>若我们将 hosts.deny中的规则删除掉亦或者是注释掉，再尝试一次肯定是没有问题的。</p><p>在 hosts.deny 与 hosts.allow 的语法是支持通配符的，通配符有以下这些</p><table><thead><tr><th>通配符</th><th>作用</th></tr></thead><tbody><tr><td>ALL</td><td>完全匹配,可以用在守护进程列表和客户列表中</td></tr><tr><td>LOCAL</td><td>与任何不包括点(.)的主机匹配,也就是localhost本机</td></tr><tr><td>KNOWN</td><td>与任何带有已知主机名和主机地址匹配</td></tr><tr><td>UNKNOWN</td><td>与任何带有未知主机名和主机地址匹配</td></tr><tr><td>PARANOID</td><td>与任何带有主机名和主机地址不相匹配的主机匹配</td></tr></tbody></table><p>比如还是上面的例子</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/7.png" class="" title="2-3-8"><p>上文提到过，我们的规则是有读取顺序的，如我们在 hosts.allow 中加入 <code>ssh: LOCAL</code> 我们会发现 ssh 会是成功的，hosts.deny 中的那条规则对本机并没有生效。</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/8.png" class="" title="2-3-9"><p>模式可以用在访问规则的客户领域里,能够更有效率地匹配我们想要匹配的用户，这里只列举常用的方式，需要更深入学习的可以使用 man 命令查看</p><ol><li>主机名以点(.)开始,如果在一个主机名的开始放置一个圆点,那么就与所有共享这个主机名中列出的相同组成部分的主机匹配.如: <code>.simplecloud.com</code> 适用于匹配 <code>simplecloud.com</code> 域名内的所有主机.</li><li>IP地址以点(.)结束,如果在一个IP地址的末尾放置一个点,那么就与最后一个点前同一个网段的所有主机匹配.如: <code>192.168.</code> 适用于 <code>192.168.x.x</code> 网络内的任何主机.</li></ol><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/9.png" class="" title="2-3-10"><ol><li><code>IP地址/子网掩码</code>,这样的格式来控制某个网段的地址的访问.如: <code>192.168.1.0 /255.255.255.0</code> 适用于地址区间从<code>192.168.1.0</code> 到 <code>192.168.1.255</code> 的所有主机.</li><li>[IPv6地址] 的地址也是可以读取的</li><li>星号(*)，星号与shell中的通配符作用相同</li></ol><p>我们还可以使用这个动作来执行一些 shell 命令</p><table><thead><tr><th>动作</th><th>作用</th></tr></thead><tbody><tr><td>spawn</td><td>开启一个shell执行你指定的命令</td></tr><tr><td>twist</td><td>替换访问者的请求成我们指定的命令</td></tr></tbody></table><p>如图中，我们若是在 hosts.deny 中这样写，会有这要的反馈效果，我们可以了解到是谁试图攻击我们，想登陆我们的主机了，然后可以封掉他的 IP。</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/10.png" class="" title="图片描述"><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/11.png" class="" title="图片描述"><p>同样我们可以尝试一下 twist 的使用，在 &#x2F;etc&#x2F;hosts.deny 中写下这个命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshd : localhost : twist /bin/echo &quot;Hello，attacker，You are prohibited from accessing this service!!&quot;</span><br></pre></td></tr></table></figure><p>然后我们用 telnet 来尝试链接他，会得到这样的结果：</p><img src="/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/TCP%20Wrappers/12.png" class="" title="2-3-12"><p>在其中我们可以用到这样的一些参数，这里只列举了常用的一些参数：</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>%a</td><td>客户端的ip地址</td></tr><tr><td>%A</td><td>服务端的ip地址</td></tr><tr><td>%d</td><td>守护进程的名字</td></tr><tr><td>%h</td><td>客户端的主机名</td></tr><tr><td>%H</td><td>服务端的主机名</td></tr><tr><td>%p</td><td>守护进程的pid</td></tr><tr><td>%u</td><td>客户端的用户名</td></tr></tbody></table><p>本实验只是粗略的了解与尝试 TCP wrappers，在实际的生产环境中 xinetd 与 TCP wrappers 是黄金搭档，也同样能够做到防止 DOS 攻击，与客户端交换，控制连接数等等的高级功能。若想更加地深入的学习，大家可以多看看 man，与网上查查资料。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：TCP wrappers 是 Linux 中两大防护措施的其中之一，这层保护通过定义哪些主机允许或不允许连接到网络服务上来实现。TCP Wrappers为多种不同的服务提供访问把关，通过本实验我们将初试TCP wrappers的使用。&lt;/p&gt;
&lt;h4 id=&quot;实验涉及的知识点&quot;&gt;&lt;a href=&quot;#实验涉及的知识点&quot; class=&quot;headerlink&quot; title=&quot;实验涉及的知识点&quot;&gt;&lt;/a&gt;实验涉及的知识点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Tcp wrappers的认识&lt;/li&gt;
&lt;li&gt;Tcp wrappers的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Linux" scheme="http://example.com/categories/A-OS/Linux/"/>
    
    <category term="Linux防火墙" scheme="http://example.com/categories/A-OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
    
  </entry>
  
  <entry>
    <title>【Linux防火墙】攻击与防御</title>
    <link href="http://example.com/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/"/>
    <id>http://example.com/A_OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/</id>
    <published>2024-01-15T16:00:00.000Z</published>
    <updated>2024-01-21T01:55:54.410Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：在了解了 iptables 的结构与用法之后我们需要学会在特定的场景去应用他们，而不再是简单的纸上谈兵。本实验将带大家了解网络开放之后可能带来的攻击以及如何去预防</p><p>实验涉及的知识点</p><ul><li>DDOS 攻击</li><li>SYN 攻击</li></ul></blockquote><span id="more"></span><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：在了解了 iptables 的结构与用法之后我们需要学会在特定的场景去应用他们，而不再是简单的纸上谈兵。本实验将带大家了解网络开放之后可能带来的攻击以及如何去预防&lt;/p&gt;
&lt;p&gt;实验涉及的知识点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DDOS 攻击&lt;/li&gt;
&lt;li&gt;SYN 攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Linux" scheme="http://example.com/categories/A-OS/Linux/"/>
    
    <category term="Linux防火墙" scheme="http://example.com/categories/A-OS/Linux/Linux%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
    
  </entry>
  
</feed>
